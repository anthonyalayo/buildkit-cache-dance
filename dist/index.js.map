{"mappings":"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;QACd,MAAM,KAAK,KAAK,CAAC,EAAE,IAAI,EAAE;QACzB,MAAO,IAAI,MAAM,GAAG,EACnB,GAAG,CAAC,IAAI,KAAK,GAAG,GAAG,GAAG,CAAC,EAAE;IAE3B;IAGD,OAAO;AACR;;;;;A;A,I,wC,A,6B,0B,e,I,C,O,M,G,S,C,E,C,E,C,E,E;I,I,O,W,K;I,O,c,C,G,I;Q,Y;Q,K;Y,O,C,C,E;Q;I;A,I,S,C,E,C,E,C,E,E;I,I,O,W,K;I,C,C,G,G,C,C,E;A,C;A,I,2C,A,6B,0B,kB,I,C,O,M,G,S,C,E,C;I,O,c,C,G,W;Q,Y;Q,O;I;A,I,S,C,E,C;I,C,C,U,G;A,C;A,I,qC,A,6B,0B,Y,I,S,G;I,I,O,I,U,E,O;I,I,S,C;I,I,O,M;Q,I,I,K,I,I,M,a,O,c,C,I,C,K,I,sC,Q,K;I;I,yC,Q;I,O;A;A,I,kC,A,6B,0B,S,I,S,O,E,U,E,C,E,S;I,S,M,K;Q,O,iB,I,Q,I,E,S,O;Y,Q;Q;I;I,O,I,C,K,C,I,O,C,E,S,O,E,M;Q,S,U,K;Y,I;gB,K,U,I,C;Y,E,O,G;gB,O;Y;Q;Q,S,S,K;Y,I;gB,K,S,C,Q,C;Y,E,O,G;gB,O;Y;Q;Q,S,K,M;Y,O,I,G,Q,O,K,I,M,O,K,E,I,C,W;Q;Q,K,A,C,Y,U,K,C,S,c,E,C,E,I;I;A;A,O,c,C,2B,c;I,O;A;A,0B,Q,G,0B,S,G,0B,K,G,0B,Q,G,0B,U,G,0B,I,G,0B,M,G,0B,O,G,0B,K,G,0B,K,G,0B,O,G,0B,S,G,0B,c,G,0B,S,G,0B,e,G,0B,iB,G,0B,Q,G,0B,O,G,0B,S,G,0B,c,G,0B,Q,G,K;;A;A,I,wC,A,6B,0B,e,I,C,O,M,G,S,C,E,C,E,C,E,E;I,I,O,W,K;I,O,c,C,G,I;Q,Y;Q,K;Y,O,C,C,E;Q;I;A,I,S,C,E,C,E,C,E,E;I,I,O,W,K;I,C,C,G,G,C,C,E;A,C;A,I,2C,A,6B,0B,kB,I,C,O,M,G,S,C,E,C;I,O,c,C,G,W;Q,Y;Q,O;I;A,I,S,C,E,C;I,C,C,U,G;A,C;A,I,qC,A,6B,0B,Y,I,S,G;I,I,O,I,U,E,O;I,I,S,C;I,I,O,M;Q,I,I,K,I,I,M,a,O,c,C,I,C,K,I,sC,Q,K;I;I,yC,Q;I,O;A;A,O,c,C,2B,c;I,O;A;A,0B,K,G,0B,Y,G,K;;AItHA,MAAA,2BAAA,mCAAA;;A;AEAA,mCAAmC;AACnC,qDAAA,G,O,c,C,2B,c;I,O;A;A,0B,mB,G,0B,c,G,K;AAKA;;;CAGG,GACH,SAAgB,qCAAe,KAAU;IACvC,IAAI,UAAU,QAAQ,UAAU,WAC9B,OAAO;SACF,IAAI,OAAO,UAAU,YAAY,iBAAiB,QACvD,OAAO;IAET,OAAO,KAAK,SAAS,CAAC;AACxB;AAPA,0BAAA,cAAA,GAAA;AASA;;;;;CAKG,GACH,SAAgB,0CACd,oBAA0C;IAE1C,IAAI,CAAC,OAAO,IAAI,CAAC,sBAAsB,MAAM,EAC3C,OAAO,CAAA;IAGT,OAAO;QACL,OAAO,qBAAqB,KAAK;QACjC,MAAM,qBAAqB,SAAS;QACpC,SAAS,qBAAqB,OAAO;QACrC,KAAK,qBAAqB,WAAW;QACrC,WAAW,qBAAqB,SAAS;IAC1C;AACH;AAdA,0BAAA,mBAAA,GAAA;;;AFbA;;;;;;;;;CASG,GACH,SAAgB,mCACd,OAAe,EACf,UAA6B,EAC7B,OAAY;IAEZ,MAAM,MAAM,IAAI,8BAAQ,SAAS,YAAY;IAC7C,QAAQ,MAAM,CAAC,KAAK,CAAC,IAAI,QAAQ,KAAK,yBAAG,GAAG;AAC9C;AAPA,0BAAA,YAAA,GAAA;AASA,SAAgB,4BAAM,IAAY,EAAE,UAAU,EAAE;IAC9C,mCAAa,MAAM,CAAA,GAAI;AACzB;AAFA,0BAAA,KAAA,GAAA;AAIA,MAAM,mCAAa;AAEnB,MAAM;IAKJ,YAAY,OAAe,EAAE,UAA6B,EAAE,OAAe,CAA3E;QACE,IAAI,CAAC,SACH,UAAU;QAGZ,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,OAAO,GAAG;IACjB;IAEA,WAAA;QACE,IAAI,SAAS,mCAAa,IAAI,CAAC,OAAO;QAEtC,IAAI,IAAI,CAAC,UAAU,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,GAAG,GAAG;YAC9D,UAAU;YACV,IAAI,QAAQ;YACZ,IAAK,MAAM,OAAO,IAAI,CAAC,UAAU,CAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,MAAM;gBACvC,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI;gBAChC,IAAI,KAAK;oBACP,IAAI,OACF,QAAQ;yBAER,UAAU;oBAGZ,UAAU,GAAG,IAAG,CAAA,EAAI,qCAAe,MAAM;gBAC1C;YACF;QAEJ;QAED,UAAU,GAAG,mCAAa,iCAAW,IAAI,CAAC,OAAO,GAAG;QACpD,OAAO;IACT;AACD;AAED,SAAS,iCAAW,CAAM;IACxB,OAAO,yCAAe,GACnB,OAAO,CAAC,MAAM,OACd,OAAO,CAAC,OAAO,OACf,OAAO,CAAC,OAAO;AACpB;AAEA,SAAS,qCAAe,CAAM;IAC5B,OAAO,yCAAe,GACnB,OAAO,CAAC,MAAM,OACd,OAAO,CAAC,OAAO,OACf,OAAO,CAAC,OAAO,OACf,OAAO,CAAC,MAAM,OACd,OAAO,CAAC,MAAM;AACnB;;;;A;AI7FA,uCAAuC;A,I,wC,A,6B,0B,e,I,C,O,M,G,S,C,E,C,E,C,E,E;I,I,O,W,K;I,O,c,C,G,I;Q,Y;Q,K;Y,O,C,C,E;Q;I;A,I,S,C,E,C,E,C,E,E;I,I,O,W,K;I,C,C,G,G,C,C,E;A,C;A,I,2C,A,6B,0B,kB,I,C,O,M,G,S,C,E,C;I,O,c,C,G,W;Q,Y;Q,O;I;A,I,S,C,E,C;I,C,C,U,G;A,C;A,I,qC,A,6B,0B,Y,I,S,G;I,I,O,I,U,E,O;I,I,S,C;I,I,O,M;Q,I,I,K,I,I,M,a,O,c,C,I,C,K,I,sC,Q,K;I;I,yC,Q;I,O;A;A,O,c,C,2B,c;I,O;A;A,0B,Y,G,K;;AAEvC,mCAAmC;AACnC,qDAAA,GAEA,MAAA,2BAAA,mCAAA;;AACA,MAAA,2BAAA,mCAAA;;AAGA,SAAgB,mCAAa,OAAe,EAAE,OAAY;IACxD,MAAM,WAAW,QAAQ,GAAG,CAAC,CAAA,OAAA,EAAU,SAAS,CAAC;IACjD,IAAI,CAAC,UACH,MAAM,IAAI,MACR,CAAA,qDAAA,EAAwD,SAAS;IAGrE,IAAI,CAAC,yBAAG,UAAU,CAAC,WACjB,MAAM,IAAI,MAAM,CAAA,sBAAA,EAAyB,UAAU;IAGrD,yBAAG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","sources":["node_modules/.pnpm/isexe@2.0.0/node_modules/isexe/windows.js","node_modules/.pnpm/isexe@2.0.0/node_modules/isexe/mode.js","src/index.ts","src/inject-cache.ts","src/opts.ts","node_modules/.pnpm/mri@1.2.0/node_modules/mri/lib/index.mjs","node_modules/.pnpm/@actions+core@1.5.0/node_modules/@actions/core/lib/core.js","node_modules/.pnpm/@actions+core@1.5.0/node_modules/@actions/core/src/core.ts","node_modules/.pnpm/@actions+core@1.5.0/node_modules/@actions/core/lib/command.js","node_modules/.pnpm/@actions+core@1.5.0/node_modules/@actions/core/src/command.ts","node_modules/.pnpm/@actions+core@1.5.0/node_modules/@actions/core/lib/utils.js","node_modules/.pnpm/@actions+core@1.5.0/node_modules/@actions/core/src/utils.ts","node_modules/.pnpm/@actions+core@1.5.0/node_modules/@actions/core/lib/file-command.js","node_modules/.pnpm/@actions+core@1.5.0/node_modules/@actions/core/src/file-command.ts","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/main.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/argument.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/jsonArgument.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/comment.js","node_modules/.pnpm/vscode-languageserver-types@3.17.5/node_modules/vscode-languageserver-types/lib/umd/main.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/line.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/util.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/parser.js","node_modules/.pnpm/vscode-languageserver-textdocument@1.0.12/node_modules/vscode-languageserver-textdocument/lib/umd/main.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/parserDirective.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instruction.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/heredoc.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/variable.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/add.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/jsonInstruction.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/modifiableInstruction.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/flag.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/flagOption.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/arg.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/property.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/propertyInstruction.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/cmd.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/copy.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/env.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/entrypoint.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/from.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/healthcheck.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/label.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/onbuild.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/run.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/shell.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/stopsignal.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/workdir.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/user.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/instructions/volume.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/dockerfile.js","node_modules/.pnpm/dockerfile-ast@0.7.0/node_modules/dockerfile-ast/lib/imageTemplate.js","src/run.ts","node_modules/.pnpm/spawn-please@3.0.0/node_modules/spawn-please/src/index.js","node_modules/.pnpm/cross-spawn@7.0.6/node_modules/cross-spawn/index.js","node_modules/.pnpm/cross-spawn@7.0.6/node_modules/cross-spawn/lib/parse.js","node_modules/.pnpm/cross-spawn@7.0.6/node_modules/cross-spawn/lib/util/resolveCommand.js","node_modules/.pnpm/which@2.0.2/node_modules/which/which.js","node_modules/.pnpm/isexe@2.0.0/node_modules/isexe/index.js","node_modules/.pnpm/path-key@3.1.1/node_modules/path-key/index.js","node_modules/.pnpm/cross-spawn@7.0.6/node_modules/cross-spawn/lib/util/escape.js","node_modules/.pnpm/cross-spawn@7.0.6/node_modules/cross-spawn/lib/util/readShebang.js","node_modules/.pnpm/shebang-command@2.0.0/node_modules/shebang-command/index.js","node_modules/.pnpm/shebang-regex@3.0.0/node_modules/shebang-regex/index.js","node_modules/.pnpm/cross-spawn@7.0.6/node_modules/cross-spawn/lib/enoent.js","src/extract-cache.ts"],"sourcesContent":["module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction checkPathExt (path, options) {\n  var pathext = options.pathExt !== undefined ?\n    options.pathExt : process.env.PATHEXT\n\n  if (!pathext) {\n    return true\n  }\n\n  pathext = pathext.split(';')\n  if (pathext.indexOf('') !== -1) {\n    return true\n  }\n  for (var i = 0; i < pathext.length; i++) {\n    var p = pathext[i].toLowerCase()\n    if (p && path.substr(-p.length).toLowerCase() === p) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkStat (stat, path, options) {\n  if (!stat.isSymbolicLink() && !stat.isFile()) {\n    return false\n  }\n  return checkPathExt(path, options)\n}\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, path, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), path, options)\n}\n","module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), options)\n}\n\nfunction checkStat (stat, options) {\n  return stat.isFile() && checkMode(stat, options)\n}\n\nfunction checkMode (stat, options) {\n  var mod = stat.mode\n  var uid = stat.uid\n  var gid = stat.gid\n\n  var myUid = options.uid !== undefined ?\n    options.uid : process.getuid && process.getuid()\n  var myGid = options.gid !== undefined ?\n    options.gid : process.getgid && process.getgid()\n\n  var u = parseInt('100', 8)\n  var g = parseInt('010', 8)\n  var o = parseInt('001', 8)\n  var ug = u | g\n\n  var ret = (mod & o) ||\n    (mod & g) && gid === myGid ||\n    (mod & u) && uid === myUid ||\n    (mod & ug) && myUid === 0\n\n  return ret\n}\n","import fs from \"fs/promises\";\nimport os from \"os\";\nimport { injectCaches } from \"./inject-cache.js\";\nimport { extractCaches } from \"./extract-cache.js\";\nimport { help, parseOpts } from \"./opts.js\";\n\nasync function main(args: string[]) {\n  const opts = parseOpts(args);\n\n  if (opts.help) {\n    return help();\n  }\n\n  if (opts.extract) {\n    // Run the post step\n    await extractCaches(opts);\n  } else {\n    // Otherwise, this is the main step\n    if (process.env.GITHUB_STATE !== undefined) {\n      await fs.appendFile(process.env.GITHUB_STATE, `POST=true${os.EOL}`);\n    }\n    await injectCaches(opts);\n  }\n}\n\ntry {\n  await main(process.argv);\n} catch (err) {\n  console.error(err);\n  if (err instanceof Error) {\n    console.error(err.stack);\n  }\n  process.exit(1);\n}\n","import fs from 'fs/promises';\nimport path from 'path';\nimport { CacheOptions, Opts, getCacheMap, getMountArgsString, getTargetPath, getUID, getGID, getBuilder } from './opts.js';\nimport { run } from './run.js';\nimport { notice } from '@actions/core';\n\nasync function injectCache(cacheSource: string, cacheOptions: CacheOptions, scratchDir: string, containerImage: string, builder: string) {\n    // Clean Scratch Directory\n    await fs.rm(scratchDir, { recursive: true, force: true });\n    await fs.mkdir(scratchDir, { recursive: true });\n\n    // Prepare Cache Source Directory\n    await fs.mkdir(cacheSource, { recursive: true });\n\n    // Prepare Timestamp for Layer Cache Busting\n    const date = new Date().toISOString();\n    await fs.writeFile(path.join(cacheSource, 'buildstamp'), date);\n\n    const targetPath = getTargetPath(cacheOptions);\n    const mountArgs = getMountArgsString(cacheOptions);\n\n    // If UID OR GID are set, then add chown to restore files ownership.\n    let ownershipCommand = \"\";\n    const uid = getUID(cacheOptions);\n    const gid = getGID(cacheOptions);\n    if (uid !== \"\" || gid !== \"\") {\n        ownershipCommand = `&& chown -R ${uid}:${gid} ${targetPath}`\n    }\n\n    // Prepare Dancefile to Access Caches\n    const dancefileContent = `\nFROM ${containerImage}\nCOPY buildstamp buildstamp\nRUN --mount=${mountArgs} \\\n    --mount=type=bind,source=.,target=/var/dance-cache/${cacheSource} \\\n    cp -p -R /var/dance-cache/${cacheSource}/. ${targetPath} ${ownershipCommand} || true\n`;\n    await fs.writeFile(path.join(scratchDir, 'Dancefile.inject'), dancefileContent);\n    console.log(dancefileContent);\n\n    // Inject Data into Docker Cache\n    await run('docker', ['buildx', 'build', '--builder', builder ,'-f', path.join(scratchDir, 'Dancefile.inject'), '--tag', 'dance:inject', cacheSource]);\n\n    // Clean Directories\n    try {\n        await fs.rm(cacheSource, { recursive: true, force: true });\n    } catch (err) {\n        // Ignore Cleaning Errors\n        notice(`Error while cleaning cache source directory: ${err}. Ignoring...`);\n    }\n}\n\n\nexport async function injectCaches(opts: Opts) {\n    const cacheMap = getCacheMap(opts);\n    const scratchDir = opts['scratch-dir'];\n    const containerImage = opts['utility-image'];\n\n    const builder = getBuilder(opts);\n    // Inject Caches for each source-target pair\n    for (const [cacheSource, cacheOptions] of Object.entries(cacheMap)) {\n        await injectCache(cacheSource, cacheOptions, scratchDir, containerImage, builder);\n    }\n}\n","import mri from 'mri';\nimport fs from 'fs';\nimport { getInput, warning } from '@actions/core';\nimport { DockerfileParser, ModifiableInstruction } from 'dockerfile-ast';\n\nexport type Opts = {\n  \"extract\": boolean\n  \"cache-map\": string\n  \"dockerfile\": string\n  \"scratch-dir\": string\n  \"skip-extraction\": boolean\n  \"utility-image\": string\n  \"builder\"?: string\n  help: boolean\n  /** @deprecated Use `cache-map` instead */\n  \"cache-source\"?: string\n  /** @deprecated Use `cache-map` instead */\n  \"cache-target\"?: string\n}\n\nexport function parseOpts(args: string[]): mri.Argv<Opts> {\n  const opts = mri<Opts>(args, {\n    default: {\n      \"cache-map\": getInput(\"cache-map\") || \"{}\",\n      \"dockerfile\": getInput(\"dockerfile\") || \"Dockerfile\",\n      \"scratch-dir\": getInput(\"scratch-dir\") || \"scratch\",\n      \"skip-extraction\": (getInput(\"skip-extraction\") || \"false\") === \"true\",\n      \"extract\": process.env[`STATE_POST`] !== undefined,\n      \"utility-image\": getInput(\"utility-image\") || \"ghcr.io/containerd/busybox:latest\",\n      \"builder\": getInput(\"builder\") || \"default\",\n      \"help\": false,\n    },\n    string: [\"cache-map\", \"dockerfile\", \"scratch-dir\", \"cache-source\", \"cache-target\", \"utility-image\", \"builder\"],\n    boolean: [\"skip-extraction\", \"help\", \"extract\"],\n    alias: {\n      \"help\": [\"h\"],\n    },\n  })\n\n  if (opts[\"cache-source\"] && opts[\"cache-target\"]) {\n    warning(\"The `cache-source` and `cache-target` options are deprecated. Use `cache-map` instead.\")\n\n    opts[\"cache-map\"] = JSON.stringify({\n      [opts[\"cache-source\"]]: opts[\"cache-target\"],\n    });\n  }\n\n  return opts;\n}\n\nexport function help() {\n  console.log(`build-cache-dance [options]\nSave 'RUN --mount=type=cache' caches on GitHub Actions or other CI platforms\n\nOptions:\n  --extract      Extract the cache from the docker container (extract step). Otherwise, inject the cache (main step)\n  --cache-map    The map of actions source paths to container destination paths or mount arguments\n  --dockerfile   The Dockerfile to use for the auto-discovery of cache-map. Default: 'Dockerfile'\n  --scratch-dir  Where the action is stores some temporary files for its processing. Default: 'scratch'\n  --skip-extraction  Skip the extraction of the cache from the docker container\n  --utility-image  The container image to use for injecting and extracting the cache. Default: 'ghcr.io/containerd/busybox:latest'\n  --builder      The name of the buildx builder to use for the cache injection\n  --help         Show this help\n`);\n}\n\nexport type SourcePath = string\nexport type TargetPath = string\nexport type ToStringable = {\n  toString(): string;\n}\nexport type CacheOptions = TargetPath | { target: TargetPath } & Record<string, ToStringable>\nexport type CacheMap = Record<SourcePath, CacheOptions>\n\nfunction getCacheMapFromDockerfile(dockerfilePath: string): CacheMap {\n  const dockerfileContent = fs.readFileSync(dockerfilePath, \"utf-8\");\n  const dockerfile = DockerfileParser.parse(dockerfileContent);\n\n  const cacheMap: CacheMap = {};\n\n  const runInstructions = dockerfile.getInstructions().filter(i => i.getKeyword() == 'RUN') as Array<ModifiableInstruction>;\n  for (const run of runInstructions) {\n    for (const flag of run.getFlags()) {\n      if (flag.getName() == 'mount' && flag.getOption('type')?.getValue() == 'cache') {\n        // Extract the `id` flag which defaults to `target` when `id` is not set\n        // https://docs.docker.com/reference/dockerfile/#run---mounttypecache\n        const id = flag.getOption('id')?.getValue() || flag.getOption('target')?.getValue();\n        if (id == null) {\n          throw new Error('cache mount must define id or target: ' + flag.toString() + ' in ' + run.toString());\n        }\n\n        // The target in this action does not matter as long as it is\n        // different than /var/dance-cache of course\n        const target = \"/var/cache-target\";\n\n        cacheMap[id] = {\n          id,\n          target,\n        };\n      }\n    }\n  }\n\n  return cacheMap;\n}\n\nexport function getCacheMap(opts: Opts): CacheMap {\n  try {\n    const cacheMap = JSON.parse(opts[\"cache-map\"]) as CacheMap;\n    if (Object.keys(cacheMap).length !== 0) {\n      return cacheMap;\n    }\n\n    console.log(`No cache map provided. Trying to parse the Dockerfile to find the cache mount instructions...`);\n    const cacheMapFromDockerfile = getCacheMapFromDockerfile(opts[\"dockerfile\"]);\n    console.log(`Cache map parsed from Dockerfile: ${JSON.stringify(cacheMapFromDockerfile)}`);\n    return cacheMapFromDockerfile;\n  } catch (e) {\n    throw new Error(`Failed to parse cache map. Expected JSON, got:\\n${opts[\"cache-map\"]}\\n${e}`);\n  }\n}\n\nexport function getTargetPath(cacheOptions: CacheOptions): TargetPath {\n  if (typeof cacheOptions === \"string\") {\n    // only the target path is provided\n    return cacheOptions;\n  } else {\n    // object is provided\n    if (\"target\" in cacheOptions) {\n      return cacheOptions.target;\n    } else {\n      throw new Error(`Expected the 'target' key in the cache options, got:\\n${cacheOptions}`);\n    }\n  }\n}\n\nexport function getUID(cacheOptions: CacheOptions): string {\n  if (typeof cacheOptions === \"string\") {\n    // only the target path is provided\n    return \"\";\n  } else {\n    // object is provided\n    if (\"uid\" in cacheOptions && cacheOptions.uid !== undefined) {\n      return cacheOptions.uid.toString();\n    } else {\n      return \"\";\n    }\n  }\n}\n\nexport function getGID(cacheOptions: CacheOptions): string {\n  if (typeof cacheOptions === \"string\") {\n    // only the target path is provided\n    return \"\";\n  } else {\n    // object is provided\n    if (\"gid\" in cacheOptions && cacheOptions.gid !== undefined) {\n      return cacheOptions.gid.toString();\n    } else {\n      return \"\";\n    }\n  }\n}\n\n/**\n * Convert a cache options to a string that is passed to --mount=\n * @param CacheOptions The cache options to convert to a string\n */\nexport function getMountArgsString(cacheOptions: CacheOptions): string {\n  if (typeof cacheOptions === \"string\") {\n    // only the target path is provided\n    return `type=cache,target=${cacheOptions}`;\n  } else {\n    // other options are provided\n    const otherOptions = Object.entries(cacheOptions).map(([key, value]) => `${key}=${value}`).join(\",\");\n    return `type=cache,${otherOptions}`;\n  }\n}\n\nexport function getBuilder(opts: Opts): string {\n    return opts[\"builder\"] == null || opts[\"builder\"] == \"\" ? \"default\" : opts[\"builder\"];\n}\n","function toArr(any) {\n\treturn any == null ? [] : Array.isArray(any) ? any : [any];\n}\n\nfunction toVal(out, key, val, opts) {\n\tvar x, old=out[key], nxt=(\n\t\t!!~opts.string.indexOf(key) ? (val == null || val === true ? '' : String(val))\n\t\t: typeof val === 'boolean' ? val\n\t\t: !!~opts.boolean.indexOf(key) ? (val === 'false' ? false : val === 'true' || (out._.push((x = +val,x * 0 === 0) ? x : val),!!val))\n\t\t: (x = +val,x * 0 === 0) ? x : val\n\t);\n\tout[key] = old == null ? nxt : (Array.isArray(old) ? old.concat(nxt) : [old, nxt]);\n}\n\nexport default function (args, opts) {\n\targs = args || [];\n\topts = opts || {};\n\n\tvar k, arr, arg, name, val, out={ _:[] };\n\tvar i=0, j=0, idx=0, len=args.length;\n\n\tconst alibi = opts.alias !== void 0;\n\tconst strict = opts.unknown !== void 0;\n\tconst defaults = opts.default !== void 0;\n\n\topts.alias = opts.alias || {};\n\topts.string = toArr(opts.string);\n\topts.boolean = toArr(opts.boolean);\n\n\tif (alibi) {\n\t\tfor (k in opts.alias) {\n\t\t\tarr = opts.alias[k] = toArr(opts.alias[k]);\n\t\t\tfor (i=0; i < arr.length; i++) {\n\t\t\t\t(opts.alias[arr[i]] = arr.concat(k)).splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i=opts.boolean.length; i-- > 0;) {\n\t\tarr = opts.alias[opts.boolean[i]] || [];\n\t\tfor (j=arr.length; j-- > 0;) opts.boolean.push(arr[j]);\n\t}\n\n\tfor (i=opts.string.length; i-- > 0;) {\n\t\tarr = opts.alias[opts.string[i]] || [];\n\t\tfor (j=arr.length; j-- > 0;) opts.string.push(arr[j]);\n\t}\n\n\tif (defaults) {\n\t\tfor (k in opts.default) {\n\t\t\tname = typeof opts.default[k];\n\t\t\tarr = opts.alias[k] = opts.alias[k] || [];\n\t\t\tif (opts[name] !== void 0) {\n\t\t\t\topts[name].push(k);\n\t\t\t\tfor (i=0; i < arr.length; i++) {\n\t\t\t\t\topts[name].push(arr[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst keys = strict ? Object.keys(opts.alias) : [];\n\n\tfor (i=0; i < len; i++) {\n\t\targ = args[i];\n\n\t\tif (arg === '--') {\n\t\t\tout._ = out._.concat(args.slice(++i));\n\t\t\tbreak;\n\t\t}\n\n\t\tfor (j=0; j < arg.length; j++) {\n\t\t\tif (arg.charCodeAt(j) !== 45) break; // \"-\"\n\t\t}\n\n\t\tif (j === 0) {\n\t\t\tout._.push(arg);\n\t\t} else if (arg.substring(j, j + 3) === 'no-') {\n\t\t\tname = arg.substring(j + 3);\n\t\t\tif (strict && !~keys.indexOf(name)) {\n\t\t\t\treturn opts.unknown(arg);\n\t\t\t}\n\t\t\tout[name] = false;\n\t\t} else {\n\t\t\tfor (idx=j+1; idx < arg.length; idx++) {\n\t\t\t\tif (arg.charCodeAt(idx) === 61) break; // \"=\"\n\t\t\t}\n\n\t\t\tname = arg.substring(j, idx);\n\t\t\tval = arg.substring(++idx) || (i+1 === len || (''+args[i+1]).charCodeAt(0) === 45 || args[++i]);\n\t\t\tarr = (j === 2 ? [name] : name);\n\n\t\t\tfor (idx=0; idx < arr.length; idx++) {\n\t\t\t\tname = arr[idx];\n\t\t\t\tif (strict && !~keys.indexOf(name)) return opts.unknown('-'.repeat(j) + name);\n\t\t\t\ttoVal(out, name, (idx + 1 < arr.length) || val, opts);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (defaults) {\n\t\tfor (k in opts.default) {\n\t\t\tif (out[k] === void 0) {\n\t\t\t\tout[k] = opts.default[k];\n\t\t\t}\n\t\t}\n\t}\n\n\tif (alibi) {\n\t\tfor (k in out) {\n\t\t\tarr = opts.alias[k] || [];\n\t\t\twhile (arr.length > 0) {\n\t\t\t\tout[arr.shift()] = out[k];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n",null,null,null,null,null,null,null,null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DockerfileParser = exports.DefaultVariables = exports.Directive = exports.Keyword = exports.Workdir = exports.Volume = exports.User = exports.Stopsignal = exports.Shell = exports.Run = exports.PropertyInstruction = exports.Onbuild = exports.ModifiableInstruction = exports.Label = exports.JSONInstruction = exports.Heredoc = exports.Healthcheck = exports.From = exports.Env = exports.Entrypoint = exports.Copy = exports.Cmd = exports.Arg = exports.Add = exports.Variable = exports.Property = exports.ParserDirective = exports.Line = exports.Instruction = exports.Flag = exports.Comment = exports.JSONArgument = exports.Argument = void 0;\nvar argument_1 = require(\"./argument\");\nObject.defineProperty(exports, \"Argument\", { enumerable: true, get: function () { return argument_1.Argument; } });\nvar jsonArgument_1 = require(\"./jsonArgument\");\nObject.defineProperty(exports, \"JSONArgument\", { enumerable: true, get: function () { return jsonArgument_1.JSONArgument; } });\nconst comment_1 = require(\"./comment\");\nObject.defineProperty(exports, \"Comment\", { enumerable: true, get: function () { return comment_1.Comment; } });\nconst parser_1 = require(\"./parser\");\nvar flag_1 = require(\"./flag\");\nObject.defineProperty(exports, \"Flag\", { enumerable: true, get: function () { return flag_1.Flag; } });\nconst instruction_1 = require(\"./instruction\");\nObject.defineProperty(exports, \"Instruction\", { enumerable: true, get: function () { return instruction_1.Instruction; } });\nvar line_1 = require(\"./line\");\nObject.defineProperty(exports, \"Line\", { enumerable: true, get: function () { return line_1.Line; } });\nconst parserDirective_1 = require(\"./parserDirective\");\nObject.defineProperty(exports, \"ParserDirective\", { enumerable: true, get: function () { return parserDirective_1.ParserDirective; } });\nvar property_1 = require(\"./property\");\nObject.defineProperty(exports, \"Property\", { enumerable: true, get: function () { return property_1.Property; } });\nvar variable_1 = require(\"./variable\");\nObject.defineProperty(exports, \"Variable\", { enumerable: true, get: function () { return variable_1.Variable; } });\nvar add_1 = require(\"./instructions/add\");\nObject.defineProperty(exports, \"Add\", { enumerable: true, get: function () { return add_1.Add; } });\nconst arg_1 = require(\"./instructions/arg\");\nObject.defineProperty(exports, \"Arg\", { enumerable: true, get: function () { return arg_1.Arg; } });\nconst cmd_1 = require(\"./instructions/cmd\");\nObject.defineProperty(exports, \"Cmd\", { enumerable: true, get: function () { return cmd_1.Cmd; } });\nconst copy_1 = require(\"./instructions/copy\");\nObject.defineProperty(exports, \"Copy\", { enumerable: true, get: function () { return copy_1.Copy; } });\nconst entrypoint_1 = require(\"./instructions/entrypoint\");\nObject.defineProperty(exports, \"Entrypoint\", { enumerable: true, get: function () { return entrypoint_1.Entrypoint; } });\nconst env_1 = require(\"./instructions/env\");\nObject.defineProperty(exports, \"Env\", { enumerable: true, get: function () { return env_1.Env; } });\nconst from_1 = require(\"./instructions/from\");\nObject.defineProperty(exports, \"From\", { enumerable: true, get: function () { return from_1.From; } });\nconst healthcheck_1 = require(\"./instructions/healthcheck\");\nObject.defineProperty(exports, \"Healthcheck\", { enumerable: true, get: function () { return healthcheck_1.Healthcheck; } });\nvar heredoc_1 = require(\"./heredoc\");\nObject.defineProperty(exports, \"Heredoc\", { enumerable: true, get: function () { return heredoc_1.Heredoc; } });\nvar jsonInstruction_1 = require(\"./jsonInstruction\");\nObject.defineProperty(exports, \"JSONInstruction\", { enumerable: true, get: function () { return jsonInstruction_1.JSONInstruction; } });\nvar label_1 = require(\"./instructions/label\");\nObject.defineProperty(exports, \"Label\", { enumerable: true, get: function () { return label_1.Label; } });\nvar modifiableInstruction_1 = require(\"./modifiableInstruction\");\nObject.defineProperty(exports, \"ModifiableInstruction\", { enumerable: true, get: function () { return modifiableInstruction_1.ModifiableInstruction; } });\nvar onbuild_1 = require(\"./instructions/onbuild\");\nObject.defineProperty(exports, \"Onbuild\", { enumerable: true, get: function () { return onbuild_1.Onbuild; } });\nvar propertyInstruction_1 = require(\"./propertyInstruction\");\nObject.defineProperty(exports, \"PropertyInstruction\", { enumerable: true, get: function () { return propertyInstruction_1.PropertyInstruction; } });\nvar run_1 = require(\"./instructions/run\");\nObject.defineProperty(exports, \"Run\", { enumerable: true, get: function () { return run_1.Run; } });\nvar shell_1 = require(\"./instructions/shell\");\nObject.defineProperty(exports, \"Shell\", { enumerable: true, get: function () { return shell_1.Shell; } });\nvar stopsignal_1 = require(\"./instructions/stopsignal\");\nObject.defineProperty(exports, \"Stopsignal\", { enumerable: true, get: function () { return stopsignal_1.Stopsignal; } });\nvar user_1 = require(\"./instructions/user\");\nObject.defineProperty(exports, \"User\", { enumerable: true, get: function () { return user_1.User; } });\nvar volume_1 = require(\"./instructions/volume\");\nObject.defineProperty(exports, \"Volume\", { enumerable: true, get: function () { return volume_1.Volume; } });\nconst workdir_1 = require(\"./instructions/workdir\");\nObject.defineProperty(exports, \"Workdir\", { enumerable: true, get: function () { return workdir_1.Workdir; } });\nvar Keyword;\n(function (Keyword) {\n    Keyword[\"ADD\"] = \"ADD\";\n    Keyword[\"ARG\"] = \"ARG\";\n    Keyword[\"CMD\"] = \"CMD\";\n    Keyword[\"COPY\"] = \"COPY\";\n    Keyword[\"ENTRYPOINT\"] = \"ENTRYPOINT\";\n    Keyword[\"ENV\"] = \"ENV\";\n    Keyword[\"EXPOSE\"] = \"EXPOSE\";\n    Keyword[\"FROM\"] = \"FROM\";\n    Keyword[\"HEALTHCHECK\"] = \"HEALTHCHECK\";\n    Keyword[\"LABEL\"] = \"LABEL\";\n    Keyword[\"MAINTAINER\"] = \"MAINTAINER\";\n    Keyword[\"ONBUILD\"] = \"ONBUILD\";\n    Keyword[\"RUN\"] = \"RUN\";\n    Keyword[\"SHELL\"] = \"SHELL\";\n    Keyword[\"STOPSIGNAL\"] = \"STOPSIGNAL\";\n    Keyword[\"USER\"] = \"USER\";\n    Keyword[\"VOLUME\"] = \"VOLUME\";\n    Keyword[\"WORKDIR\"] = \"WORKDIR\";\n})(Keyword || (exports.Keyword = Keyword = {}));\nvar Directive;\n(function (Directive) {\n    Directive[\"escape\"] = \"escape\";\n    Directive[\"syntax\"] = \"syntax\";\n})(Directive || (exports.Directive = Directive = {}));\nexports.DefaultVariables = [\n    \"ALL_PROXY\", \"all_proxy\",\n    \"FTP_PROXY\", \"ftp_proxy\",\n    \"HTTP_PROXY\", \"http_proxy\",\n    \"HTTPS_PROXY\", \"https_proxy\",\n    \"NO_PROXY\", \"no_proxy\"\n];\nvar DockerfileParser;\n(function (DockerfileParser) {\n    function parse(content) {\n        let parser = new parser_1.Parser();\n        return parser.parse(content);\n    }\n    DockerfileParser.parse = parse;\n})(DockerfileParser || (exports.DockerfileParser = DockerfileParser = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Argument = void 0;\nclass Argument {\n    constructor(value, range) {\n        this.value = value;\n        this.range = range;\n    }\n    toString() {\n        return this.value;\n    }\n    getRange() {\n        return this.range;\n    }\n    getValue() {\n        return this.value;\n    }\n    isAfter(position) {\n        if (this.range.end.line < position.line) {\n            return false;\n        }\n        return this.range.start.line > position.line ? true : this.range.start.character > position.character;\n    }\n    isBefore(position) {\n        if (this.range.start.line < position.line) {\n            return true;\n        }\n        return this.range.end.line > position.line ? false : this.range.end.character < position.character;\n    }\n}\nexports.Argument = Argument;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JSONArgument = void 0;\nconst argument_1 = require(\"./argument\");\nclass JSONArgument extends argument_1.Argument {\n    constructor(value, range, jsonRange) {\n        super(value, range);\n        this.jsonRange = jsonRange;\n    }\n    getJSONRange() {\n        return this.jsonRange;\n    }\n    getJSONValue() {\n        let value = super.getValue();\n        value = value.substring(1, value.length - 1);\n        return value;\n    }\n}\nexports.JSONArgument = JSONArgument;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Comment = void 0;\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst line_1 = require(\"./line\");\nconst util_1 = require(\"./util\");\nclass Comment extends line_1.Line {\n    constructor(document, range) {\n        super(document, range);\n    }\n    toString() {\n        const content = this.getContent();\n        if (content) {\n            return \"# \" + content;\n        }\n        return \"#\";\n    }\n    /**\n     * Returns the content of this comment. This excludes leading and\n     * trailing whitespace as well as the # symbol. If the comment only\n     * consists of whitespace, the empty string will be returned.\n     */\n    getContent() {\n        let range = this.getContentRange();\n        if (range === null) {\n            return \"\";\n        }\n        return this.document.getText().substring(this.document.offsetAt(range.start), this.document.offsetAt(range.end));\n    }\n    /**\n     * Returns a range that includes the content of the comment\n     * excluding any leading and trailing whitespace as well as the #\n     * symbol. May return null if the comment only consists of whitespace\n     * characters.\n     */\n    getContentRange() {\n        let range = this.getRange();\n        const startOffset = this.document.offsetAt(range.start);\n        let raw = this.document.getText().substring(startOffset, this.document.offsetAt(range.end));\n        let start = -1;\n        let end = -1;\n        // skip the first # symbol\n        for (let i = 1; i < raw.length; i++) {\n            if (!util_1.Util.isWhitespace(raw.charAt(i))) {\n                start = i;\n                break;\n            }\n        }\n        if (start === -1) {\n            return null;\n        }\n        // go backwards up to the first # symbol\n        for (let i = raw.length - 1; i >= 1; i--) {\n            if (!util_1.Util.isWhitespace(raw.charAt(i))) {\n                end = i + 1;\n                break;\n            }\n        }\n        return vscode_languageserver_types_1.Range.create(this.document.positionAt(startOffset + start), this.document.positionAt(startOffset + end));\n    }\n}\nexports.Comment = Comment;\n","(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\"], factory);\n    }\n})(function (require, exports) {\n    /* --------------------------------------------------------------------------------------------\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for license information.\n     * ------------------------------------------------------------------------------------------ */\n    'use strict';\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.TextDocument = exports.EOL = exports.WorkspaceFolder = exports.InlineCompletionContext = exports.SelectedCompletionInfo = exports.InlineCompletionTriggerKind = exports.InlineCompletionList = exports.InlineCompletionItem = exports.StringValue = exports.InlayHint = exports.InlayHintLabelPart = exports.InlayHintKind = exports.InlineValueContext = exports.InlineValueEvaluatableExpression = exports.InlineValueVariableLookup = exports.InlineValueText = exports.SemanticTokens = exports.SemanticTokenModifiers = exports.SemanticTokenTypes = exports.SelectionRange = exports.DocumentLink = exports.FormattingOptions = exports.CodeLens = exports.CodeAction = exports.CodeActionContext = exports.CodeActionTriggerKind = exports.CodeActionKind = exports.DocumentSymbol = exports.WorkspaceSymbol = exports.SymbolInformation = exports.SymbolTag = exports.SymbolKind = exports.DocumentHighlight = exports.DocumentHighlightKind = exports.SignatureInformation = exports.ParameterInformation = exports.Hover = exports.MarkedString = exports.CompletionList = exports.CompletionItem = exports.CompletionItemLabelDetails = exports.InsertTextMode = exports.InsertReplaceEdit = exports.CompletionItemTag = exports.InsertTextFormat = exports.CompletionItemKind = exports.MarkupContent = exports.MarkupKind = exports.TextDocumentItem = exports.OptionalVersionedTextDocumentIdentifier = exports.VersionedTextDocumentIdentifier = exports.TextDocumentIdentifier = exports.WorkspaceChange = exports.WorkspaceEdit = exports.DeleteFile = exports.RenameFile = exports.CreateFile = exports.TextDocumentEdit = exports.AnnotatedTextEdit = exports.ChangeAnnotationIdentifier = exports.ChangeAnnotation = exports.TextEdit = exports.Command = exports.Diagnostic = exports.CodeDescription = exports.DiagnosticTag = exports.DiagnosticSeverity = exports.DiagnosticRelatedInformation = exports.FoldingRange = exports.FoldingRangeKind = exports.ColorPresentation = exports.ColorInformation = exports.Color = exports.LocationLink = exports.Location = exports.Range = exports.Position = exports.uinteger = exports.integer = exports.URI = exports.DocumentUri = void 0;\n    var DocumentUri;\n    (function (DocumentUri) {\n        function is(value) {\n            return typeof value === 'string';\n        }\n        DocumentUri.is = is;\n    })(DocumentUri || (exports.DocumentUri = DocumentUri = {}));\n    var URI;\n    (function (URI) {\n        function is(value) {\n            return typeof value === 'string';\n        }\n        URI.is = is;\n    })(URI || (exports.URI = URI = {}));\n    var integer;\n    (function (integer) {\n        integer.MIN_VALUE = -2147483648;\n        integer.MAX_VALUE = 2147483647;\n        function is(value) {\n            return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n        }\n        integer.is = is;\n    })(integer || (exports.integer = integer = {}));\n    var uinteger;\n    (function (uinteger) {\n        uinteger.MIN_VALUE = 0;\n        uinteger.MAX_VALUE = 2147483647;\n        function is(value) {\n            return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n        }\n        uinteger.is = is;\n    })(uinteger || (exports.uinteger = uinteger = {}));\n    /**\n     * The Position namespace provides helper functions to work with\n     * {@link Position} literals.\n     */\n    var Position;\n    (function (Position) {\n        /**\n         * Creates a new Position literal from the given line and character.\n         * @param line The position's line.\n         * @param character The position's character.\n         */\n        function create(line, character) {\n            if (line === Number.MAX_VALUE) {\n                line = uinteger.MAX_VALUE;\n            }\n            if (character === Number.MAX_VALUE) {\n                character = uinteger.MAX_VALUE;\n            }\n            return { line: line, character: character };\n        }\n        Position.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Position} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n        }\n        Position.is = is;\n    })(Position || (exports.Position = Position = {}));\n    /**\n     * The Range namespace provides helper functions to work with\n     * {@link Range} literals.\n     */\n    var Range;\n    (function (Range) {\n        function create(one, two, three, four) {\n            if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n                return { start: Position.create(one, two), end: Position.create(three, four) };\n            }\n            else if (Position.is(one) && Position.is(two)) {\n                return { start: one, end: two };\n            }\n            else {\n                throw new Error(\"Range#create called with invalid arguments[\".concat(one, \", \").concat(two, \", \").concat(three, \", \").concat(four, \"]\"));\n            }\n        }\n        Range.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Range} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n        }\n        Range.is = is;\n    })(Range || (exports.Range = Range = {}));\n    /**\n     * The Location namespace provides helper functions to work with\n     * {@link Location} literals.\n     */\n    var Location;\n    (function (Location) {\n        /**\n         * Creates a Location literal.\n         * @param uri The location's uri.\n         * @param range The location's range.\n         */\n        function create(uri, range) {\n            return { uri: uri, range: range };\n        }\n        Location.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Location} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n        }\n        Location.is = is;\n    })(Location || (exports.Location = Location = {}));\n    /**\n     * The LocationLink namespace provides helper functions to work with\n     * {@link LocationLink} literals.\n     */\n    var LocationLink;\n    (function (LocationLink) {\n        /**\n         * Creates a LocationLink literal.\n         * @param targetUri The definition's uri.\n         * @param targetRange The full range of the definition.\n         * @param targetSelectionRange The span of the symbol definition at the target.\n         * @param originSelectionRange The span of the symbol being defined in the originating source file.\n         */\n        function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n            return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\n        }\n        LocationLink.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link LocationLink} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n                && Range.is(candidate.targetSelectionRange)\n                && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n        }\n        LocationLink.is = is;\n    })(LocationLink || (exports.LocationLink = LocationLink = {}));\n    /**\n     * The Color namespace provides helper functions to work with\n     * {@link Color} literals.\n     */\n    var Color;\n    (function (Color) {\n        /**\n         * Creates a new Color literal.\n         */\n        function create(red, green, blue, alpha) {\n            return {\n                red: red,\n                green: green,\n                blue: blue,\n                alpha: alpha,\n            };\n        }\n        Color.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Color} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n                && Is.numberRange(candidate.green, 0, 1)\n                && Is.numberRange(candidate.blue, 0, 1)\n                && Is.numberRange(candidate.alpha, 0, 1);\n        }\n        Color.is = is;\n    })(Color || (exports.Color = Color = {}));\n    /**\n     * The ColorInformation namespace provides helper functions to work with\n     * {@link ColorInformation} literals.\n     */\n    var ColorInformation;\n    (function (ColorInformation) {\n        /**\n         * Creates a new ColorInformation literal.\n         */\n        function create(range, color) {\n            return {\n                range: range,\n                color: color,\n            };\n        }\n        ColorInformation.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n        }\n        ColorInformation.is = is;\n    })(ColorInformation || (exports.ColorInformation = ColorInformation = {}));\n    /**\n     * The Color namespace provides helper functions to work with\n     * {@link ColorPresentation} literals.\n     */\n    var ColorPresentation;\n    (function (ColorPresentation) {\n        /**\n         * Creates a new ColorInformation literal.\n         */\n        function create(label, textEdit, additionalTextEdits) {\n            return {\n                label: label,\n                textEdit: textEdit,\n                additionalTextEdits: additionalTextEdits,\n            };\n        }\n        ColorPresentation.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.string(candidate.label)\n                && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n                && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n        }\n        ColorPresentation.is = is;\n    })(ColorPresentation || (exports.ColorPresentation = ColorPresentation = {}));\n    /**\n     * A set of predefined range kinds.\n     */\n    var FoldingRangeKind;\n    (function (FoldingRangeKind) {\n        /**\n         * Folding range for a comment\n         */\n        FoldingRangeKind.Comment = 'comment';\n        /**\n         * Folding range for an import or include\n         */\n        FoldingRangeKind.Imports = 'imports';\n        /**\n         * Folding range for a region (e.g. `#region`)\n         */\n        FoldingRangeKind.Region = 'region';\n    })(FoldingRangeKind || (exports.FoldingRangeKind = FoldingRangeKind = {}));\n    /**\n     * The folding range namespace provides helper functions to work with\n     * {@link FoldingRange} literals.\n     */\n    var FoldingRange;\n    (function (FoldingRange) {\n        /**\n         * Creates a new FoldingRange literal.\n         */\n        function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n            var result = {\n                startLine: startLine,\n                endLine: endLine\n            };\n            if (Is.defined(startCharacter)) {\n                result.startCharacter = startCharacter;\n            }\n            if (Is.defined(endCharacter)) {\n                result.endCharacter = endCharacter;\n            }\n            if (Is.defined(kind)) {\n                result.kind = kind;\n            }\n            if (Is.defined(collapsedText)) {\n                result.collapsedText = collapsedText;\n            }\n            return result;\n        }\n        FoldingRange.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n                && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n                && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n                && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n        }\n        FoldingRange.is = is;\n    })(FoldingRange || (exports.FoldingRange = FoldingRange = {}));\n    /**\n     * The DiagnosticRelatedInformation namespace provides helper functions to work with\n     * {@link DiagnosticRelatedInformation} literals.\n     */\n    var DiagnosticRelatedInformation;\n    (function (DiagnosticRelatedInformation) {\n        /**\n         * Creates a new DiagnosticRelatedInformation literal.\n         */\n        function create(location, message) {\n            return {\n                location: location,\n                message: message\n            };\n        }\n        DiagnosticRelatedInformation.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n        }\n        DiagnosticRelatedInformation.is = is;\n    })(DiagnosticRelatedInformation || (exports.DiagnosticRelatedInformation = DiagnosticRelatedInformation = {}));\n    /**\n     * The diagnostic's severity.\n     */\n    var DiagnosticSeverity;\n    (function (DiagnosticSeverity) {\n        /**\n         * Reports an error.\n         */\n        DiagnosticSeverity.Error = 1;\n        /**\n         * Reports a warning.\n         */\n        DiagnosticSeverity.Warning = 2;\n        /**\n         * Reports an information.\n         */\n        DiagnosticSeverity.Information = 3;\n        /**\n         * Reports a hint.\n         */\n        DiagnosticSeverity.Hint = 4;\n    })(DiagnosticSeverity || (exports.DiagnosticSeverity = DiagnosticSeverity = {}));\n    /**\n     * The diagnostic tags.\n     *\n     * @since 3.15.0\n     */\n    var DiagnosticTag;\n    (function (DiagnosticTag) {\n        /**\n         * Unused or unnecessary code.\n         *\n         * Clients are allowed to render diagnostics with this tag faded out instead of having\n         * an error squiggle.\n         */\n        DiagnosticTag.Unnecessary = 1;\n        /**\n         * Deprecated or obsolete code.\n         *\n         * Clients are allowed to rendered diagnostics with this tag strike through.\n         */\n        DiagnosticTag.Deprecated = 2;\n    })(DiagnosticTag || (exports.DiagnosticTag = DiagnosticTag = {}));\n    /**\n     * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n     *\n     * @since 3.16.0\n     */\n    var CodeDescription;\n    (function (CodeDescription) {\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.string(candidate.href);\n        }\n        CodeDescription.is = is;\n    })(CodeDescription || (exports.CodeDescription = CodeDescription = {}));\n    /**\n     * The Diagnostic namespace provides helper functions to work with\n     * {@link Diagnostic} literals.\n     */\n    var Diagnostic;\n    (function (Diagnostic) {\n        /**\n         * Creates a new Diagnostic literal.\n         */\n        function create(range, message, severity, code, source, relatedInformation) {\n            var result = { range: range, message: message };\n            if (Is.defined(severity)) {\n                result.severity = severity;\n            }\n            if (Is.defined(code)) {\n                result.code = code;\n            }\n            if (Is.defined(source)) {\n                result.source = source;\n            }\n            if (Is.defined(relatedInformation)) {\n                result.relatedInformation = relatedInformation;\n            }\n            return result;\n        }\n        Diagnostic.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n         */\n        function is(value) {\n            var _a;\n            var candidate = value;\n            return Is.defined(candidate)\n                && Range.is(candidate.range)\n                && Is.string(candidate.message)\n                && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n                && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n                && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n                && (Is.string(candidate.source) || Is.undefined(candidate.source))\n                && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n        }\n        Diagnostic.is = is;\n    })(Diagnostic || (exports.Diagnostic = Diagnostic = {}));\n    /**\n     * The Command namespace provides helper functions to work with\n     * {@link Command} literals.\n     */\n    var Command;\n    (function (Command) {\n        /**\n         * Creates a new Command literal.\n         */\n        function create(title, command) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var result = { title: title, command: command };\n            if (Is.defined(args) && args.length > 0) {\n                result.arguments = args;\n            }\n            return result;\n        }\n        Command.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Command} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n        }\n        Command.is = is;\n    })(Command || (exports.Command = Command = {}));\n    /**\n     * The TextEdit namespace provides helper function to create replace,\n     * insert and delete edits more easily.\n     */\n    var TextEdit;\n    (function (TextEdit) {\n        /**\n         * Creates a replace text edit.\n         * @param range The range of text to be replaced.\n         * @param newText The new text.\n         */\n        function replace(range, newText) {\n            return { range: range, newText: newText };\n        }\n        TextEdit.replace = replace;\n        /**\n         * Creates an insert text edit.\n         * @param position The position to insert the text at.\n         * @param newText The text to be inserted.\n         */\n        function insert(position, newText) {\n            return { range: { start: position, end: position }, newText: newText };\n        }\n        TextEdit.insert = insert;\n        /**\n         * Creates a delete text edit.\n         * @param range The range of text to be deleted.\n         */\n        function del(range) {\n            return { range: range, newText: '' };\n        }\n        TextEdit.del = del;\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate)\n                && Is.string(candidate.newText)\n                && Range.is(candidate.range);\n        }\n        TextEdit.is = is;\n    })(TextEdit || (exports.TextEdit = TextEdit = {}));\n    var ChangeAnnotation;\n    (function (ChangeAnnotation) {\n        function create(label, needsConfirmation, description) {\n            var result = { label: label };\n            if (needsConfirmation !== undefined) {\n                result.needsConfirmation = needsConfirmation;\n            }\n            if (description !== undefined) {\n                result.description = description;\n            }\n            return result;\n        }\n        ChangeAnnotation.create = create;\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n                (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n                (Is.string(candidate.description) || candidate.description === undefined);\n        }\n        ChangeAnnotation.is = is;\n    })(ChangeAnnotation || (exports.ChangeAnnotation = ChangeAnnotation = {}));\n    var ChangeAnnotationIdentifier;\n    (function (ChangeAnnotationIdentifier) {\n        function is(value) {\n            var candidate = value;\n            return Is.string(candidate);\n        }\n        ChangeAnnotationIdentifier.is = is;\n    })(ChangeAnnotationIdentifier || (exports.ChangeAnnotationIdentifier = ChangeAnnotationIdentifier = {}));\n    var AnnotatedTextEdit;\n    (function (AnnotatedTextEdit) {\n        /**\n         * Creates an annotated replace text edit.\n         *\n         * @param range The range of text to be replaced.\n         * @param newText The new text.\n         * @param annotation The annotation.\n         */\n        function replace(range, newText, annotation) {\n            return { range: range, newText: newText, annotationId: annotation };\n        }\n        AnnotatedTextEdit.replace = replace;\n        /**\n         * Creates an annotated insert text edit.\n         *\n         * @param position The position to insert the text at.\n         * @param newText The text to be inserted.\n         * @param annotation The annotation.\n         */\n        function insert(position, newText, annotation) {\n            return { range: { start: position, end: position }, newText: newText, annotationId: annotation };\n        }\n        AnnotatedTextEdit.insert = insert;\n        /**\n         * Creates an annotated delete text edit.\n         *\n         * @param range The range of text to be deleted.\n         * @param annotation The annotation.\n         */\n        function del(range, annotation) {\n            return { range: range, newText: '', annotationId: annotation };\n        }\n        AnnotatedTextEdit.del = del;\n        function is(value) {\n            var candidate = value;\n            return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n        }\n        AnnotatedTextEdit.is = is;\n    })(AnnotatedTextEdit || (exports.AnnotatedTextEdit = AnnotatedTextEdit = {}));\n    /**\n     * The TextDocumentEdit namespace provides helper function to create\n     * an edit that manipulates a text document.\n     */\n    var TextDocumentEdit;\n    (function (TextDocumentEdit) {\n        /**\n         * Creates a new `TextDocumentEdit`\n         */\n        function create(textDocument, edits) {\n            return { textDocument: textDocument, edits: edits };\n        }\n        TextDocumentEdit.create = create;\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate)\n                && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n                && Array.isArray(candidate.edits);\n        }\n        TextDocumentEdit.is = is;\n    })(TextDocumentEdit || (exports.TextDocumentEdit = TextDocumentEdit = {}));\n    var CreateFile;\n    (function (CreateFile) {\n        function create(uri, options, annotation) {\n            var result = {\n                kind: 'create',\n                uri: uri\n            };\n            if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n                result.options = options;\n            }\n            if (annotation !== undefined) {\n                result.annotationId = annotation;\n            }\n            return result;\n        }\n        CreateFile.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n                ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n        }\n        CreateFile.is = is;\n    })(CreateFile || (exports.CreateFile = CreateFile = {}));\n    var RenameFile;\n    (function (RenameFile) {\n        function create(oldUri, newUri, options, annotation) {\n            var result = {\n                kind: 'rename',\n                oldUri: oldUri,\n                newUri: newUri\n            };\n            if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n                result.options = options;\n            }\n            if (annotation !== undefined) {\n                result.annotationId = annotation;\n            }\n            return result;\n        }\n        RenameFile.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n                ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n        }\n        RenameFile.is = is;\n    })(RenameFile || (exports.RenameFile = RenameFile = {}));\n    var DeleteFile;\n    (function (DeleteFile) {\n        function create(uri, options, annotation) {\n            var result = {\n                kind: 'delete',\n                uri: uri\n            };\n            if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n                result.options = options;\n            }\n            if (annotation !== undefined) {\n                result.annotationId = annotation;\n            }\n            return result;\n        }\n        DeleteFile.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n                ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n        }\n        DeleteFile.is = is;\n    })(DeleteFile || (exports.DeleteFile = DeleteFile = {}));\n    var WorkspaceEdit;\n    (function (WorkspaceEdit) {\n        function is(value) {\n            var candidate = value;\n            return candidate &&\n                (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n                (candidate.documentChanges === undefined || candidate.documentChanges.every(function (change) {\n                    if (Is.string(change.kind)) {\n                        return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                    }\n                    else {\n                        return TextDocumentEdit.is(change);\n                    }\n                }));\n        }\n        WorkspaceEdit.is = is;\n    })(WorkspaceEdit || (exports.WorkspaceEdit = WorkspaceEdit = {}));\n    var TextEditChangeImpl = /** @class */ (function () {\n        function TextEditChangeImpl(edits, changeAnnotations) {\n            this.edits = edits;\n            this.changeAnnotations = changeAnnotations;\n        }\n        TextEditChangeImpl.prototype.insert = function (position, newText, annotation) {\n            var edit;\n            var id;\n            if (annotation === undefined) {\n                edit = TextEdit.insert(position, newText);\n            }\n            else if (ChangeAnnotationIdentifier.is(annotation)) {\n                id = annotation;\n                edit = AnnotatedTextEdit.insert(position, newText, annotation);\n            }\n            else {\n                this.assertChangeAnnotations(this.changeAnnotations);\n                id = this.changeAnnotations.manage(annotation);\n                edit = AnnotatedTextEdit.insert(position, newText, id);\n            }\n            this.edits.push(edit);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        TextEditChangeImpl.prototype.replace = function (range, newText, annotation) {\n            var edit;\n            var id;\n            if (annotation === undefined) {\n                edit = TextEdit.replace(range, newText);\n            }\n            else if (ChangeAnnotationIdentifier.is(annotation)) {\n                id = annotation;\n                edit = AnnotatedTextEdit.replace(range, newText, annotation);\n            }\n            else {\n                this.assertChangeAnnotations(this.changeAnnotations);\n                id = this.changeAnnotations.manage(annotation);\n                edit = AnnotatedTextEdit.replace(range, newText, id);\n            }\n            this.edits.push(edit);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        TextEditChangeImpl.prototype.delete = function (range, annotation) {\n            var edit;\n            var id;\n            if (annotation === undefined) {\n                edit = TextEdit.del(range);\n            }\n            else if (ChangeAnnotationIdentifier.is(annotation)) {\n                id = annotation;\n                edit = AnnotatedTextEdit.del(range, annotation);\n            }\n            else {\n                this.assertChangeAnnotations(this.changeAnnotations);\n                id = this.changeAnnotations.manage(annotation);\n                edit = AnnotatedTextEdit.del(range, id);\n            }\n            this.edits.push(edit);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        TextEditChangeImpl.prototype.add = function (edit) {\n            this.edits.push(edit);\n        };\n        TextEditChangeImpl.prototype.all = function () {\n            return this.edits;\n        };\n        TextEditChangeImpl.prototype.clear = function () {\n            this.edits.splice(0, this.edits.length);\n        };\n        TextEditChangeImpl.prototype.assertChangeAnnotations = function (value) {\n            if (value === undefined) {\n                throw new Error(\"Text edit change is not configured to manage change annotations.\");\n            }\n        };\n        return TextEditChangeImpl;\n    }());\n    /**\n     * A helper class\n     */\n    var ChangeAnnotations = /** @class */ (function () {\n        function ChangeAnnotations(annotations) {\n            this._annotations = annotations === undefined ? Object.create(null) : annotations;\n            this._counter = 0;\n            this._size = 0;\n        }\n        ChangeAnnotations.prototype.all = function () {\n            return this._annotations;\n        };\n        Object.defineProperty(ChangeAnnotations.prototype, \"size\", {\n            get: function () {\n                return this._size;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ChangeAnnotations.prototype.manage = function (idOrAnnotation, annotation) {\n            var id;\n            if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n                id = idOrAnnotation;\n            }\n            else {\n                id = this.nextId();\n                annotation = idOrAnnotation;\n            }\n            if (this._annotations[id] !== undefined) {\n                throw new Error(\"Id \".concat(id, \" is already in use.\"));\n            }\n            if (annotation === undefined) {\n                throw new Error(\"No annotation provided for id \".concat(id));\n            }\n            this._annotations[id] = annotation;\n            this._size++;\n            return id;\n        };\n        ChangeAnnotations.prototype.nextId = function () {\n            this._counter++;\n            return this._counter.toString();\n        };\n        return ChangeAnnotations;\n    }());\n    /**\n     * A workspace change helps constructing changes to a workspace.\n     */\n    var WorkspaceChange = /** @class */ (function () {\n        function WorkspaceChange(workspaceEdit) {\n            var _this = this;\n            this._textEditChanges = Object.create(null);\n            if (workspaceEdit !== undefined) {\n                this._workspaceEdit = workspaceEdit;\n                if (workspaceEdit.documentChanges) {\n                    this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                    workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                    workspaceEdit.documentChanges.forEach(function (change) {\n                        if (TextDocumentEdit.is(change)) {\n                            var textEditChange = new TextEditChangeImpl(change.edits, _this._changeAnnotations);\n                            _this._textEditChanges[change.textDocument.uri] = textEditChange;\n                        }\n                    });\n                }\n                else if (workspaceEdit.changes) {\n                    Object.keys(workspaceEdit.changes).forEach(function (key) {\n                        var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                        _this._textEditChanges[key] = textEditChange;\n                    });\n                }\n            }\n            else {\n                this._workspaceEdit = {};\n            }\n        }\n        Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n            /**\n             * Returns the underlying {@link WorkspaceEdit} literal\n             * use to be returned from a workspace edit operation like rename.\n             */\n            get: function () {\n                this.initDocumentChanges();\n                if (this._changeAnnotations !== undefined) {\n                    if (this._changeAnnotations.size === 0) {\n                        this._workspaceEdit.changeAnnotations = undefined;\n                    }\n                    else {\n                        this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                    }\n                }\n                return this._workspaceEdit;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        WorkspaceChange.prototype.getTextEditChange = function (key) {\n            if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n                this.initDocumentChanges();\n                if (this._workspaceEdit.documentChanges === undefined) {\n                    throw new Error('Workspace edit is not configured for document changes.');\n                }\n                var textDocument = { uri: key.uri, version: key.version };\n                var result = this._textEditChanges[textDocument.uri];\n                if (!result) {\n                    var edits = [];\n                    var textDocumentEdit = {\n                        textDocument: textDocument,\n                        edits: edits\n                    };\n                    this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                    result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                    this._textEditChanges[textDocument.uri] = result;\n                }\n                return result;\n            }\n            else {\n                this.initChanges();\n                if (this._workspaceEdit.changes === undefined) {\n                    throw new Error('Workspace edit is not configured for normal text edit changes.');\n                }\n                var result = this._textEditChanges[key];\n                if (!result) {\n                    var edits = [];\n                    this._workspaceEdit.changes[key] = edits;\n                    result = new TextEditChangeImpl(edits);\n                    this._textEditChanges[key] = result;\n                }\n                return result;\n            }\n        };\n        WorkspaceChange.prototype.initDocumentChanges = function () {\n            if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n                this._changeAnnotations = new ChangeAnnotations();\n                this._workspaceEdit.documentChanges = [];\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        };\n        WorkspaceChange.prototype.initChanges = function () {\n            if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n                this._workspaceEdit.changes = Object.create(null);\n            }\n        };\n        WorkspaceChange.prototype.createFile = function (uri, optionsOrAnnotation, options) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var annotation;\n            if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n                annotation = optionsOrAnnotation;\n            }\n            else {\n                options = optionsOrAnnotation;\n            }\n            var operation;\n            var id;\n            if (annotation === undefined) {\n                operation = CreateFile.create(uri, options);\n            }\n            else {\n                id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n                operation = CreateFile.create(uri, options, id);\n            }\n            this._workspaceEdit.documentChanges.push(operation);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        WorkspaceChange.prototype.renameFile = function (oldUri, newUri, optionsOrAnnotation, options) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var annotation;\n            if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n                annotation = optionsOrAnnotation;\n            }\n            else {\n                options = optionsOrAnnotation;\n            }\n            var operation;\n            var id;\n            if (annotation === undefined) {\n                operation = RenameFile.create(oldUri, newUri, options);\n            }\n            else {\n                id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n                operation = RenameFile.create(oldUri, newUri, options, id);\n            }\n            this._workspaceEdit.documentChanges.push(operation);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        WorkspaceChange.prototype.deleteFile = function (uri, optionsOrAnnotation, options) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var annotation;\n            if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n                annotation = optionsOrAnnotation;\n            }\n            else {\n                options = optionsOrAnnotation;\n            }\n            var operation;\n            var id;\n            if (annotation === undefined) {\n                operation = DeleteFile.create(uri, options);\n            }\n            else {\n                id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n                operation = DeleteFile.create(uri, options, id);\n            }\n            this._workspaceEdit.documentChanges.push(operation);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        return WorkspaceChange;\n    }());\n    exports.WorkspaceChange = WorkspaceChange;\n    /**\n     * The TextDocumentIdentifier namespace provides helper functions to work with\n     * {@link TextDocumentIdentifier} literals.\n     */\n    var TextDocumentIdentifier;\n    (function (TextDocumentIdentifier) {\n        /**\n         * Creates a new TextDocumentIdentifier literal.\n         * @param uri The document's uri.\n         */\n        function create(uri) {\n            return { uri: uri };\n        }\n        TextDocumentIdentifier.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.uri);\n        }\n        TextDocumentIdentifier.is = is;\n    })(TextDocumentIdentifier || (exports.TextDocumentIdentifier = TextDocumentIdentifier = {}));\n    /**\n     * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n     * {@link VersionedTextDocumentIdentifier} literals.\n     */\n    var VersionedTextDocumentIdentifier;\n    (function (VersionedTextDocumentIdentifier) {\n        /**\n         * Creates a new VersionedTextDocumentIdentifier literal.\n         * @param uri The document's uri.\n         * @param version The document's version.\n         */\n        function create(uri, version) {\n            return { uri: uri, version: version };\n        }\n        VersionedTextDocumentIdentifier.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n        }\n        VersionedTextDocumentIdentifier.is = is;\n    })(VersionedTextDocumentIdentifier || (exports.VersionedTextDocumentIdentifier = VersionedTextDocumentIdentifier = {}));\n    /**\n     * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n     * {@link OptionalVersionedTextDocumentIdentifier} literals.\n     */\n    var OptionalVersionedTextDocumentIdentifier;\n    (function (OptionalVersionedTextDocumentIdentifier) {\n        /**\n         * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n         * @param uri The document's uri.\n         * @param version The document's version.\n         */\n        function create(uri, version) {\n            return { uri: uri, version: version };\n        }\n        OptionalVersionedTextDocumentIdentifier.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n        }\n        OptionalVersionedTextDocumentIdentifier.is = is;\n    })(OptionalVersionedTextDocumentIdentifier || (exports.OptionalVersionedTextDocumentIdentifier = OptionalVersionedTextDocumentIdentifier = {}));\n    /**\n     * The TextDocumentItem namespace provides helper functions to work with\n     * {@link TextDocumentItem} literals.\n     */\n    var TextDocumentItem;\n    (function (TextDocumentItem) {\n        /**\n         * Creates a new TextDocumentItem literal.\n         * @param uri The document's uri.\n         * @param languageId The document's language identifier.\n         * @param version The document's version number.\n         * @param text The document's text.\n         */\n        function create(uri, languageId, version, text) {\n            return { uri: uri, languageId: languageId, version: version, text: text };\n        }\n        TextDocumentItem.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n        }\n        TextDocumentItem.is = is;\n    })(TextDocumentItem || (exports.TextDocumentItem = TextDocumentItem = {}));\n    /**\n     * Describes the content type that a client supports in various\n     * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n     *\n     * Please note that `MarkupKinds` must not start with a `$`. This kinds\n     * are reserved for internal usage.\n     */\n    var MarkupKind;\n    (function (MarkupKind) {\n        /**\n         * Plain text is supported as a content format\n         */\n        MarkupKind.PlainText = 'plaintext';\n        /**\n         * Markdown is supported as a content format\n         */\n        MarkupKind.Markdown = 'markdown';\n        /**\n         * Checks whether the given value is a value of the {@link MarkupKind} type.\n         */\n        function is(value) {\n            var candidate = value;\n            return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n        }\n        MarkupKind.is = is;\n    })(MarkupKind || (exports.MarkupKind = MarkupKind = {}));\n    var MarkupContent;\n    (function (MarkupContent) {\n        /**\n         * Checks whether the given value conforms to the {@link MarkupContent} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n        }\n        MarkupContent.is = is;\n    })(MarkupContent || (exports.MarkupContent = MarkupContent = {}));\n    /**\n     * The kind of a completion entry.\n     */\n    var CompletionItemKind;\n    (function (CompletionItemKind) {\n        CompletionItemKind.Text = 1;\n        CompletionItemKind.Method = 2;\n        CompletionItemKind.Function = 3;\n        CompletionItemKind.Constructor = 4;\n        CompletionItemKind.Field = 5;\n        CompletionItemKind.Variable = 6;\n        CompletionItemKind.Class = 7;\n        CompletionItemKind.Interface = 8;\n        CompletionItemKind.Module = 9;\n        CompletionItemKind.Property = 10;\n        CompletionItemKind.Unit = 11;\n        CompletionItemKind.Value = 12;\n        CompletionItemKind.Enum = 13;\n        CompletionItemKind.Keyword = 14;\n        CompletionItemKind.Snippet = 15;\n        CompletionItemKind.Color = 16;\n        CompletionItemKind.File = 17;\n        CompletionItemKind.Reference = 18;\n        CompletionItemKind.Folder = 19;\n        CompletionItemKind.EnumMember = 20;\n        CompletionItemKind.Constant = 21;\n        CompletionItemKind.Struct = 22;\n        CompletionItemKind.Event = 23;\n        CompletionItemKind.Operator = 24;\n        CompletionItemKind.TypeParameter = 25;\n    })(CompletionItemKind || (exports.CompletionItemKind = CompletionItemKind = {}));\n    /**\n     * Defines whether the insert text in a completion item should be interpreted as\n     * plain text or a snippet.\n     */\n    var InsertTextFormat;\n    (function (InsertTextFormat) {\n        /**\n         * The primary text to be inserted is treated as a plain string.\n         */\n        InsertTextFormat.PlainText = 1;\n        /**\n         * The primary text to be inserted is treated as a snippet.\n         *\n         * A snippet can define tab stops and placeholders with `$1`, `$2`\n         * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n         * the end of the snippet. Placeholders with equal identifiers are linked,\n         * that is typing in one will update others too.\n         *\n         * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n         */\n        InsertTextFormat.Snippet = 2;\n    })(InsertTextFormat || (exports.InsertTextFormat = InsertTextFormat = {}));\n    /**\n     * Completion item tags are extra annotations that tweak the rendering of a completion\n     * item.\n     *\n     * @since 3.15.0\n     */\n    var CompletionItemTag;\n    (function (CompletionItemTag) {\n        /**\n         * Render a completion as obsolete, usually using a strike-out.\n         */\n        CompletionItemTag.Deprecated = 1;\n    })(CompletionItemTag || (exports.CompletionItemTag = CompletionItemTag = {}));\n    /**\n     * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n     *\n     * @since 3.16.0\n     */\n    var InsertReplaceEdit;\n    (function (InsertReplaceEdit) {\n        /**\n         * Creates a new insert / replace edit\n         */\n        function create(newText, insert, replace) {\n            return { newText: newText, insert: insert, replace: replace };\n        }\n        InsertReplaceEdit.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n        }\n        InsertReplaceEdit.is = is;\n    })(InsertReplaceEdit || (exports.InsertReplaceEdit = InsertReplaceEdit = {}));\n    /**\n     * How whitespace and indentation is handled during completion\n     * item insertion.\n     *\n     * @since 3.16.0\n     */\n    var InsertTextMode;\n    (function (InsertTextMode) {\n        /**\n         * The insertion or replace strings is taken as it is. If the\n         * value is multi line the lines below the cursor will be\n         * inserted using the indentation defined in the string value.\n         * The client will not apply any kind of adjustments to the\n         * string.\n         */\n        InsertTextMode.asIs = 1;\n        /**\n         * The editor adjusts leading whitespace of new lines so that\n         * they match the indentation up to the cursor of the line for\n         * which the item is accepted.\n         *\n         * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n         * multi line completion item is indented using 2 tabs and all\n         * following lines inserted will be indented using 2 tabs as well.\n         */\n        InsertTextMode.adjustIndentation = 2;\n    })(InsertTextMode || (exports.InsertTextMode = InsertTextMode = {}));\n    var CompletionItemLabelDetails;\n    (function (CompletionItemLabelDetails) {\n        function is(value) {\n            var candidate = value;\n            return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n                (Is.string(candidate.description) || candidate.description === undefined);\n        }\n        CompletionItemLabelDetails.is = is;\n    })(CompletionItemLabelDetails || (exports.CompletionItemLabelDetails = CompletionItemLabelDetails = {}));\n    /**\n     * The CompletionItem namespace provides functions to deal with\n     * completion items.\n     */\n    var CompletionItem;\n    (function (CompletionItem) {\n        /**\n         * Create a completion item and seed it with a label.\n         * @param label The completion item's label\n         */\n        function create(label) {\n            return { label: label };\n        }\n        CompletionItem.create = create;\n    })(CompletionItem || (exports.CompletionItem = CompletionItem = {}));\n    /**\n     * The CompletionList namespace provides functions to deal with\n     * completion lists.\n     */\n    var CompletionList;\n    (function (CompletionList) {\n        /**\n         * Creates a new completion list.\n         *\n         * @param items The completion items.\n         * @param isIncomplete The list is not complete.\n         */\n        function create(items, isIncomplete) {\n            return { items: items ? items : [], isIncomplete: !!isIncomplete };\n        }\n        CompletionList.create = create;\n    })(CompletionList || (exports.CompletionList = CompletionList = {}));\n    var MarkedString;\n    (function (MarkedString) {\n        /**\n         * Creates a marked string from plain text.\n         *\n         * @param plainText The plain text.\n         */\n        function fromPlainText(plainText) {\n            return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n        }\n        MarkedString.fromPlainText = fromPlainText;\n        /**\n         * Checks whether the given value conforms to the {@link MarkedString} type.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n        }\n        MarkedString.is = is;\n    })(MarkedString || (exports.MarkedString = MarkedString = {}));\n    var Hover;\n    (function (Hover) {\n        /**\n         * Checks whether the given value conforms to the {@link Hover} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n                MarkedString.is(candidate.contents) ||\n                Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n        }\n        Hover.is = is;\n    })(Hover || (exports.Hover = Hover = {}));\n    /**\n     * The ParameterInformation namespace provides helper functions to work with\n     * {@link ParameterInformation} literals.\n     */\n    var ParameterInformation;\n    (function (ParameterInformation) {\n        /**\n         * Creates a new parameter information literal.\n         *\n         * @param label A label string.\n         * @param documentation A doc string.\n         */\n        function create(label, documentation) {\n            return documentation ? { label: label, documentation: documentation } : { label: label };\n        }\n        ParameterInformation.create = create;\n    })(ParameterInformation || (exports.ParameterInformation = ParameterInformation = {}));\n    /**\n     * The SignatureInformation namespace provides helper functions to work with\n     * {@link SignatureInformation} literals.\n     */\n    var SignatureInformation;\n    (function (SignatureInformation) {\n        function create(label, documentation) {\n            var parameters = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                parameters[_i - 2] = arguments[_i];\n            }\n            var result = { label: label };\n            if (Is.defined(documentation)) {\n                result.documentation = documentation;\n            }\n            if (Is.defined(parameters)) {\n                result.parameters = parameters;\n            }\n            else {\n                result.parameters = [];\n            }\n            return result;\n        }\n        SignatureInformation.create = create;\n    })(SignatureInformation || (exports.SignatureInformation = SignatureInformation = {}));\n    /**\n     * A document highlight kind.\n     */\n    var DocumentHighlightKind;\n    (function (DocumentHighlightKind) {\n        /**\n         * A textual occurrence.\n         */\n        DocumentHighlightKind.Text = 1;\n        /**\n         * Read-access of a symbol, like reading a variable.\n         */\n        DocumentHighlightKind.Read = 2;\n        /**\n         * Write-access of a symbol, like writing to a variable.\n         */\n        DocumentHighlightKind.Write = 3;\n    })(DocumentHighlightKind || (exports.DocumentHighlightKind = DocumentHighlightKind = {}));\n    /**\n     * DocumentHighlight namespace to provide helper functions to work with\n     * {@link DocumentHighlight} literals.\n     */\n    var DocumentHighlight;\n    (function (DocumentHighlight) {\n        /**\n         * Create a DocumentHighlight object.\n         * @param range The range the highlight applies to.\n         * @param kind The highlight kind\n         */\n        function create(range, kind) {\n            var result = { range: range };\n            if (Is.number(kind)) {\n                result.kind = kind;\n            }\n            return result;\n        }\n        DocumentHighlight.create = create;\n    })(DocumentHighlight || (exports.DocumentHighlight = DocumentHighlight = {}));\n    /**\n     * A symbol kind.\n     */\n    var SymbolKind;\n    (function (SymbolKind) {\n        SymbolKind.File = 1;\n        SymbolKind.Module = 2;\n        SymbolKind.Namespace = 3;\n        SymbolKind.Package = 4;\n        SymbolKind.Class = 5;\n        SymbolKind.Method = 6;\n        SymbolKind.Property = 7;\n        SymbolKind.Field = 8;\n        SymbolKind.Constructor = 9;\n        SymbolKind.Enum = 10;\n        SymbolKind.Interface = 11;\n        SymbolKind.Function = 12;\n        SymbolKind.Variable = 13;\n        SymbolKind.Constant = 14;\n        SymbolKind.String = 15;\n        SymbolKind.Number = 16;\n        SymbolKind.Boolean = 17;\n        SymbolKind.Array = 18;\n        SymbolKind.Object = 19;\n        SymbolKind.Key = 20;\n        SymbolKind.Null = 21;\n        SymbolKind.EnumMember = 22;\n        SymbolKind.Struct = 23;\n        SymbolKind.Event = 24;\n        SymbolKind.Operator = 25;\n        SymbolKind.TypeParameter = 26;\n    })(SymbolKind || (exports.SymbolKind = SymbolKind = {}));\n    /**\n     * Symbol tags are extra annotations that tweak the rendering of a symbol.\n     *\n     * @since 3.16\n     */\n    var SymbolTag;\n    (function (SymbolTag) {\n        /**\n         * Render a symbol as obsolete, usually using a strike-out.\n         */\n        SymbolTag.Deprecated = 1;\n    })(SymbolTag || (exports.SymbolTag = SymbolTag = {}));\n    var SymbolInformation;\n    (function (SymbolInformation) {\n        /**\n         * Creates a new symbol information literal.\n         *\n         * @param name The name of the symbol.\n         * @param kind The kind of the symbol.\n         * @param range The range of the location of the symbol.\n         * @param uri The resource of the location of symbol.\n         * @param containerName The name of the symbol containing the symbol.\n         */\n        function create(name, kind, range, uri, containerName) {\n            var result = {\n                name: name,\n                kind: kind,\n                location: { uri: uri, range: range }\n            };\n            if (containerName) {\n                result.containerName = containerName;\n            }\n            return result;\n        }\n        SymbolInformation.create = create;\n    })(SymbolInformation || (exports.SymbolInformation = SymbolInformation = {}));\n    var WorkspaceSymbol;\n    (function (WorkspaceSymbol) {\n        /**\n         * Create a new workspace symbol.\n         *\n         * @param name The name of the symbol.\n         * @param kind The kind of the symbol.\n         * @param uri The resource of the location of the symbol.\n         * @param range An options range of the location.\n         * @returns A WorkspaceSymbol.\n         */\n        function create(name, kind, uri, range) {\n            return range !== undefined\n                ? { name: name, kind: kind, location: { uri: uri, range: range } }\n                : { name: name, kind: kind, location: { uri: uri } };\n        }\n        WorkspaceSymbol.create = create;\n    })(WorkspaceSymbol || (exports.WorkspaceSymbol = WorkspaceSymbol = {}));\n    var DocumentSymbol;\n    (function (DocumentSymbol) {\n        /**\n         * Creates a new symbol information literal.\n         *\n         * @param name The name of the symbol.\n         * @param detail The detail of the symbol.\n         * @param kind The kind of the symbol.\n         * @param range The range of the symbol.\n         * @param selectionRange The selectionRange of the symbol.\n         * @param children Children of the symbol.\n         */\n        function create(name, detail, kind, range, selectionRange, children) {\n            var result = {\n                name: name,\n                detail: detail,\n                kind: kind,\n                range: range,\n                selectionRange: selectionRange\n            };\n            if (children !== undefined) {\n                result.children = children;\n            }\n            return result;\n        }\n        DocumentSymbol.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return candidate &&\n                Is.string(candidate.name) && Is.number(candidate.kind) &&\n                Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n                (candidate.detail === undefined || Is.string(candidate.detail)) &&\n                (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n                (candidate.children === undefined || Array.isArray(candidate.children)) &&\n                (candidate.tags === undefined || Array.isArray(candidate.tags));\n        }\n        DocumentSymbol.is = is;\n    })(DocumentSymbol || (exports.DocumentSymbol = DocumentSymbol = {}));\n    /**\n     * A set of predefined code action kinds\n     */\n    var CodeActionKind;\n    (function (CodeActionKind) {\n        /**\n         * Empty kind.\n         */\n        CodeActionKind.Empty = '';\n        /**\n         * Base kind for quickfix actions: 'quickfix'\n         */\n        CodeActionKind.QuickFix = 'quickfix';\n        /**\n         * Base kind for refactoring actions: 'refactor'\n         */\n        CodeActionKind.Refactor = 'refactor';\n        /**\n         * Base kind for refactoring extraction actions: 'refactor.extract'\n         *\n         * Example extract actions:\n         *\n         * - Extract method\n         * - Extract function\n         * - Extract variable\n         * - Extract interface from class\n         * - ...\n         */\n        CodeActionKind.RefactorExtract = 'refactor.extract';\n        /**\n         * Base kind for refactoring inline actions: 'refactor.inline'\n         *\n         * Example inline actions:\n         *\n         * - Inline function\n         * - Inline variable\n         * - Inline constant\n         * - ...\n         */\n        CodeActionKind.RefactorInline = 'refactor.inline';\n        /**\n         * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n         *\n         * Example rewrite actions:\n         *\n         * - Convert JavaScript function to class\n         * - Add or remove parameter\n         * - Encapsulate field\n         * - Make method static\n         * - Move method to base class\n         * - ...\n         */\n        CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n        /**\n         * Base kind for source actions: `source`\n         *\n         * Source code actions apply to the entire file.\n         */\n        CodeActionKind.Source = 'source';\n        /**\n         * Base kind for an organize imports source action: `source.organizeImports`\n         */\n        CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n        /**\n         * Base kind for auto-fix source actions: `source.fixAll`.\n         *\n         * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n         * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n         *\n         * @since 3.15.0\n         */\n        CodeActionKind.SourceFixAll = 'source.fixAll';\n    })(CodeActionKind || (exports.CodeActionKind = CodeActionKind = {}));\n    /**\n     * The reason why code actions were requested.\n     *\n     * @since 3.17.0\n     */\n    var CodeActionTriggerKind;\n    (function (CodeActionTriggerKind) {\n        /**\n         * Code actions were explicitly requested by the user or by an extension.\n         */\n        CodeActionTriggerKind.Invoked = 1;\n        /**\n         * Code actions were requested automatically.\n         *\n         * This typically happens when current selection in a file changes, but can\n         * also be triggered when file content changes.\n         */\n        CodeActionTriggerKind.Automatic = 2;\n    })(CodeActionTriggerKind || (exports.CodeActionTriggerKind = CodeActionTriggerKind = {}));\n    /**\n     * The CodeActionContext namespace provides helper functions to work with\n     * {@link CodeActionContext} literals.\n     */\n    var CodeActionContext;\n    (function (CodeActionContext) {\n        /**\n         * Creates a new CodeActionContext literal.\n         */\n        function create(diagnostics, only, triggerKind) {\n            var result = { diagnostics: diagnostics };\n            if (only !== undefined && only !== null) {\n                result.only = only;\n            }\n            if (triggerKind !== undefined && triggerKind !== null) {\n                result.triggerKind = triggerKind;\n            }\n            return result;\n        }\n        CodeActionContext.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n                && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n                && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n        }\n        CodeActionContext.is = is;\n    })(CodeActionContext || (exports.CodeActionContext = CodeActionContext = {}));\n    var CodeAction;\n    (function (CodeAction) {\n        function create(title, kindOrCommandOrEdit, kind) {\n            var result = { title: title };\n            var checkKind = true;\n            if (typeof kindOrCommandOrEdit === 'string') {\n                checkKind = false;\n                result.kind = kindOrCommandOrEdit;\n            }\n            else if (Command.is(kindOrCommandOrEdit)) {\n                result.command = kindOrCommandOrEdit;\n            }\n            else {\n                result.edit = kindOrCommandOrEdit;\n            }\n            if (checkKind && kind !== undefined) {\n                result.kind = kind;\n            }\n            return result;\n        }\n        CodeAction.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate && Is.string(candidate.title) &&\n                (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n                (candidate.kind === undefined || Is.string(candidate.kind)) &&\n                (candidate.edit !== undefined || candidate.command !== undefined) &&\n                (candidate.command === undefined || Command.is(candidate.command)) &&\n                (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n                (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n        }\n        CodeAction.is = is;\n    })(CodeAction || (exports.CodeAction = CodeAction = {}));\n    /**\n     * The CodeLens namespace provides helper functions to work with\n     * {@link CodeLens} literals.\n     */\n    var CodeLens;\n    (function (CodeLens) {\n        /**\n         * Creates a new CodeLens literal.\n         */\n        function create(range, data) {\n            var result = { range: range };\n            if (Is.defined(data)) {\n                result.data = data;\n            }\n            return result;\n        }\n        CodeLens.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link CodeLens} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n        }\n        CodeLens.is = is;\n    })(CodeLens || (exports.CodeLens = CodeLens = {}));\n    /**\n     * The FormattingOptions namespace provides helper functions to work with\n     * {@link FormattingOptions} literals.\n     */\n    var FormattingOptions;\n    (function (FormattingOptions) {\n        /**\n         * Creates a new FormattingOptions literal.\n         */\n        function create(tabSize, insertSpaces) {\n            return { tabSize: tabSize, insertSpaces: insertSpaces };\n        }\n        FormattingOptions.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n        }\n        FormattingOptions.is = is;\n    })(FormattingOptions || (exports.FormattingOptions = FormattingOptions = {}));\n    /**\n     * The DocumentLink namespace provides helper functions to work with\n     * {@link DocumentLink} literals.\n     */\n    var DocumentLink;\n    (function (DocumentLink) {\n        /**\n         * Creates a new DocumentLink literal.\n         */\n        function create(range, target, data) {\n            return { range: range, target: target, data: data };\n        }\n        DocumentLink.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n        }\n        DocumentLink.is = is;\n    })(DocumentLink || (exports.DocumentLink = DocumentLink = {}));\n    /**\n     * The SelectionRange namespace provides helper function to work with\n     * SelectionRange literals.\n     */\n    var SelectionRange;\n    (function (SelectionRange) {\n        /**\n         * Creates a new SelectionRange\n         * @param range the range.\n         * @param parent an optional parent.\n         */\n        function create(range, parent) {\n            return { range: range, parent: parent };\n        }\n        SelectionRange.create = create;\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n        }\n        SelectionRange.is = is;\n    })(SelectionRange || (exports.SelectionRange = SelectionRange = {}));\n    /**\n     * A set of predefined token types. This set is not fixed\n     * an clients can specify additional token types via the\n     * corresponding client capabilities.\n     *\n     * @since 3.16.0\n     */\n    var SemanticTokenTypes;\n    (function (SemanticTokenTypes) {\n        SemanticTokenTypes[\"namespace\"] = \"namespace\";\n        /**\n         * Represents a generic type. Acts as a fallback for types which can't be mapped to\n         * a specific type like class or enum.\n         */\n        SemanticTokenTypes[\"type\"] = \"type\";\n        SemanticTokenTypes[\"class\"] = \"class\";\n        SemanticTokenTypes[\"enum\"] = \"enum\";\n        SemanticTokenTypes[\"interface\"] = \"interface\";\n        SemanticTokenTypes[\"struct\"] = \"struct\";\n        SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n        SemanticTokenTypes[\"parameter\"] = \"parameter\";\n        SemanticTokenTypes[\"variable\"] = \"variable\";\n        SemanticTokenTypes[\"property\"] = \"property\";\n        SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n        SemanticTokenTypes[\"event\"] = \"event\";\n        SemanticTokenTypes[\"function\"] = \"function\";\n        SemanticTokenTypes[\"method\"] = \"method\";\n        SemanticTokenTypes[\"macro\"] = \"macro\";\n        SemanticTokenTypes[\"keyword\"] = \"keyword\";\n        SemanticTokenTypes[\"modifier\"] = \"modifier\";\n        SemanticTokenTypes[\"comment\"] = \"comment\";\n        SemanticTokenTypes[\"string\"] = \"string\";\n        SemanticTokenTypes[\"number\"] = \"number\";\n        SemanticTokenTypes[\"regexp\"] = \"regexp\";\n        SemanticTokenTypes[\"operator\"] = \"operator\";\n        /**\n         * @since 3.17.0\n         */\n        SemanticTokenTypes[\"decorator\"] = \"decorator\";\n    })(SemanticTokenTypes || (exports.SemanticTokenTypes = SemanticTokenTypes = {}));\n    /**\n     * A set of predefined token modifiers. This set is not fixed\n     * an clients can specify additional token types via the\n     * corresponding client capabilities.\n     *\n     * @since 3.16.0\n     */\n    var SemanticTokenModifiers;\n    (function (SemanticTokenModifiers) {\n        SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n        SemanticTokenModifiers[\"definition\"] = \"definition\";\n        SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n        SemanticTokenModifiers[\"static\"] = \"static\";\n        SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n        SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n        SemanticTokenModifiers[\"async\"] = \"async\";\n        SemanticTokenModifiers[\"modification\"] = \"modification\";\n        SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n        SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n    })(SemanticTokenModifiers || (exports.SemanticTokenModifiers = SemanticTokenModifiers = {}));\n    /**\n     * @since 3.16.0\n     */\n    var SemanticTokens;\n    (function (SemanticTokens) {\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n                Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n        }\n        SemanticTokens.is = is;\n    })(SemanticTokens || (exports.SemanticTokens = SemanticTokens = {}));\n    /**\n     * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n     *\n     * @since 3.17.0\n     */\n    var InlineValueText;\n    (function (InlineValueText) {\n        /**\n         * Creates a new InlineValueText literal.\n         */\n        function create(range, text) {\n            return { range: range, text: text };\n        }\n        InlineValueText.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n        }\n        InlineValueText.is = is;\n    })(InlineValueText || (exports.InlineValueText = InlineValueText = {}));\n    /**\n     * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n     *\n     * @since 3.17.0\n     */\n    var InlineValueVariableLookup;\n    (function (InlineValueVariableLookup) {\n        /**\n         * Creates a new InlineValueText literal.\n         */\n        function create(range, variableName, caseSensitiveLookup) {\n            return { range: range, variableName: variableName, caseSensitiveLookup: caseSensitiveLookup };\n        }\n        InlineValueVariableLookup.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n                && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n        }\n        InlineValueVariableLookup.is = is;\n    })(InlineValueVariableLookup || (exports.InlineValueVariableLookup = InlineValueVariableLookup = {}));\n    /**\n     * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n     *\n     * @since 3.17.0\n     */\n    var InlineValueEvaluatableExpression;\n    (function (InlineValueEvaluatableExpression) {\n        /**\n         * Creates a new InlineValueEvaluatableExpression literal.\n         */\n        function create(range, expression) {\n            return { range: range, expression: expression };\n        }\n        InlineValueEvaluatableExpression.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n                && (Is.string(candidate.expression) || candidate.expression === undefined);\n        }\n        InlineValueEvaluatableExpression.is = is;\n    })(InlineValueEvaluatableExpression || (exports.InlineValueEvaluatableExpression = InlineValueEvaluatableExpression = {}));\n    /**\n     * The InlineValueContext namespace provides helper functions to work with\n     * {@link InlineValueContext} literals.\n     *\n     * @since 3.17.0\n     */\n    var InlineValueContext;\n    (function (InlineValueContext) {\n        /**\n         * Creates a new InlineValueContext literal.\n         */\n        function create(frameId, stoppedLocation) {\n            return { frameId: frameId, stoppedLocation: stoppedLocation };\n        }\n        InlineValueContext.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Range.is(value.stoppedLocation);\n        }\n        InlineValueContext.is = is;\n    })(InlineValueContext || (exports.InlineValueContext = InlineValueContext = {}));\n    /**\n     * Inlay hint kinds.\n     *\n     * @since 3.17.0\n     */\n    var InlayHintKind;\n    (function (InlayHintKind) {\n        /**\n         * An inlay hint that for a type annotation.\n         */\n        InlayHintKind.Type = 1;\n        /**\n         * An inlay hint that is for a parameter.\n         */\n        InlayHintKind.Parameter = 2;\n        function is(value) {\n            return value === 1 || value === 2;\n        }\n        InlayHintKind.is = is;\n    })(InlayHintKind || (exports.InlayHintKind = InlayHintKind = {}));\n    var InlayHintLabelPart;\n    (function (InlayHintLabelPart) {\n        function create(value) {\n            return { value: value };\n        }\n        InlayHintLabelPart.create = create;\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate)\n                && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n                && (candidate.location === undefined || Location.is(candidate.location))\n                && (candidate.command === undefined || Command.is(candidate.command));\n        }\n        InlayHintLabelPart.is = is;\n    })(InlayHintLabelPart || (exports.InlayHintLabelPart = InlayHintLabelPart = {}));\n    var InlayHint;\n    (function (InlayHint) {\n        function create(position, label, kind) {\n            var result = { position: position, label: label };\n            if (kind !== undefined) {\n                result.kind = kind;\n            }\n            return result;\n        }\n        InlayHint.create = create;\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Position.is(candidate.position)\n                && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n                && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n                && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n                && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n                && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n                && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n        }\n        InlayHint.is = is;\n    })(InlayHint || (exports.InlayHint = InlayHint = {}));\n    var StringValue;\n    (function (StringValue) {\n        function createSnippet(value) {\n            return { kind: 'snippet', value: value };\n        }\n        StringValue.createSnippet = createSnippet;\n    })(StringValue || (exports.StringValue = StringValue = {}));\n    var InlineCompletionItem;\n    (function (InlineCompletionItem) {\n        function create(insertText, filterText, range, command) {\n            return { insertText: insertText, filterText: filterText, range: range, command: command };\n        }\n        InlineCompletionItem.create = create;\n    })(InlineCompletionItem || (exports.InlineCompletionItem = InlineCompletionItem = {}));\n    var InlineCompletionList;\n    (function (InlineCompletionList) {\n        function create(items) {\n            return { items: items };\n        }\n        InlineCompletionList.create = create;\n    })(InlineCompletionList || (exports.InlineCompletionList = InlineCompletionList = {}));\n    /**\n     * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n     *\n     * @since 3.18.0\n     * @proposed\n     */\n    var InlineCompletionTriggerKind;\n    (function (InlineCompletionTriggerKind) {\n        /**\n         * Completion was triggered explicitly by a user gesture.\n         */\n        InlineCompletionTriggerKind.Invoked = 0;\n        /**\n         * Completion was triggered automatically while editing.\n         */\n        InlineCompletionTriggerKind.Automatic = 1;\n    })(InlineCompletionTriggerKind || (exports.InlineCompletionTriggerKind = InlineCompletionTriggerKind = {}));\n    var SelectedCompletionInfo;\n    (function (SelectedCompletionInfo) {\n        function create(range, text) {\n            return { range: range, text: text };\n        }\n        SelectedCompletionInfo.create = create;\n    })(SelectedCompletionInfo || (exports.SelectedCompletionInfo = SelectedCompletionInfo = {}));\n    var InlineCompletionContext;\n    (function (InlineCompletionContext) {\n        function create(triggerKind, selectedCompletionInfo) {\n            return { triggerKind: triggerKind, selectedCompletionInfo: selectedCompletionInfo };\n        }\n        InlineCompletionContext.create = create;\n    })(InlineCompletionContext || (exports.InlineCompletionContext = InlineCompletionContext = {}));\n    var WorkspaceFolder;\n    (function (WorkspaceFolder) {\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n        }\n        WorkspaceFolder.is = is;\n    })(WorkspaceFolder || (exports.WorkspaceFolder = WorkspaceFolder = {}));\n    exports.EOL = ['\\n', '\\r\\n', '\\r'];\n    /**\n     * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n     */\n    var TextDocument;\n    (function (TextDocument) {\n        /**\n         * Creates a new ITextDocument literal from the given uri and content.\n         * @param uri The document's uri.\n         * @param languageId The document's language Id.\n         * @param version The document's version.\n         * @param content The document's content.\n         */\n        function create(uri, languageId, version, content) {\n            return new FullTextDocument(uri, languageId, version, content);\n        }\n        TextDocument.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n                && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n        }\n        TextDocument.is = is;\n        function applyEdits(document, edits) {\n            var text = document.getText();\n            var sortedEdits = mergeSort(edits, function (a, b) {\n                var diff = a.range.start.line - b.range.start.line;\n                if (diff === 0) {\n                    return a.range.start.character - b.range.start.character;\n                }\n                return diff;\n            });\n            var lastModifiedOffset = text.length;\n            for (var i = sortedEdits.length - 1; i >= 0; i--) {\n                var e = sortedEdits[i];\n                var startOffset = document.offsetAt(e.range.start);\n                var endOffset = document.offsetAt(e.range.end);\n                if (endOffset <= lastModifiedOffset) {\n                    text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n                }\n                else {\n                    throw new Error('Overlapping edit');\n                }\n                lastModifiedOffset = startOffset;\n            }\n            return text;\n        }\n        TextDocument.applyEdits = applyEdits;\n        function mergeSort(data, compare) {\n            if (data.length <= 1) {\n                // sorted\n                return data;\n            }\n            var p = (data.length / 2) | 0;\n            var left = data.slice(0, p);\n            var right = data.slice(p);\n            mergeSort(left, compare);\n            mergeSort(right, compare);\n            var leftIdx = 0;\n            var rightIdx = 0;\n            var i = 0;\n            while (leftIdx < left.length && rightIdx < right.length) {\n                var ret = compare(left[leftIdx], right[rightIdx]);\n                if (ret <= 0) {\n                    // smaller_equal -> take left to preserve order\n                    data[i++] = left[leftIdx++];\n                }\n                else {\n                    // greater -> take right\n                    data[i++] = right[rightIdx++];\n                }\n            }\n            while (leftIdx < left.length) {\n                data[i++] = left[leftIdx++];\n            }\n            while (rightIdx < right.length) {\n                data[i++] = right[rightIdx++];\n            }\n            return data;\n        }\n    })(TextDocument || (exports.TextDocument = TextDocument = {}));\n    /**\n     * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n     */\n    var FullTextDocument = /** @class */ (function () {\n        function FullTextDocument(uri, languageId, version, content) {\n            this._uri = uri;\n            this._languageId = languageId;\n            this._version = version;\n            this._content = content;\n            this._lineOffsets = undefined;\n        }\n        Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n            get: function () {\n                return this._uri;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n            get: function () {\n                return this._languageId;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(FullTextDocument.prototype, \"version\", {\n            get: function () {\n                return this._version;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        FullTextDocument.prototype.getText = function (range) {\n            if (range) {\n                var start = this.offsetAt(range.start);\n                var end = this.offsetAt(range.end);\n                return this._content.substring(start, end);\n            }\n            return this._content;\n        };\n        FullTextDocument.prototype.update = function (event, version) {\n            this._content = event.text;\n            this._version = version;\n            this._lineOffsets = undefined;\n        };\n        FullTextDocument.prototype.getLineOffsets = function () {\n            if (this._lineOffsets === undefined) {\n                var lineOffsets = [];\n                var text = this._content;\n                var isLineStart = true;\n                for (var i = 0; i < text.length; i++) {\n                    if (isLineStart) {\n                        lineOffsets.push(i);\n                        isLineStart = false;\n                    }\n                    var ch = text.charAt(i);\n                    isLineStart = (ch === '\\r' || ch === '\\n');\n                    if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                        i++;\n                    }\n                }\n                if (isLineStart && text.length > 0) {\n                    lineOffsets.push(text.length);\n                }\n                this._lineOffsets = lineOffsets;\n            }\n            return this._lineOffsets;\n        };\n        FullTextDocument.prototype.positionAt = function (offset) {\n            offset = Math.max(Math.min(offset, this._content.length), 0);\n            var lineOffsets = this.getLineOffsets();\n            var low = 0, high = lineOffsets.length;\n            if (high === 0) {\n                return Position.create(0, offset);\n            }\n            while (low < high) {\n                var mid = Math.floor((low + high) / 2);\n                if (lineOffsets[mid] > offset) {\n                    high = mid;\n                }\n                else {\n                    low = mid + 1;\n                }\n            }\n            // low is the least x for which the line offset is larger than the current offset\n            // or array.length if no line offset is larger than the current offset\n            var line = low - 1;\n            return Position.create(line, offset - lineOffsets[line]);\n        };\n        FullTextDocument.prototype.offsetAt = function (position) {\n            var lineOffsets = this.getLineOffsets();\n            if (position.line >= lineOffsets.length) {\n                return this._content.length;\n            }\n            else if (position.line < 0) {\n                return 0;\n            }\n            var lineOffset = lineOffsets[position.line];\n            var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n            return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n        };\n        Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n            get: function () {\n                return this.getLineOffsets().length;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return FullTextDocument;\n    }());\n    var Is;\n    (function (Is) {\n        var toString = Object.prototype.toString;\n        function defined(value) {\n            return typeof value !== 'undefined';\n        }\n        Is.defined = defined;\n        function undefined(value) {\n            return typeof value === 'undefined';\n        }\n        Is.undefined = undefined;\n        function boolean(value) {\n            return value === true || value === false;\n        }\n        Is.boolean = boolean;\n        function string(value) {\n            return toString.call(value) === '[object String]';\n        }\n        Is.string = string;\n        function number(value) {\n            return toString.call(value) === '[object Number]';\n        }\n        Is.number = number;\n        function numberRange(value, min, max) {\n            return toString.call(value) === '[object Number]' && min <= value && value <= max;\n        }\n        Is.numberRange = numberRange;\n        function integer(value) {\n            return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n        }\n        Is.integer = integer;\n        function uinteger(value) {\n            return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n        }\n        Is.uinteger = uinteger;\n        function func(value) {\n            return toString.call(value) === '[object Function]';\n        }\n        Is.func = func;\n        function objectLiteral(value) {\n            // Strictly speaking class instances pass this check as well. Since the LSP\n            // doesn't use classes we ignore this for now. If we do we need to add something\n            // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n            return value !== null && typeof value === 'object';\n        }\n        Is.objectLiteral = objectLiteral;\n        function typedArray(value, check) {\n            return Array.isArray(value) && value.every(check);\n        }\n        Is.typedArray = typedArray;\n    })(Is || (Is = {}));\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Line = void 0;\nclass Line {\n    constructor(document, range) {\n        this.document = document;\n        this.range = range;\n    }\n    getRange() {\n        return this.range;\n    }\n    getTextContent() {\n        return this.document.getText().substring(this.document.offsetAt(this.range.start), this.document.offsetAt(this.range.end));\n    }\n    isAfter(line) {\n        return this.range.start.line > line.range.start.line;\n    }\n    isBefore(line) {\n        return this.range.start.line < line;\n    }\n}\nexports.Line = Line;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Remy Suen. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Util = void 0;\nclass Util {\n    static isUTF8BOM(char) {\n        const uintArray = Uint8Array.from(Buffer.from(char, \"UTF-8\"));\n        return uintArray[0] === 0xEF && uintArray[1] == 0xBB && uintArray[2] == 0xBF;\n    }\n    static isWhitespace(char) {\n        return char === ' ' || char === '\\t' || Util.isNewline(char);\n    }\n    static isNewline(char) {\n        return char === '\\r' || char === '\\n';\n    }\n    static findLeadingNonWhitespace(content, escapeChar) {\n        whitespaceCheck: for (let i = 0; i < content.length; i++) {\n            switch (content.charAt(i)) {\n                case ' ':\n                case '\\t':\n                    continue;\n                case escapeChar:\n                    escapeCheck: for (let j = i + 1; j < content.length; j++) {\n                        switch (content.charAt(j)) {\n                            case ' ':\n                            case '\\t':\n                                continue;\n                            case '\\r':\n                                // offset one more for \\r\\n\n                                i = j + 1;\n                                continue whitespaceCheck;\n                            case '\\n':\n                                i = j;\n                                continue whitespaceCheck;\n                            default:\n                                break escapeCheck;\n                        }\n                    }\n                    // found an escape character and then reached EOF\n                    return -1;\n                default:\n                    return i;\n            }\n        }\n        // only possible if the content is the empty string\n        return -1;\n    }\n    /**\n     * Determines if the given position is contained within the given range.\n     *\n     * @param position the position to check\n     * @param range the range to see if the position is inside of\n     */\n    static isInsideRange(position, range) {\n        if (range.start.line === range.end.line) {\n            return range.start.line === position.line\n                && range.start.character <= position.character\n                && position.character <= range.end.character;\n        }\n        else if (range.start.line === position.line) {\n            return range.start.character <= position.character;\n        }\n        else if (range.end.line === position.line) {\n            return position.character <= range.end.character;\n        }\n        return range.start.line < position.line && position.line < range.end.line;\n    }\n    static parseHeredocName(value) {\n        value = value.substring(2);\n        if (value.charAt(0) === '-') {\n            value = value.substring(1);\n        }\n        if (value.charAt(0) === '\"') {\n            if (value.charAt(value.length - 1) !== '\"') {\n                return null;\n            }\n            value = value.substring(1, value.length - 1);\n        }\n        if (value.charAt(0) === '\\'') {\n            if (value.charAt(value.length - 1) !== '\\'') {\n                return null;\n            }\n            value = value.substring(1, value.length - 1);\n        }\n        if (value.charAt(0) === \"<\") {\n            return null;\n        }\n        return value;\n    }\n}\nexports.Util = Util;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Remy Suen. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Parser = void 0;\nconst vscode_languageserver_textdocument_1 = require(\"vscode-languageserver-textdocument\");\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst comment_1 = require(\"./comment\");\nconst parserDirective_1 = require(\"./parserDirective\");\nconst instruction_1 = require(\"./instruction\");\nconst add_1 = require(\"./instructions/add\");\nconst arg_1 = require(\"./instructions/arg\");\nconst cmd_1 = require(\"./instructions/cmd\");\nconst copy_1 = require(\"./instructions/copy\");\nconst env_1 = require(\"./instructions/env\");\nconst entrypoint_1 = require(\"./instructions/entrypoint\");\nconst from_1 = require(\"./instructions/from\");\nconst healthcheck_1 = require(\"./instructions/healthcheck\");\nconst label_1 = require(\"./instructions/label\");\nconst onbuild_1 = require(\"./instructions/onbuild\");\nconst run_1 = require(\"./instructions/run\");\nconst shell_1 = require(\"./instructions/shell\");\nconst stopsignal_1 = require(\"./instructions/stopsignal\");\nconst workdir_1 = require(\"./instructions/workdir\");\nconst user_1 = require(\"./instructions/user\");\nconst volume_1 = require(\"./instructions/volume\");\nconst dockerfile_1 = require(\"./dockerfile\");\nconst util_1 = require(\"./util\");\nconst main_1 = require(\"./main\");\nclass Parser {\n    constructor() {\n        this.escapeChar = null;\n    }\n    static createInstruction(document, dockerfile, escapeChar, lineRange, instruction, instructionRange) {\n        switch (instruction.toUpperCase()) {\n            case \"ADD\":\n                return new add_1.Add(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n            case \"ARG\":\n                return new arg_1.Arg(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n            case \"CMD\":\n                return new cmd_1.Cmd(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n            case \"COPY\":\n                return new copy_1.Copy(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n            case \"ENTRYPOINT\":\n                return new entrypoint_1.Entrypoint(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n            case \"ENV\":\n                return new env_1.Env(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n            case \"FROM\":\n                return new from_1.From(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n            case \"HEALTHCHECK\":\n                return new healthcheck_1.Healthcheck(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n            case \"LABEL\":\n                return new label_1.Label(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n            case \"ONBUILD\":\n                return new onbuild_1.Onbuild(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n            case \"RUN\":\n                return new run_1.Run(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n            case \"SHELL\":\n                return new shell_1.Shell(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n            case \"STOPSIGNAL\":\n                return new stopsignal_1.Stopsignal(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n            case \"WORKDIR\":\n                return new workdir_1.Workdir(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n            case \"USER\":\n                return new user_1.User(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n            case \"VOLUME\":\n                return new volume_1.Volume(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n        }\n        return new instruction_1.Instruction(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\n    }\n    getParserDirectives(document, buffer) {\n        // reset the escape directive in between runs\n        const directives = [];\n        this.escapeChar = '';\n        const offset = util_1.Util.isUTF8BOM(buffer.substring(0, 1)) ? 1 : 0;\n        directiveCheck: for (let i = offset; i < buffer.length; i++) {\n            switch (buffer.charAt(i)) {\n                case ' ':\n                case '\\t':\n                    break;\n                case '\\r':\n                case '\\n':\n                    // blank lines stop the parsing of directives immediately\n                    break directiveCheck;\n                case '#':\n                    let directiveStart = -1;\n                    let directiveEnd = -1;\n                    for (let j = i + 1; j < buffer.length; j++) {\n                        let char = buffer.charAt(j);\n                        switch (char) {\n                            case ' ':\n                            case '\\t':\n                                if (directiveStart !== -1 && directiveEnd === -1) {\n                                    directiveEnd = j;\n                                }\n                                break;\n                            case '\\r':\n                            case '\\n':\n                                break directiveCheck;\n                            case '=':\n                                let valueStart = -1;\n                                let valueEnd = -1;\n                                if (directiveEnd === -1) {\n                                    directiveEnd = j;\n                                }\n                                // assume the line ends with the file\n                                let lineEnd = buffer.length;\n                                directiveValue: for (let k = j + 1; k < buffer.length; k++) {\n                                    char = buffer.charAt(k);\n                                    switch (char) {\n                                        case '\\r':\n                                        case '\\n':\n                                            if (valueStart !== -1 && valueEnd === -1) {\n                                                valueEnd = k;\n                                            }\n                                            // line break found, reset\n                                            lineEnd = k;\n                                            break directiveValue;\n                                        case '\\t':\n                                        case ' ':\n                                            if (valueStart !== -1 && valueEnd === -1) {\n                                                valueEnd = k;\n                                            }\n                                            continue;\n                                        default:\n                                            if (valueStart === -1) {\n                                                valueStart = k;\n                                            }\n                                            break;\n                                    }\n                                }\n                                if (directiveStart === -1) {\n                                    // no directive, it's a regular comment\n                                    break directiveCheck;\n                                }\n                                if (valueStart === -1) {\n                                    // no non-whitespace characters found, highlight all the characters then\n                                    valueStart = j + 1;\n                                    valueEnd = lineEnd;\n                                }\n                                else if (valueEnd === -1) {\n                                    // reached EOF\n                                    valueEnd = buffer.length;\n                                }\n                                const lineRange = vscode_languageserver_types_1.Range.create(document.positionAt(i), document.positionAt(lineEnd));\n                                const nameRange = vscode_languageserver_types_1.Range.create(document.positionAt(directiveStart), document.positionAt(directiveEnd));\n                                const valueRange = vscode_languageserver_types_1.Range.create(document.positionAt(valueStart), document.positionAt(valueEnd));\n                                directives.push(new parserDirective_1.ParserDirective(document, lineRange, nameRange, valueRange));\n                                directiveStart = -1;\n                                if (buffer.charAt(valueEnd) === '\\r') {\n                                    // skip over the \\r\n                                    i = valueEnd + 1;\n                                }\n                                else {\n                                    i = valueEnd;\n                                }\n                                continue directiveCheck;\n                            default:\n                                if (directiveStart === -1) {\n                                    directiveStart = j;\n                                }\n                                break;\n                        }\n                    }\n                    break;\n                default:\n                    break directiveCheck;\n            }\n        }\n        return directives;\n    }\n    parse(buffer) {\n        this.document = vscode_languageserver_textdocument_1.TextDocument.create(\"\", \"\", 0, buffer);\n        this.buffer = buffer;\n        let dockerfile = new dockerfile_1.Dockerfile(this.document);\n        let directives = this.getParserDirectives(this.document, this.buffer);\n        let offset = 0;\n        this.escapeChar = '\\\\';\n        if (directives.length > 0) {\n            dockerfile.setDirectives(directives);\n            this.escapeChar = dockerfile.getEscapeCharacter();\n            // start parsing after the directives\n            offset = this.document.offsetAt(vscode_languageserver_types_1.Position.create(directives.length, 0));\n        }\n        else if (util_1.Util.isUTF8BOM(buffer.substring(0, 1))) {\n            offset = 1;\n        }\n        for (let i = offset; i < this.buffer.length; i++) {\n            const char = this.buffer.charAt(i);\n            switch (char) {\n                case ' ':\n                case '\\t':\n                case '\\r':\n                case '\\n':\n                    break;\n                case '#':\n                    i = this.processComment(dockerfile, i);\n                    break;\n                default:\n                    i = this.processInstruction(dockerfile, char, i);\n                    break;\n            }\n        }\n        dockerfile.organizeComments();\n        return dockerfile;\n    }\n    processInstruction(dockerfile, char, start) {\n        let instruction = char;\n        let instructionEnd = -1;\n        let escapedInstruction = false;\n        instructionCheck: for (let i = start + 1; i < this.buffer.length; i++) {\n            char = this.buffer.charAt(i);\n            switch (char) {\n                case this.escapeChar:\n                    escapedInstruction = true;\n                    char = this.buffer.charAt(i + 1);\n                    if (char === '\\r' || char === '\\n') {\n                        if (instructionEnd === -1) {\n                            instructionEnd = i;\n                        }\n                        i++;\n                    }\n                    else if (char === ' ' || char === '\\t') {\n                        for (let j = i + 2; j < this.buffer.length; j++) {\n                            switch (this.buffer.charAt(j)) {\n                                case ' ':\n                                case '\\t':\n                                    break;\n                                case '\\r':\n                                case '\\n':\n                                    i = j;\n                                    continue instructionCheck;\n                                default:\n                                    // found an argument, mark end of instruction\n                                    instructionEnd = i + 1;\n                                    instruction = instruction + this.escapeChar;\n                                    i = j - 2;\n                                    continue instructionCheck;\n                            }\n                        }\n                        // reached EOF\n                        instructionEnd = i + 1;\n                        instruction = instruction + this.escapeChar;\n                        break instructionCheck;\n                    }\n                    else {\n                        instructionEnd = i + 1;\n                        instruction = instruction + this.escapeChar;\n                        // reset and consider it as one contiguous word\n                        escapedInstruction = false;\n                    }\n                    break;\n                case ' ':\n                case '\\t':\n                    if (escapedInstruction) {\n                        // on an escaped newline, need to search for non-whitespace\n                        escapeCheck: for (let j = i + 1; j < this.buffer.length; j++) {\n                            switch (this.buffer.charAt(j)) {\n                                case ' ':\n                                case '\\t':\n                                    break;\n                                case '\\r':\n                                case '\\n':\n                                    i = j;\n                                    continue instructionCheck;\n                                default:\n                                    break escapeCheck;\n                            }\n                        }\n                        escapedInstruction = false;\n                    }\n                    if (instructionEnd === -1) {\n                        instructionEnd = i;\n                    }\n                    i = this.processArguments(dockerfile, instruction, instructionEnd, start, i);\n                    dockerfile.addInstruction(this.createInstruction(dockerfile, instruction, start, instructionEnd, i));\n                    return i;\n                case '\\r':\n                case '\\n':\n                    if (escapedInstruction) {\n                        continue;\n                    }\n                    if (instructionEnd === -1) {\n                        instructionEnd = i;\n                    }\n                    dockerfile.addInstruction(this.createInstruction(dockerfile, instruction, start, i, i));\n                    return i;\n                case '#':\n                    if (escapedInstruction) {\n                        continue;\n                    }\n                default:\n                    instructionEnd = i + 1;\n                    instruction = instruction + char;\n                    escapedInstruction = false;\n                    break;\n            }\n        }\n        // reached EOF\n        if (instructionEnd === -1) {\n            instructionEnd = this.buffer.length;\n        }\n        dockerfile.addInstruction(this.createInstruction(dockerfile, instruction, start, instructionEnd, this.buffer.length));\n        return this.buffer.length;\n    }\n    processHeredocs(instruction, offset) {\n        let keyword = instruction.getKeyword();\n        if (keyword === main_1.Keyword.ONBUILD) {\n            instruction = instruction.getTriggerInstruction();\n            if (instruction === null) {\n                return offset;\n            }\n            keyword = instruction.getKeyword();\n        }\n        if (keyword !== main_1.Keyword.ADD && keyword !== main_1.Keyword.COPY && keyword !== main_1.Keyword.RUN) {\n            return offset;\n        }\n        const heredocs = [];\n        for (const arg of instruction.getArguments()) {\n            const value = arg.getValue();\n            if (value.startsWith(\"<<\") && value.length > 2) {\n                const name = util_1.Util.parseHeredocName(value);\n                if (name !== null) {\n                    heredocs.push(name);\n                }\n            }\n        }\n        if (heredocs.length > 0) {\n            for (const heredoc of heredocs) {\n                offset = this.parseHeredoc(heredoc, offset);\n            }\n        }\n        return offset;\n    }\n    processArguments(dockerfile, instruction, instructionEnd, start, offset) {\n        let escaped = false;\n        argumentsCheck: for (let i = offset + 1; i < this.buffer.length; i++) {\n            switch (this.buffer.charAt(i)) {\n                case '\\r':\n                case '\\n':\n                    if (escaped) {\n                        continue;\n                    }\n                    return this.processHeredocs(this.createInstruction(dockerfile, instruction, start, instructionEnd, i), i);\n                case this.escapeChar:\n                    const next = this.buffer.charAt(i + 1);\n                    if (next === '\\n' || next === '\\r') {\n                        escaped = true;\n                        i++;\n                    }\n                    else if (next === ' ' || next === '\\t') {\n                        for (let j = i + 2; j < this.buffer.length; j++) {\n                            switch (this.buffer.charAt(j)) {\n                                case ' ':\n                                case '\\t':\n                                    break;\n                                case '\\r':\n                                case '\\n':\n                                    escaped = true;\n                                default:\n                                    i = j;\n                                    continue argumentsCheck;\n                            }\n                        }\n                        // reached EOF\n                        return this.buffer.length;\n                    }\n                    continue;\n                case '#':\n                    if (escaped) {\n                        i = this.processComment(dockerfile, i);\n                        continue argumentsCheck;\n                    }\n                    break;\n                case ' ':\n                case '\\t':\n                    break;\n                default:\n                    if (escaped) {\n                        escaped = false;\n                    }\n                    break;\n            }\n        }\n        return this.buffer.length;\n    }\n    processComment(dockerfile, start) {\n        let end = this.buffer.length;\n        commentLoop: for (let i = start + 1; i < this.buffer.length; i++) {\n            switch (this.buffer.charAt(i)) {\n                case '\\r':\n                case '\\n':\n                    end = i;\n                    break commentLoop;\n            }\n        }\n        const range = vscode_languageserver_types_1.Range.create(this.document.positionAt(start), this.document.positionAt(end));\n        dockerfile.addComment(new comment_1.Comment(this.document, range));\n        return end;\n    }\n    parseHeredoc(heredocName, offset) {\n        let startWord = -1;\n        let lineStart = true;\n        for (let i = offset; i < this.buffer.length; i++) {\n            switch (this.buffer.charAt(i)) {\n                case ' ':\n                case '\\t':\n                    lineStart = false;\n                    break;\n                case '\\r':\n                case '\\n':\n                    if (startWord !== -1 && heredocName === this.buffer.substring(startWord, i)) {\n                        return i;\n                    }\n                    startWord = -1;\n                    lineStart = true;\n                    break;\n                default:\n                    if (lineStart) {\n                        startWord = i;\n                        lineStart = false;\n                    }\n                    break;\n            }\n        }\n        return this.buffer.length;\n    }\n    createInstruction(dockerfile, instruction, start, instructionEnd, end) {\n        const startPosition = this.document.positionAt(start);\n        const instructionRange = vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(instructionEnd));\n        const lineRange = vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(end));\n        return Parser.createInstruction(this.document, dockerfile, this.escapeChar, lineRange, instruction, instructionRange);\n    }\n}\nexports.Parser = Parser;\n","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\"], factory);\n    }\n})(function (require, exports) {\n    /* --------------------------------------------------------------------------------------------\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for license information.\n     * ------------------------------------------------------------------------------------------ */\n    'use strict';\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.TextDocument = void 0;\n    var FullTextDocument = /** @class */ (function () {\n        function FullTextDocument(uri, languageId, version, content) {\n            this._uri = uri;\n            this._languageId = languageId;\n            this._version = version;\n            this._content = content;\n            this._lineOffsets = undefined;\n        }\n        Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n            get: function () {\n                return this._uri;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n            get: function () {\n                return this._languageId;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(FullTextDocument.prototype, \"version\", {\n            get: function () {\n                return this._version;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        FullTextDocument.prototype.getText = function (range) {\n            if (range) {\n                var start = this.offsetAt(range.start);\n                var end = this.offsetAt(range.end);\n                return this._content.substring(start, end);\n            }\n            return this._content;\n        };\n        FullTextDocument.prototype.update = function (changes, version) {\n            for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n                var change = changes_1[_i];\n                if (FullTextDocument.isIncremental(change)) {\n                    // makes sure start is before end\n                    var range = getWellformedRange(change.range);\n                    // update content\n                    var startOffset = this.offsetAt(range.start);\n                    var endOffset = this.offsetAt(range.end);\n                    this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                    // update the offsets\n                    var startLine = Math.max(range.start.line, 0);\n                    var endLine = Math.max(range.end.line, 0);\n                    var lineOffsets = this._lineOffsets;\n                    var addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                    if (endLine - startLine === addedLineOffsets.length) {\n                        for (var i = 0, len = addedLineOffsets.length; i < len; i++) {\n                            lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                        }\n                    }\n                    else {\n                        if (addedLineOffsets.length < 10000) {\n                            lineOffsets.splice.apply(lineOffsets, __spreadArray([startLine + 1, endLine - startLine], addedLineOffsets, false));\n                        }\n                        else { // avoid too many arguments for splice\n                            this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                        }\n                    }\n                    var diff = change.text.length - (endOffset - startOffset);\n                    if (diff !== 0) {\n                        for (var i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                            lineOffsets[i] = lineOffsets[i] + diff;\n                        }\n                    }\n                }\n                else if (FullTextDocument.isFull(change)) {\n                    this._content = change.text;\n                    this._lineOffsets = undefined;\n                }\n                else {\n                    throw new Error('Unknown change event received');\n                }\n            }\n            this._version = version;\n        };\n        FullTextDocument.prototype.getLineOffsets = function () {\n            if (this._lineOffsets === undefined) {\n                this._lineOffsets = computeLineOffsets(this._content, true);\n            }\n            return this._lineOffsets;\n        };\n        FullTextDocument.prototype.positionAt = function (offset) {\n            offset = Math.max(Math.min(offset, this._content.length), 0);\n            var lineOffsets = this.getLineOffsets();\n            var low = 0, high = lineOffsets.length;\n            if (high === 0) {\n                return { line: 0, character: offset };\n            }\n            while (low < high) {\n                var mid = Math.floor((low + high) / 2);\n                if (lineOffsets[mid] > offset) {\n                    high = mid;\n                }\n                else {\n                    low = mid + 1;\n                }\n            }\n            // low is the least x for which the line offset is larger than the current offset\n            // or array.length if no line offset is larger than the current offset\n            var line = low - 1;\n            offset = this.ensureBeforeEOL(offset, lineOffsets[line]);\n            return { line: line, character: offset - lineOffsets[line] };\n        };\n        FullTextDocument.prototype.offsetAt = function (position) {\n            var lineOffsets = this.getLineOffsets();\n            if (position.line >= lineOffsets.length) {\n                return this._content.length;\n            }\n            else if (position.line < 0) {\n                return 0;\n            }\n            var lineOffset = lineOffsets[position.line];\n            if (position.character <= 0) {\n                return lineOffset;\n            }\n            var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n            var offset = Math.min(lineOffset + position.character, nextLineOffset);\n            return this.ensureBeforeEOL(offset, lineOffset);\n        };\n        FullTextDocument.prototype.ensureBeforeEOL = function (offset, lineOffset) {\n            while (offset > lineOffset && isEOL(this._content.charCodeAt(offset - 1))) {\n                offset--;\n            }\n            return offset;\n        };\n        Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n            get: function () {\n                return this.getLineOffsets().length;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        FullTextDocument.isIncremental = function (event) {\n            var candidate = event;\n            return candidate !== undefined && candidate !== null &&\n                typeof candidate.text === 'string' && candidate.range !== undefined &&\n                (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n        };\n        FullTextDocument.isFull = function (event) {\n            var candidate = event;\n            return candidate !== undefined && candidate !== null &&\n                typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n        };\n        return FullTextDocument;\n    }());\n    var TextDocument;\n    (function (TextDocument) {\n        /**\n         * Creates a new text document.\n         *\n         * @param uri The document's uri.\n         * @param languageId  The document's language Id.\n         * @param version The document's initial version number.\n         * @param content The document's content.\n         */\n        function create(uri, languageId, version, content) {\n            return new FullTextDocument(uri, languageId, version, content);\n        }\n        TextDocument.create = create;\n        /**\n         * Updates a TextDocument by modifying its content.\n         *\n         * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n         * @param changes the changes to apply to the document.\n         * @param version the changes version for the document.\n         * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n         *\n         */\n        function update(document, changes, version) {\n            if (document instanceof FullTextDocument) {\n                document.update(changes, version);\n                return document;\n            }\n            else {\n                throw new Error('TextDocument.update: document must be created by TextDocument.create');\n            }\n        }\n        TextDocument.update = update;\n        function applyEdits(document, edits) {\n            var text = document.getText();\n            var sortedEdits = mergeSort(edits.map(getWellformedEdit), function (a, b) {\n                var diff = a.range.start.line - b.range.start.line;\n                if (diff === 0) {\n                    return a.range.start.character - b.range.start.character;\n                }\n                return diff;\n            });\n            var lastModifiedOffset = 0;\n            var spans = [];\n            for (var _i = 0, sortedEdits_1 = sortedEdits; _i < sortedEdits_1.length; _i++) {\n                var e = sortedEdits_1[_i];\n                var startOffset = document.offsetAt(e.range.start);\n                if (startOffset < lastModifiedOffset) {\n                    throw new Error('Overlapping edit');\n                }\n                else if (startOffset > lastModifiedOffset) {\n                    spans.push(text.substring(lastModifiedOffset, startOffset));\n                }\n                if (e.newText.length) {\n                    spans.push(e.newText);\n                }\n                lastModifiedOffset = document.offsetAt(e.range.end);\n            }\n            spans.push(text.substr(lastModifiedOffset));\n            return spans.join('');\n        }\n        TextDocument.applyEdits = applyEdits;\n    })(TextDocument || (exports.TextDocument = TextDocument = {}));\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n    function computeLineOffsets(text, isAtLineStart, textOffset) {\n        if (textOffset === void 0) { textOffset = 0; }\n        var result = isAtLineStart ? [textOffset] : [];\n        for (var i = 0; i < text.length; i++) {\n            var ch = text.charCodeAt(i);\n            if (isEOL(ch)) {\n                if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                    i++;\n                }\n                result.push(textOffset + i + 1);\n            }\n        }\n        return result;\n    }\n    function isEOL(char) {\n        return char === 13 /* CharCode.CarriageReturn */ || char === 10 /* CharCode.LineFeed */;\n    }\n    function getWellformedRange(range) {\n        var start = range.start;\n        var end = range.end;\n        if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n            return { start: end, end: start };\n        }\n        return range;\n    }\n    function getWellformedEdit(textEdit) {\n        var range = getWellformedRange(textEdit.range);\n        if (range !== textEdit.range) {\n            return { newText: textEdit.newText, range: range };\n        }\n        return textEdit;\n    }\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParserDirective = void 0;\nconst main_1 = require(\"./main\");\nconst line_1 = require(\"./line\");\nclass ParserDirective extends line_1.Line {\n    constructor(document, range, nameRange, valueRange) {\n        super(document, range);\n        this.nameRange = nameRange;\n        this.valueRange = valueRange;\n    }\n    toString() {\n        return \"# \" + this.getName() + '=' + this.getValue();\n    }\n    getNameRange() {\n        return this.nameRange;\n    }\n    getValueRange() {\n        return this.valueRange;\n    }\n    getName() {\n        return this.document.getText().substring(this.document.offsetAt(this.nameRange.start), this.document.offsetAt(this.nameRange.end));\n    }\n    getValue() {\n        return this.document.getText().substring(this.document.offsetAt(this.valueRange.start), this.document.offsetAt(this.valueRange.end));\n    }\n    getDirective() {\n        const directive = main_1.Directive[this.getName().toLowerCase()];\n        return directive === undefined ? null : directive;\n    }\n}\nexports.ParserDirective = ParserDirective;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Instruction = void 0;\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst util_1 = require(\"./util\");\nconst line_1 = require(\"./line\");\nconst argument_1 = require(\"./argument\");\nconst heredoc_1 = require(\"./heredoc\");\nconst variable_1 = require(\"./variable\");\nconst main_1 = require(\"./main\");\nclass Instruction extends line_1.Line {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range);\n        this.dockerfile = dockerfile;\n        this.escapeChar = escapeChar;\n        this.instruction = instruction;\n        this.instructionRange = instructionRange;\n    }\n    toString() {\n        let value = this.getKeyword();\n        for (let arg of this.getRawArguments()) {\n            value += ' ';\n            value += arg.getValue();\n        }\n        return value;\n    }\n    getRangeContent(range) {\n        if (range === null) {\n            return null;\n        }\n        return this.document.getText().substring(this.document.offsetAt(range.start), this.document.offsetAt(range.end));\n    }\n    getInstructionRange() {\n        return this.instructionRange;\n    }\n    getInstruction() {\n        return this.instruction;\n    }\n    getKeyword() {\n        return this.getInstruction().toUpperCase();\n    }\n    getArgumentsRange() {\n        let args = this.getArguments();\n        if (args.length === 0) {\n            return null;\n        }\n        return vscode_languageserver_types_1.Range.create(args[0].getRange().start, args[args.length - 1].getRange().end);\n    }\n    getArgumentsRanges() {\n        let args = this.getArguments();\n        if (args.length === 0) {\n            return [];\n        }\n        if (args[0].getRange().start.line === args[args.length - 1].getRange().end.line) {\n            return [vscode_languageserver_types_1.Range.create(args[0].getRange().start, args[args.length - 1].getRange().end)];\n        }\n        let ranges = [];\n        let end = -1;\n        let startPosition = args[0].getRange().start;\n        let range = this.getInstructionRange();\n        let extra = this.document.offsetAt(startPosition) - this.document.offsetAt(range.start);\n        let content = this.getTextContent();\n        let fullArgs = content.substring(extra, this.document.offsetAt(args[args.length - 1].getRange().end) - this.document.offsetAt(range.start));\n        let offset = this.document.offsetAt(range.start) + extra;\n        let start = false;\n        let comment = false;\n        for (let i = 0; i < fullArgs.length; i++) {\n            let char = fullArgs.charAt(i);\n            if (char === this.escapeChar) {\n                let next = fullArgs.charAt(i + 1);\n                if (next === ' ' || next === '\\t') {\n                    whitespaceCheck: for (let j = i + 2; j < fullArgs.length; j++) {\n                        switch (fullArgs.charAt(j)) {\n                            case ' ':\n                            case '\\t':\n                                continue;\n                            case '\\r':\n                                j++;\n                            case '\\n':\n                                if (startPosition !== null) {\n                                    ranges.push(vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(offset + end + 1)));\n                                }\n                                startPosition = null;\n                                start = true;\n                                comment = false;\n                                i = j;\n                                break whitespaceCheck;\n                            default:\n                                break whitespaceCheck;\n                        }\n                    }\n                }\n                else if (next === '\\r') {\n                    if (startPosition !== null) {\n                        ranges.push(vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(offset + end + 1)));\n                        startPosition = null;\n                    }\n                    start = true;\n                    comment = false;\n                    i += 2;\n                }\n                else if (next === '\\n') {\n                    if (startPosition !== null) {\n                        ranges.push(vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(offset + end + 1)));\n                    }\n                    startPosition = null;\n                    start = true;\n                    comment = false;\n                    i++;\n                }\n                else {\n                    i++;\n                }\n            }\n            else if (util_1.Util.isNewline(char)) {\n                if (comment) {\n                    startPosition = null;\n                    start = true;\n                    comment = false;\n                }\n            }\n            else {\n                if (!comment) {\n                    if (startPosition === null) {\n                        if (char === '#') {\n                            comment = true;\n                            continue;\n                        }\n                        let position = this.document.positionAt(offset + i);\n                        if (position.character !== 0) {\n                            startPosition = vscode_languageserver_types_1.Position.create(position.line, 0);\n                        }\n                    }\n                    end = i;\n                }\n            }\n        }\n        if (startPosition === null) {\n            // should only happen if the last argument is on its own line with\n            // no leading whitespace\n            ranges.push(vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + end), this.document.positionAt(offset + end + 1)));\n        }\n        else {\n            ranges.push(vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(offset + end + 1)));\n        }\n        return ranges;\n    }\n    getRawArgumentsContent() {\n        let args = this.getArguments();\n        if (args.length === 0) {\n            return null;\n        }\n        return this.getRangeContent(vscode_languageserver_types_1.Range.create(args[0].getRange().start, args[args.length - 1].getRange().end));\n    }\n    getArgumentsContent() {\n        let args = this.getArguments();\n        if (args.length === 0) {\n            return null;\n        }\n        let content = \"\";\n        let ranges = this.getArgumentsRanges();\n        let documentText = this.document.getText();\n        for (let range of ranges) {\n            content += documentText.substring(this.document.offsetAt(range.start), this.document.offsetAt(range.end));\n        }\n        return content;\n    }\n    getArguments() {\n        return this.getRawArguments();\n    }\n    getRawArguments() {\n        let args = [];\n        let range = this.getInstructionRange();\n        let extra = this.document.offsetAt(range.end) - this.document.offsetAt(range.start);\n        let content = this.getTextContent();\n        let fullArgs = content.substring(extra);\n        let offset = this.document.offsetAt(range.start) + extra;\n        let start = false;\n        let comment = false;\n        let found = -1;\n        // determines whether the parser has found a space or tab\n        // whitespace character that's a part of an escaped newline sequence\n        let escapedWhitespaceDetected = false;\n        // determines if the parser is currently in an escaped newline sequence\n        let escaping = false;\n        let escapeMarker = -1;\n        let escapedArg = \"\";\n        for (let i = 0; i < fullArgs.length; i++) {\n            let char = fullArgs.charAt(i);\n            if (util_1.Util.isWhitespace(char)) {\n                if (escaping) {\n                    escapedWhitespaceDetected = true;\n                    if (util_1.Util.isNewline(char)) {\n                        // reached a newline, any previously\n                        // detected whitespace should be ignored\n                        escapedWhitespaceDetected = false;\n                        if (comment) {\n                            // reached a newline, no longer in a comment\n                            comment = false;\n                            start = true;\n                        }\n                    }\n                    continue;\n                }\n                else if (found !== -1) {\n                    if (escapeMarker === -1) {\n                        args.push(new argument_1.Argument(escapedArg, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + found), this.document.positionAt(offset + i))));\n                    }\n                    else {\n                        args.push(new argument_1.Argument(escapedArg, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + found), this.document.positionAt(offset + escapeMarker))));\n                    }\n                    escapeMarker = -1;\n                    escapedArg = \"\";\n                    found = -1;\n                }\n            }\n            else if (char === this.escapeChar) {\n                let next = fullArgs.charAt(i + 1);\n                if (next === ' ' || next === '\\t') {\n                    whitespaceCheck: for (let j = i + 2; j < fullArgs.length; j++) {\n                        let newlineCheck = fullArgs.charAt(j);\n                        switch (newlineCheck) {\n                            case ' ':\n                            case '\\t':\n                                continue;\n                            case '\\r':\n                                j++;\n                            case '\\n':\n                                comment = false;\n                                escaping = true;\n                                start = true;\n                                if (found !== -1) {\n                                    escapeMarker = i;\n                                }\n                                i = j;\n                                break whitespaceCheck;\n                            default:\n                                escapeMarker = i;\n                                if (found === -1) {\n                                    i = j - 1;\n                                }\n                                break whitespaceCheck;\n                        }\n                    }\n                }\n                else if (next === '\\r') {\n                    comment = false;\n                    escaping = true;\n                    start = true;\n                    if (found !== -1 && escapeMarker === -1) {\n                        escapeMarker = i;\n                    }\n                    i += 2;\n                }\n                else if (next === '\\n') {\n                    comment = false;\n                    escaping = true;\n                    start = true;\n                    if (found !== -1 && escapeMarker === -1) {\n                        escapeMarker = i;\n                    }\n                    i++;\n                }\n                else {\n                    if (escapedWhitespaceDetected && escapeMarker !== -1) {\n                        args.push(new argument_1.Argument(escapedArg, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + found), this.document.positionAt(offset + escapeMarker))));\n                        escapedArg = \"\";\n                        found = -1;\n                    }\n                    escapeMarker = -1;\n                    escapedWhitespaceDetected = false;\n                    escaping = false;\n                    if (next === '$') {\n                        escapedArg = escapedArg + char + next;\n                    }\n                    else if (next === '') {\n                        // reached EOF, stop processing\n                        break;\n                    }\n                    else {\n                        escapedArg = escapedArg + next;\n                    }\n                    if (found === -1) {\n                        found = i;\n                    }\n                    i++;\n                }\n            }\n            else if (!comment) {\n                if (start && char === '#') {\n                    comment = true;\n                }\n                else {\n                    if (escapedWhitespaceDetected && escapeMarker !== -1) {\n                        args.push(new argument_1.Argument(escapedArg, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + found), this.document.positionAt(offset + escapeMarker))));\n                        escapedArg = \"\";\n                        found = -1;\n                    }\n                    escapedWhitespaceDetected = false;\n                    escaping = false;\n                    escapeMarker = -1;\n                    escapedArg = escapedArg + char;\n                    if (found === -1) {\n                        found = i;\n                    }\n                }\n                // non-whitespace character detected, reset\n                start = false;\n            }\n        }\n        if (found !== -1) {\n            if (escapeMarker === -1) {\n                args.push(new argument_1.Argument(escapedArg, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + found), this.document.positionAt(offset + fullArgs.length))));\n            }\n            else {\n                args.push(new argument_1.Argument(escapedArg, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + found), this.document.positionAt(offset + escapeMarker))));\n            }\n        }\n        return args;\n    }\n    getExpandedArguments() {\n        let args = this.getArguments();\n        for (let i = 0; i < args.length; i++) {\n            const argRange = args[i].getRange();\n            let offset = this.document.offsetAt(argRange.start);\n            const variables = this.parseVariables(offset, args[i].getValue());\n            const swaps = [];\n            let requiresExpansion = false;\n            for (let variable of variables) {\n                const value = this.dockerfile.resolveVariable(variable.getName(), variable.getNameRange().start.line);\n                swaps.push(value);\n                requiresExpansion = requiresExpansion || value !== undefined;\n            }\n            if (requiresExpansion) {\n                let expanded = \"\";\n                for (let j = 0; j < swaps.length; j++) {\n                    const variableRange = variables[j].getRange();\n                    const start = this.document.offsetAt(variableRange.start);\n                    const end = this.document.offsetAt(variableRange.end);\n                    if (swaps[j]) {\n                        // replace variable with its resolved value\n                        expanded += this.document.getText().substring(offset, start);\n                        expanded += swaps[j];\n                        offset = end;\n                    }\n                    else {\n                        expanded += this.document.getText().substring(offset, end);\n                        offset = end;\n                    }\n                }\n                const argEnd = this.document.offsetAt(argRange.end);\n                if (argEnd !== offset) {\n                    // if the variable's range doesn't match the argument,\n                    // append the remaining text\n                    expanded += this.document.getText().substring(offset, argEnd);\n                }\n                args[i] = new argument_1.Argument(expanded, argRange);\n            }\n        }\n        return args;\n    }\n    getVariables() {\n        const variables = [];\n        const args = this.getRawArguments();\n        for (const arg of args) {\n            let range = arg.getRange();\n            let rawValue = this.document.getText().substring(this.document.offsetAt(range.start), this.document.offsetAt(range.end));\n            const parsedVariables = this.parseVariables(this.document.offsetAt(arg.getRange().start), rawValue);\n            for (const parsedVariable of parsedVariables) {\n                variables.push(parsedVariable);\n            }\n        }\n        return variables;\n    }\n    parseVariables(offset, arg) {\n        let variables = [];\n        variableLoop: for (let i = 0; i < arg.length; i++) {\n            switch (arg.charAt(i)) {\n                case this.escapeChar:\n                    if (arg.charAt(i + 1) === '$') {\n                        i++;\n                    }\n                    break;\n                case '$':\n                    if (arg.charAt(i + 1) === '{') {\n                        let escapedString = \"${\";\n                        let escapedName = \"\";\n                        let nameEnd = -1;\n                        let escapedSubstitutionParameter = \"\";\n                        let substitutionStart = -1;\n                        let substitutionEnd = -1;\n                        let modifierRead = -1;\n                        nameLoop: for (let j = i + 2; j < arg.length; j++) {\n                            let char = arg.charAt(j);\n                            switch (char) {\n                                case this.escapeChar:\n                                    for (let k = j + 1; k < arg.length; k++) {\n                                        switch (arg.charAt(k)) {\n                                            case ' ':\n                                            case '\\t':\n                                            case '\\r':\n                                                // ignore whitespace\n                                                continue;\n                                            case '\\n':\n                                                // escape this newline\n                                                j = k;\n                                                continue nameLoop;\n                                        }\n                                    }\n                                    break;\n                                case '}':\n                                    escapedString += '}';\n                                    let modifier = null;\n                                    let modifierRange = null;\n                                    let substitutionParameter = modifierRead !== -1 ? escapedSubstitutionParameter : null;\n                                    let substitutionRange = null;\n                                    if (nameEnd === -1) {\n                                        nameEnd = j;\n                                    }\n                                    else if (nameEnd + 1 === j) {\n                                        modifier = \"\";\n                                        modifierRange = vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + nameEnd + 1), this.document.positionAt(offset + nameEnd + 1));\n                                    }\n                                    else {\n                                        if (substitutionStart === -1) {\n                                            // no substitution parameter found,\n                                            // but a modifier character existed,\n                                            // just offset the range by 1 from\n                                            // the modifier character\n                                            substitutionStart = modifierRead + 1;\n                                            substitutionEnd = modifierRead + 1;\n                                        }\n                                        else {\n                                            // offset one more from the last\n                                            // character found\n                                            substitutionEnd = substitutionEnd + 1;\n                                        }\n                                        modifier = arg.substring(modifierRead, modifierRead + 1);\n                                        modifierRange = vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + modifierRead), this.document.positionAt(offset + modifierRead + 1));\n                                        substitutionRange = vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + substitutionStart), this.document.positionAt(offset + substitutionEnd));\n                                    }\n                                    let start = this.document.positionAt(offset + i);\n                                    variables.push(new variable_1.Variable(escapedName, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + i + 2), this.document.positionAt(offset + nameEnd)), vscode_languageserver_types_1.Range.create(start, this.document.positionAt(offset + j + 1)), modifier, modifierRange, substitutionParameter, substitutionRange, this.dockerfile.resolveVariable(escapedName, start.line) !== undefined, this.isBuildVariable(escapedName, start.line), escapedString));\n                                    i = j;\n                                    continue variableLoop;\n                                case ':':\n                                    if (nameEnd === -1) {\n                                        nameEnd = j;\n                                    }\n                                    else if (modifierRead !== -1) {\n                                        if (substitutionStart === -1) {\n                                            substitutionStart = j;\n                                            substitutionEnd = j;\n                                        }\n                                        else {\n                                            substitutionEnd = j;\n                                        }\n                                        escapedSubstitutionParameter += ':';\n                                    }\n                                    else {\n                                        modifierRead = j;\n                                    }\n                                    escapedString += ':';\n                                    break;\n                                case '\\n':\n                                case '\\r':\n                                case ' ':\n                                case '\\t':\n                                    break;\n                                default:\n                                    if (nameEnd === -1) {\n                                        escapedName += char;\n                                    }\n                                    else if (modifierRead !== -1) {\n                                        if (substitutionStart === -1) {\n                                            substitutionStart = j;\n                                            substitutionEnd = j;\n                                        }\n                                        else {\n                                            substitutionEnd = j;\n                                        }\n                                        escapedSubstitutionParameter += char;\n                                    }\n                                    else {\n                                        modifierRead = j;\n                                    }\n                                    escapedString += char;\n                                    break;\n                            }\n                        }\n                        // no } found, not a valid variable, stop processing\n                        break variableLoop;\n                    }\n                    else if (util_1.Util.isWhitespace(arg.charAt(i + 1)) || i === arg.length - 1) {\n                        // $ followed by whitespace or EOF, ignore this variable\n                        continue;\n                    }\n                    else {\n                        let escapedName = \"\";\n                        nameLoop: for (let j = i + 1; j < arg.length; j++) {\n                            let char = arg.charAt(j);\n                            switch (char) {\n                                case '\\r':\n                                case '\\n':\n                                case ' ':\n                                case '\\t':\n                                    continue;\n                                case '$':\n                                case '\\'':\n                                case '\"':\n                                    let varStart = this.document.positionAt(offset + i);\n                                    variables.push(new variable_1.Variable(escapedName, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + i + 1), this.document.positionAt(offset + j)), vscode_languageserver_types_1.Range.create(varStart, this.document.positionAt(offset + j)), null, null, null, null, this.dockerfile.resolveVariable(escapedName, varStart.line) !== undefined, this.isBuildVariable(escapedName, varStart.line), '$' + escapedName));\n                                    i = j - 1;\n                                    continue variableLoop;\n                                case this.escapeChar:\n                                    for (let k = j + 1; k < arg.length; k++) {\n                                        switch (arg.charAt(k)) {\n                                            case ' ':\n                                            case '\\t':\n                                            case '\\r':\n                                                // ignore whitespace\n                                                continue;\n                                            case '\\n':\n                                                // escape this newline\n                                                j = k;\n                                                continue nameLoop;\n                                        }\n                                    }\n                                    // reached EOF after an escape character\n                                    let start = this.document.positionAt(offset + i);\n                                    variables.push(new variable_1.Variable(escapedName, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + i + 1), this.document.positionAt(offset + j)), vscode_languageserver_types_1.Range.create(start, this.document.positionAt(offset + j)), null, null, null, null, this.dockerfile.resolveVariable(escapedName, start.line) !== undefined, this.isBuildVariable(escapedName, start.line), '$' + escapedName));\n                                    break variableLoop;\n                            }\n                            if (char.match(/^[a-z0-9_]+$/i) === null) {\n                                let varStart = this.document.positionAt(offset + i);\n                                variables.push(new variable_1.Variable(escapedName, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + i + 1), this.document.positionAt(offset + j)), vscode_languageserver_types_1.Range.create(varStart, this.document.positionAt(offset + j)), null, null, null, null, this.dockerfile.resolveVariable(escapedName, varStart.line) !== undefined, this.isBuildVariable(escapedName, varStart.line), '$' + escapedName));\n                                i = j - 1;\n                                continue variableLoop;\n                            }\n                            escapedName += char;\n                        }\n                        let start = this.document.positionAt(offset + i);\n                        variables.push(new variable_1.Variable(escapedName, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + i + 1), this.document.positionAt(offset + arg.length)), vscode_languageserver_types_1.Range.create(start, this.document.positionAt(offset + arg.length)), null, null, null, null, this.dockerfile.resolveVariable(escapedName, start.line) !== undefined, this.isBuildVariable(escapedName, start.line), '$' + escapedName));\n                    }\n                    break variableLoop;\n            }\n        }\n        return variables;\n    }\n    isBuildVariable(variable, line) {\n        if (this.getKeyword() === main_1.Keyword.FROM) {\n            for (const initialArg of this.dockerfile.getInitialARGs()) {\n                const arg = initialArg;\n                const property = arg.getProperty();\n                if (property && variable === property.getName()) {\n                    return true;\n                }\n            }\n            return undefined;\n        }\n        let image = this.dockerfile.getContainingImage(vscode_languageserver_types_1.Position.create(line, 0));\n        let envs = image.getENVs();\n        for (let i = envs.length - 1; i >= 0; i--) {\n            if (envs[i].isBefore(line)) {\n                for (let property of envs[i].getProperties()) {\n                    if (property.getName() === variable) {\n                        return false;\n                    }\n                }\n            }\n        }\n        let args = image.getARGs();\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (args[i].isBefore(line)) {\n                let property = args[i].getProperty();\n                if (property && property.getName() === variable) {\n                    return true;\n                }\n            }\n        }\n        return undefined;\n    }\n    createSingleLineHeredocs(args) {\n        const heredocs = [];\n        // instruction only on one line, if heredocs exist they would be incomplete\n        for (const arg of args) {\n            const value = arg.getValue();\n            if (value.startsWith(\"<<\") && util_1.Util.parseHeredocName(value) !== null) {\n                const startRange = arg.getRange();\n                const nameRange = this.getNameRange(startRange);\n                const name = this.getName(nameRange);\n                heredocs.push(new heredoc_1.Heredoc(startRange, name, nameRange, null, null));\n            }\n        }\n        return heredocs;\n    }\n    getName(nameRange) {\n        const content = this.document.getText(nameRange);\n        let escaping = false;\n        let name = \"\";\n        nameLoop: for (let i = 0; i < content.length; i++) {\n            const ch = content.charAt(i);\n            switch (ch) {\n                case this.escapeChar:\n                    escaping = true;\n                    for (let j = i + 1; j < content.length; j++) {\n                        switch (content.charAt(j)) {\n                            case ' ':\n                            case '\\t':\n                                break;\n                            case '\\r':\n                                i = j + 1;\n                                continue nameLoop;\n                            case '\\n':\n                                i = j;\n                                continue nameLoop;\n                            default:\n                                name += content.charAt(j);\n                                i = j;\n                                continue nameLoop;\n                        }\n                    }\n                    break;\n                case '#':\n                    if (escaping) {\n                        for (let j = i + 1; j < content.length; j++) {\n                            switch (content.charAt(j)) {\n                                case '\\n':\n                                    i = j;\n                                    continue nameLoop;\n                            }\n                        }\n                    }\n                case ' ':\n                case '\\t':\n                case '\\r':\n                case '\\n':\n                    if (escaping) {\n                        break;\n                    }\n                default:\n                    name += ch;\n                    break;\n            }\n        }\n        return name;\n    }\n    getNameRange(startRange) {\n        const content = this.document.getText(startRange);\n        let endFound = false;\n        let searchHyphen = false;\n        let start = -1;\n        let end = -1;\n        let escaping = false;\n        let quote = null;\n        contentLoop: for (let i = 0; i < content.length; i++) {\n            const ch = content.charAt(i);\n            switch (ch) {\n                case '\"':\n                case '\\'':\n                    if (quote === ch) {\n                        break contentLoop;\n                    }\n                    quote = ch;\n                    continue;\n                case this.escapeChar:\n                    for (let j = i + 1; j < content.length; j++) {\n                        switch (content.charAt(j)) {\n                            case '\\n':\n                                escaping = true;\n                                j = i;\n                                continue contentLoop;\n                        }\n                    }\n                    break;\n                case ' ':\n                case '\\t':\n                case '\\r':\n                case '\\n':\n                    break;\n                case '<':\n                    if (endFound) {\n                        searchHyphen = true;\n                    }\n                    else {\n                        endFound = true;\n                    }\n                    break;\n                case '-':\n                    if (searchHyphen) {\n                        searchHyphen = false;\n                        break;\n                    }\n                case '#':\n                    if (escaping) {\n                        for (let j = i + 1; j < content.length; j++) {\n                            switch (content.charAt(j)) {\n                                case '\\n':\n                                    i = j;\n                                    continue contentLoop;\n                            }\n                        }\n                    }\n                default:\n                    if (start === -1) {\n                        start = i;\n                    }\n                    if (quote !== null) {\n                        end = i + 1;\n                        break;\n                    }\n                    break contentLoop;\n            }\n        }\n        if (start === -1) {\n            return vscode_languageserver_types_1.Range.create(startRange.end, startRange.end);\n        }\n        const nameStart = this.document.positionAt(this.document.offsetAt(startRange.start) + start);\n        const nameEnd = quote !== null ? this.document.positionAt(this.document.offsetAt(startRange.start) + end) : startRange.end;\n        return vscode_languageserver_types_1.Range.create(nameStart, nameEnd);\n    }\n    getHeredocs() {\n        const args = this.getArguments();\n        if (args.length === 0) {\n            return [];\n        }\n        const heredocs = [];\n        const range = this.getRange();\n        if (range.start.line === range.end.line) {\n            // instruction only on one line, if heredocs exist they would be incomplete\n            return this.createSingleLineHeredocs(args);\n        }\n        const heredocDefinitions = [];\n        let heredocsProcessed = false;\n        let escaping = false;\n        let contentStart = -1;\n        let contentEnd = -1;\n        let lineStart = -1;\n        let currentHeredoc = 0;\n        const startOffset = this.document.offsetAt(args[0].getRange().start);\n        const content = this.getRangeContent(vscode_languageserver_types_1.Range.create(args[0].getRange().start, this.getRange().end));\n        contentLoop: for (let i = 0; i < content.length; i++) {\n            switch (content.charAt(i)) {\n                case this.escapeChar:\n                    escaping = true;\n                    for (let j = i + 1; j < content.length; j++) {\n                        switch (content.charAt(j)) {\n                            case ' ':\n                            case '\\t':\n                                break;\n                            case '\\r':\n                                j++;\n                            case '\\n':\n                                i = j;\n                                continue contentLoop;\n                            default:\n                                i = j;\n                                continue contentLoop;\n                        }\n                    }\n                    break;\n                case '\\r':\n                    break;\n                case '\\n':\n                    if (escaping) {\n                        break;\n                    }\n                    if (heredocsProcessed) {\n                        if (contentStart === -1) {\n                            contentStart = i;\n                        }\n                        contentEnd = i;\n                        const arg = heredocDefinitions[currentHeredoc];\n                        const startRange = arg.getRange();\n                        const nameRange = this.getNameRange(startRange);\n                        const name = this.getName(nameRange);\n                        const delimiterRange = this.getDelimiterRange(arg, name, vscode_languageserver_types_1.Range.create(this.document.positionAt(startOffset + lineStart), this.document.positionAt(startOffset + i)));\n                        if (delimiterRange !== null) {\n                            const contentRange = vscode_languageserver_types_1.Range.create(this.document.positionAt(startOffset + contentStart), this.document.positionAt(startOffset + lineStart - 1));\n                            heredocs.push(new heredoc_1.Heredoc(startRange, name, nameRange, contentRange, delimiterRange));\n                            contentStart = -1;\n                            currentHeredoc++;\n                        }\n                        lineStart = -1;\n                    }\n                    else {\n                        // found a newline that hasn't been escaped,\n                        // must be in a heredoc\n                        const offsetLimit = startOffset + i;\n                        for (const arg of args) {\n                            // check if this argument is on the initial line of the instruction,\n                            // note that it may not all be on the same line due to escaped newlines,\n                            // because of that we need to use offset checks instead of line checks\n                            // as an argument being on a different line in the document does not\n                            // imply it is on a different line from the Dockerfile's point of view\n                            if (this.document.offsetAt(arg.getRange().start) < offsetLimit) {\n                                if (arg.getValue().startsWith(\"<<\")) {\n                                    heredocDefinitions.push(arg);\n                                }\n                            }\n                            else {\n                                break;\n                            }\n                        }\n                        heredocsProcessed = true;\n                        lineStart = -1;\n                        continue contentLoop;\n                    }\n                    break;\n                case ' ':\n                case '\\t':\n                    if (escaping) {\n                        break;\n                    }\n                case '#':\n                    if (escaping) {\n                        for (let j = i + 1; j < content.length; j++) {\n                            switch (content.charAt(j)) {\n                                case '\\n':\n                                    i = j;\n                                    continue contentLoop;\n                            }\n                        }\n                    }\n                default:\n                    if (escaping) {\n                        escaping = false;\n                    }\n                    if (heredocsProcessed) {\n                        if (contentStart === -1) {\n                            contentStart = i;\n                        }\n                        if (lineStart === -1) {\n                            lineStart = i;\n                        }\n                    }\n                    break;\n            }\n        }\n        if (heredocsProcessed) {\n            const arg = heredocDefinitions[currentHeredoc];\n            const startRange = arg.getRange();\n            const nameRange = this.getNameRange(startRange);\n            const name = this.getName(nameRange);\n            let contentRange = null;\n            // check if the last line of this instruction matches the name of the last heredoc\n            const delimiterRange = this.getDelimiterRange(arg, name, vscode_languageserver_types_1.Range.create(this.document.positionAt(startOffset + lineStart), range.end));\n            if (delimiterRange === null) {\n                contentRange = vscode_languageserver_types_1.Range.create(this.document.positionAt(startOffset + contentStart), range.end);\n            }\n            else if (contentEnd !== -1) {\n                contentRange = vscode_languageserver_types_1.Range.create(this.document.positionAt(startOffset + contentStart), this.document.positionAt(startOffset + contentEnd));\n            }\n            heredocs.push(new heredoc_1.Heredoc(startRange, name, nameRange, contentRange, delimiterRange));\n            currentHeredoc++;\n            for (let i = currentHeredoc; i < heredocDefinitions.length; i++) {\n                const arg = heredocDefinitions[currentHeredoc];\n                const startRange = arg.getRange();\n                const nameRange = this.getNameRange(startRange);\n                const name = this.getName(nameRange);\n                heredocs.push(new heredoc_1.Heredoc(startRange, name, nameRange, null, null));\n                currentHeredoc++;\n            }\n        }\n        else {\n            // instruction only on one line, if heredocs exist they would be incomplete\n            return this.createSingleLineHeredocs(args);\n        }\n        return heredocs;\n    }\n    getDelimiterRange(startArg, name, candidateRange) {\n        const text = this.document.getText(candidateRange);\n        if (startArg.getValue().startsWith(\"<<-\")) {\n            // remove tabs in the front\n            let index = 0;\n            while (text.charAt(index) === '\\t') {\n                index++;\n            }\n            if (text.substring(index) === name) {\n                return vscode_languageserver_types_1.Range.create(vscode_languageserver_types_1.Position.create(candidateRange.start.line, index), candidateRange.end);\n            }\n            return null;\n        }\n        return text === name ? candidateRange : null;\n    }\n}\nexports.Instruction = Instruction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Heredoc = void 0;\n/**\n * Heredoc represents a here-document that has been embedded in a\n * Dockerfile.\n *\n * This API is experimental and subject to change.\n */\nclass Heredoc {\n    constructor(startRange, name, nameRange, contentRange, endRange) {\n        this.startRange = startRange;\n        this.name = name;\n        this.nameRange = nameRange;\n        this.contentRange = contentRange;\n        this.endRange = endRange;\n    }\n    /**\n     * Returns the name of the here-document.\n     *\n     * This API is experimental and subject to change.\n     */\n    getName() {\n        return this.name;\n    }\n    /**\n     * Returns the range of the start operator and the name. If the\n     * here-document is initialized with <<EOT then the start range would\n     * encompass all five characters.\n     *\n     * This API is experimental and subject to change.\n     */\n    getStartRange() {\n        return this.startRange;\n    }\n    /**\n     * Returns the range of this here-document's name that is declared at\n     * the beginning of the here-document with the operator. If the\n     * here-document is initialized with <<EOT then the name range would\n     * encompass the latter three \"EOT\" characters.\n     *\n     * This API is experimental and subject to change.\n     */\n    getNameRange() {\n        return this.nameRange;\n    }\n    /**\n     * Returns the range of the content of this here-document. This may\n     * be null if the here-document has no content because:\n     * - the start range is the only thing that was declared\n     * - the end range was declared immediately and there is no content\n     *\n     * This API is experimental and subject to change.\n     */\n    getContentRange() {\n        return this.contentRange;\n    }\n    /**\n     * Returns the range of the here-document's name on a line that\n     * represents the end of the here-document.\n     *\n     * This API is experimental and subject to change.\n     */\n    getDelimiterRange() {\n        return this.endRange;\n    }\n}\nexports.Heredoc = Heredoc;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Variable = void 0;\nclass Variable {\n    constructor(name, nameRange, range, modifier, modifierRange, substitutionParameter, substitutionRange, defined, buildVariable, stringValue) {\n        this.name = name;\n        this.nameRange = nameRange;\n        this.range = range;\n        this.modifier = modifier;\n        this.modifierRange = modifierRange;\n        this.substitutionParameter = substitutionParameter;\n        this.substitutionRange = substitutionRange;\n        this.defined = defined;\n        this.buildVariable = buildVariable;\n        this.stringValue = stringValue;\n    }\n    toString() {\n        return this.stringValue;\n    }\n    getName() {\n        return this.name;\n    }\n    getNameRange() {\n        return this.nameRange;\n    }\n    /**\n     * Returns the range of the entire variable. This includes the symbols for\n     * the declaration of the variable such as the $, {, and } symbols.\n     *\n     * @return the range in the document that this variable encompasses in its\n     *         entirety\n     */\n    getRange() {\n        return this.range;\n    }\n    /**\n     * Returns the modifier character that has been set for\n     * specifying how this variable should be expanded and resolved.\n     * If this variable is ${variable:+value} then the modifier\n     * character is '+'. Will be the empty string if the variable is\n     * declared as ${variable:}. Otherwise, will be null if this\n     * variable will not use variable substitution at all (such as\n     * ${variable} or $variable).\n     *\n     * @return this variable's modifier character, or the empty\n     *         string if it does not have one, or null if this\n     *         variable will not use variable substitution\n     */\n    getModifier() {\n        return this.modifier;\n    }\n    getModifierRange() {\n        return this.modifierRange;\n    }\n    /**\n     * Returns the parameter that will be used for substitution if\n     * this variable uses modifiers to define how its value should be\n     * resolved. If this variable is ${variable:+value} then the\n     * substitution value will be 'value'. Will be the empty string\n     * if the variable is declared as ${variable:+} or some other\n     * variant where the only thing that follows the modifier\n     * character (excluding considerations of escape characters and\n     * so on) is the variable's closing bracket. May be null if this\n     * variable does not have a modifier character defined (such as\n     * ${variable} or $variable).\n     *\n     * @return this variable's substitution parameter, or the empty\n     *         string if it does not have one, or null if there is\n     *         not one defined\n     */\n    getSubstitutionParameter() {\n        return this.substitutionParameter;\n    }\n    getSubstitutionRange() {\n        return this.substitutionRange;\n    }\n    /**\n     * Returns whether this variable has been defined or not.\n     *\n     * @return true if this variable has been defined, false otherwise\n     */\n    isDefined() {\n        return this.defined;\n    }\n    isBuildVariable() {\n        return this.buildVariable === true;\n    }\n    isEnvironmentVariable() {\n        return this.buildVariable === false;\n    }\n}\nexports.Variable = Variable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Add = void 0;\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\nclass Add extends jsonInstruction_1.JSONInstruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n    stopSearchingForFlags(argument) {\n        return argument.indexOf(\"--\") === -1;\n    }\n}\nexports.Add = Add;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JSONInstruction = void 0;\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst argument_1 = require(\"./argument\");\nconst jsonArgument_1 = require(\"./jsonArgument\");\nconst modifiableInstruction_1 = require(\"./modifiableInstruction\");\nclass JSONInstruction extends modifiableInstruction_1.ModifiableInstruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n        this.openingBracket = null;\n        this.closingBracket = null;\n        this.jsonStrings = [];\n        const argsContent = this.getRawArgumentsContent();\n        if (argsContent === null) {\n            return;\n        }\n        const args = this.getArguments();\n        if (args.length === 1 && args[0].getValue() === \"[]\") {\n            let argRange = args[0].getRange();\n            this.openingBracket = new argument_1.Argument(\"[\", vscode_languageserver_types_1.Range.create(argRange.start.line, argRange.start.character, argRange.start.line, argRange.start.character + 1));\n            this.closingBracket = new argument_1.Argument(\"]\", vscode_languageserver_types_1.Range.create(argRange.start.line, argRange.start.character + 1, argRange.end.line, argRange.end.character));\n            return;\n        }\n        else if (args.length === 2 && args[0].getValue() === '[' && args[1].getValue() === ']') {\n            this.openingBracket = args[0];\n            this.closingBracket = args[1];\n            return;\n        }\n        const argsOffset = document.offsetAt(this.getArgumentsRange().start);\n        let start = -1;\n        let last = \"\";\n        let quoted = false;\n        let escapedArg = \"\";\n        argsCheck: for (let i = 0; i < argsContent.length; i++) {\n            let char = argsContent.charAt(i);\n            switch (char) {\n                case '[':\n                    if (last === \"\") {\n                        this.openingBracket = new argument_1.Argument(\"[\", vscode_languageserver_types_1.Range.create(document.positionAt(argsOffset + i), document.positionAt(argsOffset + i + 1)));\n                        last = '[';\n                    }\n                    else if (quoted) {\n                        escapedArg = escapedArg + char;\n                    }\n                    else {\n                        break argsCheck;\n                    }\n                    break;\n                case '\"':\n                    if (last === '[' || last === ',') {\n                        start = i;\n                        quoted = true;\n                        last = '\"';\n                        escapedArg = escapedArg + char;\n                        continue;\n                    }\n                    else if (last === '\"') {\n                        if (quoted) {\n                            escapedArg = escapedArg + char;\n                            // quoted string done\n                            quoted = false;\n                            this.jsonStrings.push(new jsonArgument_1.JSONArgument(escapedArg, vscode_languageserver_types_1.Range.create(document.positionAt(argsOffset + start), document.positionAt(argsOffset + i + 1)), vscode_languageserver_types_1.Range.create(document.positionAt(argsOffset + start + 1), document.positionAt(argsOffset + i))));\n                            escapedArg = \"\";\n                        }\n                        else {\n                            // should be a , or a ]\n                            break argsCheck;\n                        }\n                    }\n                    else {\n                        break argsCheck;\n                    }\n                    break;\n                case ',':\n                    if (quoted) {\n                        escapedArg = escapedArg + char;\n                    }\n                    else {\n                        if (last === '\"') {\n                            last = ',';\n                        }\n                        else {\n                            break argsCheck;\n                        }\n                    }\n                    break;\n                case ']':\n                    if (quoted) {\n                        escapedArg = escapedArg + char;\n                    }\n                    else if (last !== \"\") {\n                        this.closingBracket = new argument_1.Argument(\"]\", vscode_languageserver_types_1.Range.create(document.positionAt(argsOffset + i), document.positionAt(argsOffset + i + 1)));\n                        break argsCheck;\n                    }\n                    break;\n                case ' ':\n                case '\\t':\n                    break;\n                case '\\\\':\n                    if (quoted) {\n                        switch (argsContent.charAt(i + 1)) {\n                            case '\"':\n                            case '\\\\':\n                                escapedArg = escapedArg + argsContent.charAt(i + 1);\n                                i++;\n                                continue;\n                            case ' ':\n                            case '\\t':\n                                escapeCheck: for (let j = i + 2; j < argsContent.length; j++) {\n                                    switch (argsContent.charAt(j)) {\n                                        case '\\r':\n                                            // offset one more for \\r\\n\n                                            j++;\n                                        case '\\n':\n                                            i = j;\n                                            continue argsCheck;\n                                        case ' ':\n                                        case '\\t':\n                                            break;\n                                        default:\n                                            break escapeCheck;\n                                    }\n                                }\n                                break;\n                            case '\\r':\n                                // offset one more for \\r\\n\n                                i++;\n                            default:\n                                i++;\n                                continue;\n                        }\n                    }\n                    else {\n                        escapeCheck: for (let j = i + 1; j < argsContent.length; j++) {\n                            switch (argsContent.charAt(j)) {\n                                case '\\r':\n                                    // offset one more for \\r\\n\n                                    j++;\n                                case '\\n':\n                                    i = j;\n                                    continue argsCheck;\n                                case ' ':\n                                case '\\t':\n                                    break;\n                                default:\n                                    break escapeCheck;\n                            }\n                        }\n                    }\n                    break argsCheck;\n                default:\n                    if (!quoted) {\n                        break argsCheck;\n                    }\n                    escapedArg = escapedArg + char;\n                    break;\n            }\n        }\n    }\n    stopSearchingForFlags(_value) {\n        return true;\n    }\n    getOpeningBracket() {\n        return this.openingBracket;\n    }\n    getJSONStrings() {\n        return this.jsonStrings;\n    }\n    getClosingBracket() {\n        return this.closingBracket;\n    }\n}\nexports.JSONInstruction = JSONInstruction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ModifiableInstruction = void 0;\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst flag_1 = require(\"./flag\");\nconst instruction_1 = require(\"./instruction\");\nclass ModifiableInstruction extends instruction_1.Instruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n    getFlags() {\n        if (!this.flags) {\n            this.flags = [];\n            for (let arg of this.getArguments()) {\n                let value = arg.getValue();\n                if (this.stopSearchingForFlags(value)) {\n                    return this.flags;\n                }\n                else if (value.indexOf(\"--\") === 0) {\n                    let range = arg.getRange();\n                    let rawValue = this.document.getText().substring(this.document.offsetAt(range.start), this.document.offsetAt(range.end));\n                    let nameIndex = value.indexOf('=');\n                    let index = rawValue.indexOf('=');\n                    let firstMatch = false;\n                    let secondMatch = false;\n                    let startIndex = -1;\n                    nameSearchLoop: for (let i = 0; i < rawValue.length; i++) {\n                        switch (rawValue.charAt(i)) {\n                            case '\\\\':\n                            case ' ':\n                            case '\\t':\n                            case '\\r':\n                            case '\\n':\n                                break;\n                            case '-':\n                                if (secondMatch) {\n                                    startIndex = i;\n                                    break nameSearchLoop;\n                                }\n                                else if (firstMatch) {\n                                    secondMatch = true;\n                                }\n                                else {\n                                    firstMatch = true;\n                                }\n                                break;\n                            default:\n                                startIndex = i;\n                                break nameSearchLoop;\n                        }\n                    }\n                    let nameStart = this.document.positionAt(this.document.offsetAt(range.start) + startIndex);\n                    if (index === -1) {\n                        this.flags.push(new flag_1.Flag(this.document, range, value.substring(2), vscode_languageserver_types_1.Range.create(nameStart, range.end), null, null));\n                    }\n                    else if (index === value.length - 1) {\n                        let nameEnd = this.document.positionAt(this.document.offsetAt(range.start) + index);\n                        this.flags.push(new flag_1.Flag(this.document, range, value.substring(2, index), vscode_languageserver_types_1.Range.create(nameStart, nameEnd), \"\", vscode_languageserver_types_1.Range.create(range.end, range.end)));\n                    }\n                    else {\n                        let nameEnd = this.document.positionAt(this.document.offsetAt(range.start) + index);\n                        this.flags.push(new flag_1.Flag(this.document, range, value.substring(2, nameIndex), vscode_languageserver_types_1.Range.create(nameStart, nameEnd), value.substring(nameIndex + 1), vscode_languageserver_types_1.Range.create(this.document.positionAt(this.document.offsetAt(range.start) + index + 1), range.end)));\n                    }\n                }\n            }\n        }\n        return this.flags;\n    }\n    getArguments() {\n        const args = super.getArguments();\n        const flags = this.getFlags();\n        if (flags.length === 0) {\n            return args;\n        }\n        for (let i = 0; i < flags.length; i++) {\n            args.shift();\n        }\n        return args;\n    }\n}\nexports.ModifiableInstruction = ModifiableInstruction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Flag = void 0;\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst flagOption_1 = require(\"./flagOption\");\nclass Flag {\n    constructor(document, range, name, nameRange, value, valueRange) {\n        this.options = [];\n        this.range = range;\n        this.name = name;\n        this.nameRange = nameRange;\n        this.value = value;\n        this.valueRange = valueRange;\n        if (this.value !== null) {\n            let offset = document.offsetAt(valueRange.start);\n            let nameStart = -1;\n            let valueStart = -1;\n            let hasOptions = false;\n            for (let i = 0; i < value.length; i++) {\n                switch (value.charAt(i)) {\n                    case '=':\n                        hasOptions = true;\n                        if (valueStart === -1) {\n                            valueStart = i + 1;\n                            break;\n                        }\n                        break;\n                    case ',':\n                        this.options.push(this.createFlagOption(document, value, offset, nameStart, valueStart, i));\n                        nameStart = -1;\n                        valueStart = -1;\n                        break;\n                    default:\n                        if (nameStart === -1) {\n                            nameStart = i;\n                        }\n                        break;\n                }\n            }\n            if (hasOptions && nameStart !== -1) {\n                this.options.push(this.createFlagOption(document, value, offset, nameStart, valueStart, value.length));\n            }\n        }\n    }\n    createFlagOption(document, content, documentOffset, nameStart, valueStart, valueEnd) {\n        const optionRange = vscode_languageserver_types_1.Range.create(document.positionAt(documentOffset + nameStart), document.positionAt(documentOffset + valueEnd));\n        if (valueStart === -1) {\n            return new flagOption_1.FlagOption(optionRange, content.substring(nameStart, valueEnd), optionRange, null, null);\n        }\n        return new flagOption_1.FlagOption(optionRange, content.substring(nameStart, valueStart - 1), vscode_languageserver_types_1.Range.create(document.positionAt(documentOffset + nameStart), document.positionAt(documentOffset + valueStart - 1)), content.substring(valueStart, valueEnd), vscode_languageserver_types_1.Range.create(document.positionAt(documentOffset + valueStart), document.positionAt(documentOffset + valueEnd)));\n    }\n    toString() {\n        if (this.valueRange) {\n            return \"--\" + this.name + \"=\" + this.value;\n        }\n        return \"--\" + this.name;\n    }\n    /**\n     * Returns the range that encompasses this entire flag. This includes the\n     * -- prefix in the beginning to the last character of the flag's value (if\n     * it has been defined).\n     *\n     * @return the entire range of this flag\n     */\n    getRange() {\n        return this.range;\n    }\n    /**\n     * Returns the name of this flag. The name does not include the -- prefix.\n     * Thus, for HEALTHCHECK's --interval flag, interval is the flag's name and\n     * not --interval.\n     *\n     * @return this flag's name\n     */\n    getName() {\n        return this.name;\n    }\n    /**\n     * Returns the range that encompasses the flag's name\n     *\n     * @return the range containing the flag's name\n     */\n    getNameRange() {\n        return this.nameRange;\n    }\n    /**\n     * Returns the value that has been set to this flag. May be null if the\n     * flag is invalid and has no value set like a --start-period. If the flag\n     * is instead a --start-period= with an equals sign then the flag's value\n     * is the empty string.\n     *\n     * @return this flag's value if it has been defined, null otherwise\n     */\n    getValue() {\n        return this.value;\n    }\n    /**\n     * Returns the range that encompasses this flag's value. If no value has\n     * been set then null will be returned.\n     *\n     * @return the range containing this flag's value, or null if the flag\n     *         has no value defined\n     */\n    getValueRange() {\n        return this.valueRange;\n    }\n    getOption(name) {\n        for (const option of this.options) {\n            if (option.getName() === name) {\n                return option;\n            }\n        }\n        return null;\n    }\n    getOptions() {\n        return this.options;\n    }\n    hasOptions() {\n        return this.options.length > 0;\n    }\n}\nexports.Flag = Flag;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FlagOption = void 0;\nclass FlagOption {\n    constructor(range, name, nameRange, value, valueRange) {\n        this.range = range;\n        this.name = name;\n        this.nameRange = nameRange;\n        this.value = value;\n        this.valueRange = valueRange;\n    }\n    toString() {\n        if (this.valueRange !== null) {\n            return this.name + \"=\" + this.value;\n        }\n        return this.name;\n    }\n    getRange() {\n        return this.range;\n    }\n    getName() {\n        return this.name;\n    }\n    getNameRange() {\n        return this.nameRange;\n    }\n    getValue() {\n        return this.value;\n    }\n    getValueRange() {\n        return this.valueRange;\n    }\n}\nexports.FlagOption = FlagOption;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Arg = void 0;\nconst property_1 = require(\"../property\");\nconst propertyInstruction_1 = require(\"../propertyInstruction\");\nclass Arg extends propertyInstruction_1.PropertyInstruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n        this.property = null;\n        const args = this.getPropertyArguments();\n        if (args.length === 1) {\n            this.property = new property_1.Property(this.document, this.escapeChar, args[0]);\n        }\n        else {\n            this.property = null;\n        }\n    }\n    /**\n     * Returns the variable defined by this ARG. This may be null if\n     * this ARG instruction is malformed and has no variable\n     * declaration.\n     */\n    getProperty() {\n        return this.property;\n    }\n}\nexports.Arg = Arg;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Property = void 0;\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst util_1 = require(\"./util\");\nclass Property {\n    constructor(document, escapeChar, arg, arg2) {\n        this.assignmentOperatorRange = null;\n        this.assignmentOperator = null;\n        this.valueRange = null;\n        this.value = null;\n        this.document = document;\n        this.escapeChar = escapeChar;\n        this.nameRange = Property.getNameRange(document, arg);\n        let value = document.getText().substring(document.offsetAt(this.nameRange.start), document.offsetAt(this.nameRange.end));\n        this.name = Property.getValue(value, escapeChar);\n        if (arg2) {\n            this.valueRange = arg2.getRange();\n            value = document.getText().substring(document.offsetAt(this.valueRange.start), document.offsetAt(this.valueRange.end));\n            this.value = Property.getValue(value, escapeChar);\n            this.range = vscode_languageserver_types_1.Range.create(this.nameRange.start, this.valueRange.end);\n        }\n        else {\n            let argRange = arg.getRange();\n            if (this.nameRange.start.line === argRange.start.line\n                && this.nameRange.start.character === argRange.start.character\n                && this.nameRange.end.line === argRange.end.line\n                && this.nameRange.end.character === argRange.end.character) {\n            }\n            else {\n                this.valueRange = Property.getValueRange(document, arg);\n                value = document.getText().substring(document.offsetAt(this.valueRange.start), document.offsetAt(this.valueRange.end));\n                this.value = Property.getValue(value, escapeChar);\n                this.assignmentOperatorRange = vscode_languageserver_types_1.Range.create(this.nameRange.end, this.valueRange.start);\n                this.assignmentOperator = \"=\";\n            }\n            this.range = argRange;\n        }\n    }\n    getRange() {\n        return this.range;\n    }\n    getName() {\n        return this.name;\n    }\n    getNameRange() {\n        return this.nameRange;\n    }\n    getValue() {\n        return this.value;\n    }\n    getValueRange() {\n        return this.valueRange;\n    }\n    /**\n     * Retrieves the operator used for delimiting between the name and\n     * value of this property. This will either be the \"=\" character\n     * or null if a character was not used or if this property has no\n     * value defined.\n     */\n    getAssignmentOperator() {\n        return this.assignmentOperator;\n    }\n    getAssignmentOperatorRange() {\n        return this.assignmentOperatorRange;\n    }\n    /**\n     * Returns the value of this property including any enclosing\n     * single or double quotes and relevant escape characters.\n     * Escaped newlines and its associated contiguous whitespace\n     * characters however will not be returned as they are deemed to\n     * be uninteresting to clients trying to return a Dockerfile.\n     *\n     * @return the unescaped value of this property or null if this\n     *         property has no associated value\n     */\n    getUnescapedValue() {\n        if (this.valueRange === null) {\n            return null;\n        }\n        let escaped = false;\n        let rawValue = \"\";\n        let value = this.document.getText().substring(this.document.offsetAt(this.valueRange.start), this.document.offsetAt(this.valueRange.end));\n        rawLoop: for (let i = 0; i < value.length; i++) {\n            let char = value.charAt(i);\n            switch (char) {\n                case this.escapeChar:\n                    for (let j = i + 1; j < value.length; j++) {\n                        switch (value.charAt(j)) {\n                            case '\\r':\n                                j++;\n                            case '\\n':\n                                escaped = true;\n                                i = j;\n                                continue rawLoop;\n                            case ' ':\n                            case '\\t':\n                                break;\n                            default:\n                                rawValue = rawValue + char;\n                                continue rawLoop;\n                        }\n                    }\n                    // this happens if there's only whitespace after the escape character\n                    rawValue = rawValue + char;\n                    break;\n                case '\\r':\n                case '\\n':\n                    break;\n                case ' ':\n                case '\\t':\n                    if (!escaped) {\n                        rawValue = rawValue + char;\n                    }\n                    break;\n                case '#':\n                    if (escaped) {\n                        for (let j = i + 1; j < value.length; j++) {\n                            switch (value.charAt(j)) {\n                                case '\\r':\n                                    j++;\n                                case '\\n':\n                                    i = j;\n                                    continue rawLoop;\n                            }\n                        }\n                    }\n                    else {\n                        rawValue = rawValue + char;\n                    }\n                    break;\n                default:\n                    rawValue = rawValue + char;\n                    escaped = false;\n                    break;\n            }\n        }\n        return rawValue;\n    }\n    static getNameRange(document, arg) {\n        let value = arg.getValue();\n        let index = value.indexOf('=');\n        if (index !== -1) {\n            let initial = value.charAt(0);\n            let before = value.charAt(index - 1);\n            // check if content before the equals sign are in quotes\n            // \"var\"=value\n            // 'var'=value\n            // otherwise, just assume it's a standard definition\n            // var=value\n            if ((initial === '\"' && before === '\"') || (initial === '\\'' && before === '\\'') || (initial !== '\"' && initial !== '\\'')) {\n                return vscode_languageserver_types_1.Range.create(arg.getRange().start, document.positionAt(document.offsetAt(arg.getRange().start) + index));\n            }\n        }\n        // no '=' found, just defined the property's name\n        return arg.getRange();\n    }\n    static getValueRange(document, arg) {\n        return vscode_languageserver_types_1.Range.create(document.positionAt(document.offsetAt(arg.getRange().start) + arg.getValue().indexOf('=') + 1), document.positionAt(document.offsetAt(arg.getRange().end)));\n    }\n    /**\n     * Returns the actual value of this key-value pair. The value will\n     * have its escape characters removed if applicable. If the value\n     * spans multiple lines and there are comments nested within the\n     * lines, they too will be removed.\n     *\n     * @return the value that this key-value pair will actually be, may\n     *         be null if no value is defined, may be the empty string\n     *         if the value only consists of whitespace\n     */\n    static getValue(value, escapeChar) {\n        let escaped = false;\n        const skip = util_1.Util.findLeadingNonWhitespace(value, escapeChar);\n        if (skip !== 0 && value.charAt(skip) === '#') {\n            // need to skip over comments\n            escaped = true;\n        }\n        value = value.substring(skip);\n        let first = value.charAt(0);\n        let last = value.charAt(value.length - 1);\n        let literal = first === '\\'' || first === '\"';\n        let inSingle = (first === '\\'' && last === '\\'');\n        let inDouble = false;\n        if (first === '\"') {\n            for (let i = 1; i < value.length; i++) {\n                if (value.charAt(i) === escapeChar) {\n                    i++;\n                }\n                else if (value.charAt(i) === '\"' && i === value.length - 1) {\n                    inDouble = true;\n                }\n            }\n        }\n        if (inSingle || inDouble) {\n            value = value.substring(1, value.length - 1);\n        }\n        let commentCheck = -1;\n        let escapedValue = \"\";\n        let start = 0;\n        parseValue: for (let i = 0; i < value.length; i++) {\n            let char = value.charAt(i);\n            switch (char) {\n                case escapeChar:\n                    if (i + 1 === value.length) {\n                        escapedValue = escapedValue + escapeChar;\n                        break parseValue;\n                    }\n                    char = value.charAt(i + 1);\n                    if (char === ' ' || char === '\\t') {\n                        whitespaceCheck: for (let j = i + 2; j < value.length; j++) {\n                            let char2 = value.charAt(j);\n                            switch (char2) {\n                                case ' ':\n                                case '\\t':\n                                    break;\n                                case '\\r':\n                                    j++;\n                                case '\\n':\n                                    escaped = true;\n                                    i = j;\n                                    continue parseValue;\n                                default:\n                                    if (!inDouble && !inSingle && !literal) {\n                                        if (char2 === escapeChar) {\n                                            // add the escaped character\n                                            escapedValue = escapedValue + char;\n                                            // now start parsing from the next escape character\n                                            i = i + 1;\n                                        }\n                                        else {\n                                            // the expectation is that this j = i + 2 here\n                                            escapedValue = escapedValue + char + char2;\n                                            i = j;\n                                        }\n                                        continue parseValue;\n                                    }\n                                    break whitespaceCheck;\n                            }\n                        }\n                    }\n                    if (inDouble) {\n                        if (char === '\\r') {\n                            escaped = true;\n                            i = i + 2;\n                        }\n                        else if (char === '\\n') {\n                            escaped = true;\n                            i++;\n                        }\n                        else if (char !== '\"') {\n                            if (char === escapeChar) {\n                                i++;\n                            }\n                            escapedValue = escapedValue + escapeChar;\n                        }\n                        continue parseValue;\n                    }\n                    else if (inSingle || literal) {\n                        if (char === '\\r') {\n                            escaped = true;\n                            i = i + 2;\n                        }\n                        else if (char === '\\n') {\n                            escaped = true;\n                            i++;\n                        }\n                        else {\n                            escapedValue = escapedValue + escapeChar;\n                        }\n                        continue parseValue;\n                    }\n                    else if (char === escapeChar) {\n                        // double escape, append one and move on\n                        escapedValue = escapedValue + escapeChar;\n                        i++;\n                    }\n                    else if (char === '\\r') {\n                        escaped = true;\n                        // offset one more for \\r\\n\n                        i = i + 2;\n                    }\n                    else if (char === '\\n') {\n                        escaped = true;\n                        i++;\n                        start = i;\n                    }\n                    else {\n                        // any other escapes are simply ignored\n                        escapedValue = escapedValue + char;\n                        i++;\n                    }\n                    break;\n                case ' ':\n                case '\\t':\n                    if (escaped && commentCheck === -1) {\n                        commentCheck = i;\n                    }\n                    escapedValue = escapedValue + char;\n                    break;\n                case '\\r':\n                    i++;\n                case '\\n':\n                    if (escaped && commentCheck !== -1) {\n                        // rollback and remove the whitespace that was previously appended\n                        escapedValue = escapedValue.substring(0, escapedValue.length - (i - commentCheck - 1));\n                        commentCheck = -1;\n                    }\n                    break;\n                case '#':\n                    // a newline was escaped and now there's a comment\n                    if (escaped) {\n                        if (commentCheck !== -1) {\n                            // rollback and remove the whitespace that was previously appended\n                            escapedValue = escapedValue.substring(0, escapedValue.length - (i - commentCheck));\n                            commentCheck = -1;\n                        }\n                        newlineCheck: for (let j = i + 1; j < value.length; j++) {\n                            switch (value.charAt(j)) {\n                                case '\\r':\n                                    j++;\n                                case '\\n':\n                                    i = j;\n                                    break newlineCheck;\n                            }\n                        }\n                        continue parseValue;\n                    }\n                default:\n                    if (escaped) {\n                        escaped = false;\n                        commentCheck = -1;\n                    }\n                    escapedValue = escapedValue + char;\n                    break;\n            }\n        }\n        return escapedValue;\n    }\n}\nexports.Property = Property;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PropertyInstruction = void 0;\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst instruction_1 = require(\"./instruction\");\nconst property_1 = require(\"./property\");\nconst argument_1 = require(\"./argument\");\nconst util_1 = require(\"./util\");\nclass PropertyInstruction extends instruction_1.Instruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n        this.properties = undefined;\n    }\n    getProperties() {\n        if (this.properties === undefined) {\n            let args = this.getPropertyArguments();\n            if (args.length === 0) {\n                this.properties = [];\n            }\n            else if (args.length === 1) {\n                this.properties = [new property_1.Property(this.document, this.escapeChar, args[0])];\n            }\n            else if (args.length === 2) {\n                if (args[0].getValue().indexOf('=') === -1) {\n                    this.properties = [new property_1.Property(this.document, this.escapeChar, args[0], args[1])];\n                }\n                else {\n                    this.properties = [\n                        new property_1.Property(this.document, this.escapeChar, args[0]),\n                        new property_1.Property(this.document, this.escapeChar, args[1])\n                    ];\n                }\n            }\n            else if (args[0].getValue().indexOf('=') === -1) {\n                let text = this.document.getText();\n                let start = args[1].getRange().start;\n                let end = args[args.length - 1].getRange().end;\n                text = text.substring(this.document.offsetAt(start), this.document.offsetAt(end));\n                this.properties = [new property_1.Property(this.document, this.escapeChar, args[0], new argument_1.Argument(text, vscode_languageserver_types_1.Range.create(args[1].getRange().start, args[args.length - 1].getRange().end)))];\n            }\n            else {\n                this.properties = [];\n                for (let i = 0; i < args.length; i++) {\n                    this.properties.push(new property_1.Property(this.document, this.escapeChar, args[i]));\n                }\n            }\n        }\n        return this.properties;\n    }\n    /**\n     * Goes from the back of the string and returns the first\n     * non-whitespace character that is found. If an escape character\n     * is found with newline characters, the escape character will\n     * not be considered a non-whitespace character and its index in\n     * the string will not be returned.\n     *\n     * @param content the string to search through\n     * @return the index in the string for the first non-whitespace\n     *         character when searching from the end of the string\n     */\n    findTrailingNonWhitespace(content) {\n        // loop back to find the first non-whitespace character\n        let index = content.length;\n        whitespaceCheck: for (let i = content.length - 1; i >= 0; i--) {\n            switch (content.charAt(i)) {\n                case ' ':\n                case '\\t':\n                    continue;\n                case '\\n':\n                    if (content.charAt(i - 1) === '\\r') {\n                        i = i - 1;\n                    }\n                case '\\r':\n                    newlineCheck: for (let j = i - 1; j >= 0; j--) {\n                        switch (content.charAt(j)) {\n                            case ' ':\n                            case '\\t':\n                            case '\\r':\n                            case '\\n':\n                            case this.escapeChar:\n                                continue;\n                            default:\n                                index = j;\n                                break newlineCheck;\n                        }\n                    }\n                    break whitespaceCheck;\n                default:\n                    index = i;\n                    break whitespaceCheck;\n            }\n        }\n        return index;\n    }\n    getPropertyArguments() {\n        const args = [];\n        let range = this.getInstructionRange();\n        let instructionNameEndOffset = this.document.offsetAt(range.end);\n        let extra = instructionNameEndOffset - this.document.offsetAt(range.start);\n        let content = this.getTextContent();\n        let fullArgs = content.substring(extra);\n        let start = util_1.Util.findLeadingNonWhitespace(fullArgs, this.escapeChar);\n        if (start === -1) {\n            // only whitespace found, no arguments\n            return [];\n        }\n        const startPosition = this.document.positionAt(instructionNameEndOffset + start);\n        // records whether the parser has just processed an escaped newline or not,\n        // if our starting position is not on the same line as the instruction then\n        // the start of the content is already on an escaped line\n        let escaped = range.start.line !== startPosition.line;\n        // flag to track if the last character was an escape character\n        let endingEscape = false;\n        // position before the first escape character was hit\n        let mark = -1;\n        let end = this.findTrailingNonWhitespace(fullArgs);\n        content = fullArgs.substring(start, end + 1);\n        let argStart = escaped ? -1 : 0;\n        let spaced = false;\n        argumentLoop: for (let i = 0; i < content.length; i++) {\n            let char = content.charAt(i);\n            switch (char) {\n                case this.escapeChar:\n                    if (i + 1 === content.length) {\n                        endingEscape = true;\n                        break argumentLoop;\n                    }\n                    if (!escaped) {\n                        mark = i;\n                    }\n                    switch (content.charAt(i + 1)) {\n                        case ' ':\n                        case '\\t':\n                            if (!util_1.Util.isWhitespace(content.charAt(i + 2))) {\n                                // space was escaped, continue as normal\n                                i = i + 1;\n                                continue argumentLoop;\n                            }\n                            // whitespace encountered, need to figure out if it extends to EOL\n                            whitespaceCheck: for (let j = i + 2; j < content.length; j++) {\n                                switch (content.charAt(j)) {\n                                    case '\\r':\n                                        // offset one more for \\r\\n\n                                        j++;\n                                    case '\\n':\n                                        // whitespace only, safe to skip\n                                        escaped = true;\n                                        i = j;\n                                        continue argumentLoop;\n                                    case ' ':\n                                    case '\\t':\n                                        // ignore whitespace\n                                        break;\n                                    default:\n                                        // whitespace doesn't extend to EOL, create an argument\n                                        args.push(new argument_1.Argument(content.substring(argStart, i), vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + i + 2))));\n                                        argStart = j;\n                                        break whitespaceCheck;\n                                }\n                            }\n                            // go back and start processing the encountered non-whitespace character\n                            i = argStart - 1;\n                            continue argumentLoop;\n                        case '\\r':\n                            // offset one more for \\r\\n\n                            i++;\n                        case '\\n':\n                            // immediately followed by a newline, skip the newline\n                            escaped = true;\n                            i = i + 1;\n                            continue argumentLoop;\n                        case this.escapeChar:\n                            // double escape found, skip it and move on\n                            if (argStart === -1) {\n                                argStart = i;\n                            }\n                            i = i + 1;\n                            continue argumentLoop;\n                        default:\n                            if (argStart === -1) {\n                                argStart = i;\n                            }\n                            // non-whitespace encountered, skip the escape and process the\n                            // character normally\n                            continue argumentLoop;\n                    }\n                case '\\'':\n                case '\"':\n                    if (spaced) {\n                        this.createSpacedArgument(argStart, args, content, mark, instructionNameEndOffset, start);\n                        // reset to start a new argument\n                        argStart = i;\n                        spaced = false;\n                    }\n                    if (argStart === -1) {\n                        argStart = i;\n                    }\n                    for (let j = i + 1; j < content.length; j++) {\n                        switch (content.charAt(j)) {\n                            case char:\n                                if (content.charAt(j + 1) !== ' ' && content.charAt(j + 1) !== '') {\n                                    // there is more content after this quote,\n                                    // continue so that it is all processed as\n                                    // one single argument\n                                    i = j;\n                                    continue argumentLoop;\n                                }\n                                args.push(new argument_1.Argument(content.substring(argStart, j + 1), vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + j + 1))));\n                                i = j;\n                                argStart = -1;\n                                continue argumentLoop;\n                            case this.escapeChar:\n                                j++;\n                                break;\n                        }\n                    }\n                    break argumentLoop;\n                case ' ':\n                case '\\t':\n                    if (escaped) {\n                        // consider there to be a space only if an argument\n                        // is not spanning multiple lines\n                        if (argStart !== -1) {\n                            spaced = true;\n                        }\n                    }\n                    else if (argStart !== -1) {\n                        args.push(new argument_1.Argument(content.substring(argStart, i), vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + i))));\n                        argStart = -1;\n                    }\n                    break;\n                case '\\r':\n                    // offset one more for \\r\\n\n                    i++;\n                case '\\n':\n                    spaced = false;\n                    break;\n                case '#':\n                    if (escaped) {\n                        // a newline was escaped and now there's a comment\n                        for (let j = i + 1; j < content.length; j++) {\n                            switch (content.charAt(j)) {\n                                case '\\r':\n                                    j++;\n                                case '\\n':\n                                    i = j;\n                                    spaced = false;\n                                    continue argumentLoop;\n                            }\n                        }\n                        // went to the end without finding a newline,\n                        // the comment was the last line in the instruction,\n                        // just stop parsing, create an argument if needed\n                        if (argStart !== -1) {\n                            let value = content.substring(argStart, mark);\n                            args.push(new argument_1.Argument(value, vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + mark))));\n                            argStart = -1;\n                        }\n                        break argumentLoop;\n                    }\n                    else if (argStart === -1) {\n                        argStart = i;\n                    }\n                    break;\n                default:\n                    if (spaced) {\n                        this.createSpacedArgument(argStart, args, content, mark, instructionNameEndOffset, start);\n                        // reset to start a new argument\n                        argStart = i;\n                        spaced = false;\n                    }\n                    escaped = false;\n                    if (argStart === -1) {\n                        argStart = i;\n                    }\n                    // variable detected\n                    if (char === '$' && content.charAt(i + 1) === '{') {\n                        let singleQuotes = false;\n                        let doubleQuotes = false;\n                        let escaped = false;\n                        for (let j = i + 1; j < content.length; j++) {\n                            switch (content.charAt(j)) {\n                                case this.escapeChar:\n                                    escaped = true;\n                                    break;\n                                case '\\r':\n                                case '\\n':\n                                    break;\n                                case '\\'':\n                                    singleQuotes = !singleQuotes;\n                                    escaped = false;\n                                    break;\n                                case '\"':\n                                    doubleQuotes = !doubleQuotes;\n                                    escaped = false;\n                                    break;\n                                case ' ':\n                                case '\\t':\n                                    if (escaped || singleQuotes || doubleQuotes) {\n                                        break;\n                                    }\n                                    i = j - 1;\n                                    continue argumentLoop;\n                                case '}':\n                                    i = j;\n                                    continue argumentLoop;\n                                default:\n                                    escaped = false;\n                                    break;\n                            }\n                        }\n                        break argumentLoop;\n                    }\n                    break;\n            }\n        }\n        if (argStart !== -1 && argStart !== content.length) {\n            let end = endingEscape ? content.length - 1 : content.length;\n            let value = content.substring(argStart, end);\n            args.push(new argument_1.Argument(value, vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + end))));\n        }\n        return args;\n    }\n    createSpacedArgument(argStart, args, content, mark, instructionNameEndOffset, start) {\n        if (argStart !== -1) {\n            args.push(new argument_1.Argument(content.substring(argStart, mark), vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + mark))));\n        }\n    }\n}\nexports.PropertyInstruction = PropertyInstruction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Cmd = void 0;\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\nclass Cmd extends jsonInstruction_1.JSONInstruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n}\nexports.Cmd = Cmd;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Copy = void 0;\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\nclass Copy extends jsonInstruction_1.JSONInstruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n    stopSearchingForFlags(argument) {\n        return argument.indexOf(\"--\") === -1;\n    }\n    getFromFlag() {\n        let flags = super.getFlags();\n        return flags.length === 1 && flags[0].getName() === \"from\" ? flags[0] : null;\n    }\n    /**\n     * Returns there here-documents that are defined in this RUN\n     * instruction.\n     *\n     * This API is experimental and subject to change.\n     */\n    getHeredocs() {\n        return super.getHeredocs();\n    }\n}\nexports.Copy = Copy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Env = void 0;\nconst propertyInstruction_1 = require(\"../propertyInstruction\");\nclass Env extends propertyInstruction_1.PropertyInstruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n    getProperties() {\n        return super.getProperties();\n    }\n}\nexports.Env = Env;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Entrypoint = void 0;\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\nclass Entrypoint extends jsonInstruction_1.JSONInstruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n}\nexports.Entrypoint = Entrypoint;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.From = void 0;\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst modifiableInstruction_1 = require(\"../modifiableInstruction\");\nclass From extends modifiableInstruction_1.ModifiableInstruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n    stopSearchingForFlags(argument) {\n        return argument.indexOf(\"--\") === -1;\n    }\n    getImage() {\n        return this.getRangeContent(this.getImageRange());\n    }\n    /**\n     * Returns the name of the image that will be used as the base image.\n     *\n     * @return the base image's name, or null if unspecified\n     */\n    getImageName() {\n        return this.getRangeContent(this.getImageNameRange());\n    }\n    /**\n     * Returns the range that covers the name of the image used by\n     * this instruction.\n     *\n     * @return the range of the name of this instruction's argument,\n     *         or null if no image has been specified\n     */\n    getImageNameRange() {\n        let range = this.getImageRange();\n        if (range) {\n            let registryRange = this.getRegistryRange();\n            if (registryRange) {\n                range.start = this.document.positionAt(this.document.offsetAt(registryRange.end) + 1);\n            }\n            let tagRange = this.getImageTagRange();\n            let digestRange = this.getImageDigestRange();\n            if (tagRange === null) {\n                if (digestRange !== null) {\n                    range.end = this.document.positionAt(this.document.offsetAt(digestRange.start) - 1);\n                }\n            }\n            else {\n                range.end = this.document.positionAt(this.document.offsetAt(tagRange.start) - 1);\n            }\n            return range;\n        }\n        return null;\n    }\n    /**\n     * Returns the range that covers the image argument of this\n     * instruction. This includes the tag or digest of the image if\n     * it has been specified by the instruction.\n     *\n     * @return the range of the image argument, or null if no image\n     *         has been specified\n     */\n    getImageRange() {\n        let args = this.getArguments();\n        return args.length !== 0 ? args[0].getRange() : null;\n    }\n    getImageTag() {\n        return this.getRangeContent(this.getImageTagRange());\n    }\n    /**\n     * Returns the range in the document that the tag of the base\n     * image encompasses.\n     *\n     * @return the base image's tag's range in the document, or null\n     *         if no tag has been specified\n     */\n    getImageTagRange() {\n        const range = this.getImageRange();\n        if (range) {\n            const rangeStartOffset = this.document.offsetAt(range.start);\n            const content = this.getRangeContent(range);\n            const atIndex = this.indexOf(rangeStartOffset, content, '@');\n            const slashIndex = content.indexOf('/');\n            if (atIndex === -1) {\n                const colonIndex = this.lastIndexOf(rangeStartOffset, content, ':');\n                if (colonIndex > slashIndex) {\n                    return vscode_languageserver_types_1.Range.create(range.start.line, range.start.character + colonIndex + 1, range.end.line, range.end.character);\n                }\n            }\n            const subcontent = content.substring(0, atIndex);\n            const subcolonIndex = subcontent.indexOf(':');\n            if (subcolonIndex === -1) {\n                return null;\n            }\n            if (slashIndex === -1) {\n                // slash not found suggests no registry and no namespace defined\n                return vscode_languageserver_types_1.Range.create(this.document.positionAt(rangeStartOffset + subcolonIndex + 1), this.document.positionAt(rangeStartOffset + atIndex));\n            }\n            // both colon and slash found, check if it is a port\n            if (subcolonIndex < slashIndex) {\n                return null;\n            }\n            return vscode_languageserver_types_1.Range.create(this.document.positionAt(rangeStartOffset + subcolonIndex + 1), this.document.positionAt(rangeStartOffset + subcontent.length));\n        }\n        return null;\n    }\n    getImageDigest() {\n        return this.getRangeContent(this.getImageDigestRange());\n    }\n    /**\n     * Returns the range in the document that the digest of the base\n     * image encompasses.\n     *\n     * @return the base image's digest's range in the document, or null\n     *         if no digest has been specified\n     */\n    getImageDigestRange() {\n        let range = this.getImageRange();\n        if (range) {\n            let content = this.getRangeContent(range);\n            let index = this.lastIndexOf(this.document.offsetAt(range.start), content, '@');\n            if (index !== -1) {\n                return vscode_languageserver_types_1.Range.create(range.start.line, range.start.character + index + 1, range.end.line, range.end.character);\n            }\n        }\n        return null;\n    }\n    indexOf(documentOffset, content, searchString) {\n        let index = content.indexOf(searchString);\n        const variables = this.getVariables();\n        for (let i = 0; i < variables.length; i++) {\n            const position = documentOffset + index;\n            const variableRange = variables[i].getRange();\n            if (this.document.offsetAt(variableRange.start) < position && position < this.document.offsetAt(variableRange.end)) {\n                const offset = this.document.offsetAt(variableRange.end) - documentOffset;\n                const substring = content.substring(offset);\n                const subIndex = substring.indexOf(searchString);\n                if (subIndex === -1) {\n                    return -1;\n                }\n                index = subIndex + offset;\n                i = -1;\n                continue;\n            }\n        }\n        return index;\n    }\n    lastIndexOf(documentOffset, content, searchString) {\n        let index = content.lastIndexOf(searchString);\n        const variables = this.getVariables();\n        for (let i = 0; i < variables.length; i++) {\n            const position = documentOffset + index;\n            const variableRange = variables[i].getRange();\n            if (this.document.offsetAt(variableRange.start) < position && position < this.document.offsetAt(variableRange.end)) {\n                index = content.substring(0, index).lastIndexOf(searchString);\n                if (index === -1) {\n                    return -1;\n                }\n                i = -1;\n                continue;\n            }\n        }\n        return index;\n    }\n    getRegistry() {\n        return this.getRangeContent(this.getRegistryRange());\n    }\n    getRegistryRange() {\n        const range = this.getImageRange();\n        if (range) {\n            const tagRange = this.getImageTagRange();\n            const digestRange = this.getImageDigestRange();\n            if (tagRange === null) {\n                if (digestRange !== null) {\n                    range.end = this.document.positionAt(this.document.offsetAt(digestRange.start) - 1);\n                }\n            }\n            else {\n                range.end = this.document.positionAt(this.document.offsetAt(tagRange.start) - 1);\n            }\n            const content = this.getRangeContent(range);\n            const rangeStart = this.document.offsetAt(range.start);\n            const startingSlashIndex = this.indexOf(rangeStart, content, '/');\n            if (startingSlashIndex === -1) {\n                return null;\n            }\n            const portIndex = this.indexOf(rangeStart, content, ':');\n            const dotIndex = this.indexOf(rangeStart, content, '.');\n            // hostname detected\n            if (portIndex !== -1 || dotIndex !== -1) {\n                return vscode_languageserver_types_1.Range.create(range.start, this.document.positionAt(rangeStart + startingSlashIndex));\n            }\n            const registry = content.substring(0, startingSlashIndex);\n            // localhost registry detected\n            if (registry === 'localhost') {\n                return vscode_languageserver_types_1.Range.create(range.start, this.document.positionAt(rangeStart + startingSlashIndex));\n            }\n        }\n        return null;\n    }\n    getBuildStage() {\n        let range = this.getBuildStageRange();\n        return range === null ? null : this.getRangeContent(range);\n    }\n    getBuildStageRange() {\n        let args = this.getArguments();\n        if (args.length > 2 && args[1].getValue().toUpperCase() === \"AS\") {\n            return args[2].getRange();\n        }\n        return null;\n    }\n    getPlatformFlag() {\n        let flags = super.getFlags();\n        return flags.length === 1 && flags[0].getName() === \"platform\" ? flags[0] : null;\n    }\n}\nexports.From = From;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Healthcheck = void 0;\nconst modifiableInstruction_1 = require(\"../modifiableInstruction\");\nclass Healthcheck extends modifiableInstruction_1.ModifiableInstruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n    stopSearchingForFlags(argument) {\n        argument = argument.toUpperCase();\n        return argument === \"CMD\" || argument === \"NONE\";\n    }\n    getSubcommand() {\n        let args = this.getArguments();\n        return args.length !== 0 ? args[0] : null;\n    }\n}\nexports.Healthcheck = Healthcheck;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Label = void 0;\nconst propertyInstruction_1 = require(\"../propertyInstruction\");\nconst util_1 = require(\"../util\");\nclass Label extends propertyInstruction_1.PropertyInstruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n    getVariables() {\n        const variables = super.getVariables();\n        const properties = this.getProperties();\n        // iterate over all of this LABEL's properties\n        for (const property of properties) {\n            const value = property.getUnescapedValue();\n            // check if the value is contained in single quotes,\n            // single quotes would indicate a literal value\n            if (value !== null && value.length > 2 && value.charAt(0) === '\\'' && value.charAt(value.length - 1) === '\\'') {\n                const range = property.getValueRange();\n                for (let i = 0; i < variables.length; i++) {\n                    // if a variable is in a single quote, remove it from the list\n                    if (util_1.Util.isInsideRange(variables[i].getRange().start, range)) {\n                        variables.splice(i, 1);\n                        i--;\n                    }\n                }\n            }\n        }\n        return variables;\n    }\n    getProperties() {\n        return super.getProperties();\n    }\n}\nexports.Label = Label;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Onbuild = void 0;\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst parser_1 = require(\"../parser\");\nconst instruction_1 = require(\"../instruction\");\nclass Onbuild extends instruction_1.Instruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n    getTrigger() {\n        let trigger = this.getTriggerWord();\n        return trigger === null ? null : trigger.toUpperCase();\n    }\n    getTriggerWord() {\n        return this.getRangeContent(this.getTriggerRange());\n    }\n    getTriggerRange() {\n        let args = this.getArguments();\n        return args.length > 0 ? args[0].getRange() : null;\n    }\n    getTriggerInstruction() {\n        let triggerRange = this.getTriggerRange();\n        if (triggerRange === null) {\n            return null;\n        }\n        let args = this.getArguments();\n        return parser_1.Parser.createInstruction(this.document, this.dockerfile, this.escapeChar, vscode_languageserver_types_1.Range.create(args[0].getRange().start, this.getRange().end), this.getTriggerWord(), triggerRange);\n    }\n}\nexports.Onbuild = Onbuild;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Run = void 0;\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\nclass Run extends jsonInstruction_1.JSONInstruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n    stopSearchingForFlags(argument) {\n        return argument.indexOf(\"--\") === -1;\n    }\n    /**\n     * Returns there here-documents that are defined in this RUN\n     * instruction.\n     *\n     * This API is experimental and subject to change.\n     */\n    getHeredocs() {\n        return super.getHeredocs();\n    }\n}\nexports.Run = Run;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Shell = void 0;\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\nclass Shell extends jsonInstruction_1.JSONInstruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n}\nexports.Shell = Shell;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Stopsignal = void 0;\nconst instruction_1 = require(\"../instruction\");\nclass Stopsignal extends instruction_1.Instruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n}\nexports.Stopsignal = Stopsignal;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Workdir = void 0;\nconst instruction_1 = require(\"../instruction\");\nclass Workdir extends instruction_1.Instruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n    /**\n     * Returns the path that has been defined. Note that this path may\n     * be absolute or relative depending on what was written in the\n     * instruction.\n     *\n     * @return the working directory's path, or null if this\n     *         instruction has no arguments\n     */\n    getPath() {\n        return this.getArgumentsContent();\n    }\n    /**\n     * Returns the absolute path that this instruction resolves to. The\n     * function will inspect prior WORKDIR instructions in the current\n     * image or another build stage in the Dockerfile to try to\n     * determine this.\n     *\n     * @return the absolute path of the working directory, or null if\n     *         this instruction has no arguments, or undefined if it\n     *         cannot be determined because only relative paths could be\n     *         found\n     */\n    getAbsolutePath() {\n        const path = this.getPath();\n        if (path === null || path.startsWith(\"/\")) {\n            return path;\n        }\n        const startLine = this.getRange().start.line;\n        const hierarchy = this.dockerfile.getStageHierarchy(startLine);\n        for (let i = hierarchy.length - 1; i >= 0; i--) {\n            const workdirs = hierarchy[i].getWORKDIRs();\n            for (let j = workdirs.length - 1; j >= 0; j--) {\n                if (workdirs[j].getRange().start.line < startLine) {\n                    const parent = workdirs[j].getAbsolutePath();\n                    if (parent === undefined || parent === null) {\n                        return undefined;\n                    }\n                    return parent.endsWith(\"/\") ? parent + path : parent + \"/\" + path;\n                }\n            }\n        }\n        return undefined;\n    }\n}\nexports.Workdir = Workdir;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.User = void 0;\nconst instruction_1 = require(\"../instruction\");\nclass User extends instruction_1.Instruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n}\nexports.User = User;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Volume = void 0;\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\nclass Volume extends jsonInstruction_1.JSONInstruction {\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\n    }\n}\nexports.Volume = Volume;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Remy Suen. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dockerfile = void 0;\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst ast = require(\"./main\");\nconst imageTemplate_1 = require(\"./imageTemplate\");\nconst from_1 = require(\"./instructions/from\");\nconst util_1 = require(\"./util\");\nconst main_1 = require(\"./main\");\nclass Dockerfile extends imageTemplate_1.ImageTemplate {\n    constructor(document) {\n        super();\n        this.initialInstructions = new imageTemplate_1.ImageTemplate();\n        this.buildStages = [];\n        this.directives = [];\n        /**\n         * Whether a FROM instruction has been added to this Dockerfile or not.\n         */\n        this.foundFrom = false;\n        this.document = document;\n    }\n    getEscapeCharacter() {\n        for (const directive of this.directives) {\n            if (directive.getDirective() === ast.Directive.escape) {\n                const value = directive.getValue();\n                if (value === '\\\\' || value === '`') {\n                    return value;\n                }\n            }\n        }\n        return '\\\\';\n    }\n    getInitialARGs() {\n        return this.initialInstructions.getARGs();\n    }\n    getContainingImage(position) {\n        let range = vscode_languageserver_types_1.Range.create(vscode_languageserver_types_1.Position.create(0, 0), this.document.positionAt(this.document.getText().length));\n        if (!util_1.Util.isInsideRange(position, range)) {\n            // not inside the document, invalid position\n            return null;\n        }\n        if (this.initialInstructions.getComments().length > 0 || this.initialInstructions.getInstructions().length > 0) {\n            if (util_1.Util.isInsideRange(position, this.initialInstructions.getRange())) {\n                return this.initialInstructions;\n            }\n        }\n        for (const buildStage of this.buildStages) {\n            if (util_1.Util.isInsideRange(position, buildStage.getRange())) {\n                return buildStage;\n            }\n        }\n        return this;\n    }\n    addInstruction(instruction) {\n        if (instruction.getKeyword() === main_1.Keyword.FROM) {\n            this.currentBuildStage = new imageTemplate_1.ImageTemplate();\n            this.buildStages.push(this.currentBuildStage);\n            this.foundFrom = true;\n        }\n        else if (!this.foundFrom) {\n            this.initialInstructions.addInstruction(instruction);\n        }\n        if (this.foundFrom) {\n            this.currentBuildStage.addInstruction(instruction);\n        }\n        super.addInstruction(instruction);\n    }\n    setDirectives(directives) {\n        this.directives = directives;\n    }\n    getDirective() {\n        return this.directives.length === 0 ? null : this.directives[0];\n    }\n    getDirectives() {\n        return this.directives;\n    }\n    resolveVariable(variable, line) {\n        for (let from of this.getFROMs()) {\n            let range = from.getRange();\n            if (range.start.line <= line && line <= range.end.line) {\n                // resolve the FROM variable against the initial ARGs\n                let initialARGs = new imageTemplate_1.ImageTemplate();\n                for (let instruction of this.initialInstructions.getARGs()) {\n                    initialARGs.addInstruction(instruction);\n                }\n                return initialARGs.resolveVariable(variable, line);\n            }\n        }\n        let image = this.getContainingImage(vscode_languageserver_types_1.Position.create(line, 0));\n        if (image === null) {\n            return undefined;\n        }\n        let resolvedVariable = image.resolveVariable(variable, line);\n        if (resolvedVariable === null) {\n            // refers to an uninitialized ARG variable,\n            // try resolving it against the initial ARGs then\n            let initialARGs = new imageTemplate_1.ImageTemplate();\n            for (let instruction of this.initialInstructions.getARGs()) {\n                initialARGs.addInstruction(instruction);\n            }\n            return initialARGs.resolveVariable(variable, line);\n        }\n        return resolvedVariable;\n    }\n    getAvailableVariables(currentLine) {\n        if (this.getInstructionAt(currentLine) instanceof from_1.From) {\n            let variables = [];\n            for (let arg of this.getInitialARGs()) {\n                let property = arg.getProperty();\n                if (property) {\n                    variables.push(property.getName());\n                }\n            }\n            return variables;\n        }\n        let image = this.getContainingImage(vscode_languageserver_types_1.Position.create(currentLine, 0));\n        return image ? image.getAvailableVariables(currentLine) : [];\n    }\n    getParentStage(image) {\n        const templateFrom = image.getFROM();\n        const imageName = templateFrom === null ? null : templateFrom.getImageName();\n        if (imageName === null) {\n            return null;\n        }\n        for (const from of this.getFROMs()) {\n            if (from.getBuildStage() === imageName) {\n                const range = from.getRange();\n                // on the same line then it's an image that shares the name as the build stage\n                if (range.start.line === templateFrom.getRange().start.line) {\n                    return null;\n                }\n                return this.getContainingImage(range.start);\n            }\n        }\n        return null;\n    }\n    getStageHierarchy(line) {\n        const image = this.getContainingImage(vscode_languageserver_types_1.Position.create(line, 0));\n        if (image === null) {\n            return [];\n        }\n        const stages = [image];\n        let stage = this.getParentStage(image);\n        while (stage !== null) {\n            stages.splice(0, 0, stage);\n            stage = this.getParentStage(stage);\n        }\n        return stages;\n    }\n    getAvailableWorkingDirectories(line) {\n        const availableDirectories = new Set();\n        for (const image of this.getStageHierarchy(line)) {\n            for (const workdir of image.getWORKDIRs()) {\n                if (workdir.getRange().end.line < line) {\n                    let directory = workdir.getAbsolutePath();\n                    if (directory !== undefined && directory !== null) {\n                        if (!directory.endsWith(\"/\")) {\n                            directory += \"/\";\n                        }\n                        availableDirectories.add(directory);\n                    }\n                }\n            }\n        }\n        return Array.from(availableDirectories);\n    }\n    /**\n     * Internally reorganize the comments in the Dockerfile and allocate\n     * them to the relevant build stages that they belong to.\n     */\n    organizeComments() {\n        const comments = this.getComments();\n        for (let i = 0; i < comments.length; i++) {\n            if (util_1.Util.isInsideRange(comments[i].getRange().end, this.initialInstructions.getRange())) {\n                this.initialInstructions.addComment(comments[i]);\n            }\n            else {\n                for (const buildStage of this.buildStages) {\n                    if (util_1.Util.isInsideRange(comments[i].getRange().start, buildStage.getRange())) {\n                        buildStage.addComment(comments[i]);\n                    }\n                }\n            }\n        }\n    }\n    getRange() {\n        const comments = this.getComments();\n        const instructions = this.getInstructions();\n        let range = null;\n        if (comments.length === 0) {\n            if (instructions.length > 0) {\n                range = vscode_languageserver_types_1.Range.create(instructions[0].getRange().start, instructions[instructions.length - 1].getRange().end);\n            }\n        }\n        else if (instructions.length === 0) {\n            range = vscode_languageserver_types_1.Range.create(comments[0].getRange().start, comments[comments.length - 1].getRange().end);\n        }\n        else {\n            const commentStart = comments[0].getRange().start;\n            const commentEnd = comments[comments.length - 1].getRange().end;\n            const instructionStart = instructions[0].getRange().start;\n            const instructionEnd = instructions[instructions.length - 1].getRange().end;\n            if (commentStart.line < instructionStart.line) {\n                if (commentEnd.line < instructionEnd.line) {\n                    range = vscode_languageserver_types_1.Range.create(commentStart, instructionEnd);\n                }\n                range = vscode_languageserver_types_1.Range.create(commentStart, commentEnd);\n            }\n            else if (commentEnd.line < instructionEnd.line) {\n                range = vscode_languageserver_types_1.Range.create(instructionStart, instructionEnd);\n            }\n            else {\n                range = vscode_languageserver_types_1.Range.create(instructionStart, commentEnd);\n            }\n        }\n        if (range === null) {\n            if (this.directives.length === 0) {\n                return null;\n            }\n            return this.directives[0].getRange();\n        }\n        else if (this.directives.length === 0) {\n            return range;\n        }\n        return vscode_languageserver_types_1.Range.create(this.directives[0].getRange().start, range.end);\n    }\n}\nexports.Dockerfile = Dockerfile;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Remy Suen. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageTemplate = void 0;\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst arg_1 = require(\"./instructions/arg\");\nconst cmd_1 = require(\"./instructions/cmd\");\nconst copy_1 = require(\"./instructions/copy\");\nconst env_1 = require(\"./instructions/env\");\nconst entrypoint_1 = require(\"./instructions/entrypoint\");\nconst from_1 = require(\"./instructions/from\");\nconst healthcheck_1 = require(\"./instructions/healthcheck\");\nconst onbuild_1 = require(\"./instructions/onbuild\");\nconst util_1 = require(\"./util\");\nconst workdir_1 = require(\"./instructions/workdir\");\nclass ImageTemplate {\n    constructor() {\n        this.comments = [];\n        this.instructions = [];\n    }\n    addComment(comment) {\n        this.comments.push(comment);\n    }\n    getComments() {\n        return this.comments;\n    }\n    addInstruction(instruction) {\n        this.instructions.push(instruction);\n    }\n    getInstructions() {\n        return this.instructions;\n    }\n    getInstructionAt(line) {\n        for (let instruction of this.instructions) {\n            if (util_1.Util.isInsideRange(vscode_languageserver_types_1.Position.create(line, 0), instruction.getRange())) {\n                return instruction;\n            }\n        }\n        return null;\n    }\n    /**\n     * Gets all the ARG instructions that are defined in this image.\n     */\n    getARGs() {\n        let args = [];\n        for (let instruction of this.instructions) {\n            if (instruction instanceof arg_1.Arg) {\n                args.push(instruction);\n            }\n        }\n        return args;\n    }\n    /**\n     * Gets all the CMD instructions that are defined in this image.\n     */\n    getCMDs() {\n        let cmds = [];\n        for (let instruction of this.instructions) {\n            if (instruction instanceof cmd_1.Cmd) {\n                cmds.push(instruction);\n            }\n        }\n        return cmds;\n    }\n    /**\n     * Gets all the COPY instructions that are defined in this image.\n     */\n    getCOPYs() {\n        let copies = [];\n        for (let instruction of this.instructions) {\n            if (instruction instanceof copy_1.Copy) {\n                copies.push(instruction);\n            }\n        }\n        return copies;\n    }\n    /**\n     * Gets all the ENTRYPOINT instructions that are defined in this image.\n     */\n    getENTRYPOINTs() {\n        let froms = [];\n        for (let instruction of this.instructions) {\n            if (instruction instanceof entrypoint_1.Entrypoint) {\n                froms.push(instruction);\n            }\n        }\n        return froms;\n    }\n    /**\n     * Gets all the ENV instructions that are defined in this image.\n     */\n    getENVs() {\n        let args = [];\n        for (let instruction of this.instructions) {\n            if (instruction instanceof env_1.Env) {\n                args.push(instruction);\n            }\n        }\n        return args;\n    }\n    getFROM() {\n        for (const instruction of this.instructions) {\n            if (instruction instanceof from_1.From) {\n                return instruction;\n            }\n        }\n        return null;\n    }\n    /**\n     * Gets all the FROM instructions that are defined in this image.\n     */\n    getFROMs() {\n        let froms = [];\n        for (let instruction of this.instructions) {\n            if (instruction instanceof from_1.From) {\n                froms.push(instruction);\n            }\n        }\n        return froms;\n    }\n    /**\n     * Gets all the HEALTHCHECK instructions that are defined in this image.\n     */\n    getHEALTHCHECKs() {\n        let froms = [];\n        for (let instruction of this.instructions) {\n            if (instruction instanceof healthcheck_1.Healthcheck) {\n                froms.push(instruction);\n            }\n        }\n        return froms;\n    }\n    getWORKDIRs() {\n        const workdirs = [];\n        for (const instruction of this.instructions) {\n            if (instruction instanceof workdir_1.Workdir) {\n                workdirs.push(instruction);\n            }\n        }\n        return workdirs;\n    }\n    getOnbuildTriggers() {\n        let triggers = [];\n        for (let instruction of this.instructions) {\n            if (instruction instanceof onbuild_1.Onbuild) {\n                let trigger = instruction.getTriggerInstruction();\n                if (trigger) {\n                    triggers.push(trigger);\n                }\n            }\n        }\n        return triggers;\n    }\n    getAvailableVariables(currentLine) {\n        const variables = [];\n        for (const arg of this.getARGs()) {\n            if (arg.isBefore(currentLine)) {\n                const property = arg.getProperty();\n                if (property) {\n                    const variable = property.getName();\n                    if (variables.indexOf(variable) === -1) {\n                        variables.push(variable);\n                    }\n                }\n            }\n        }\n        for (const env of this.getENVs()) {\n            if (env.isBefore(currentLine)) {\n                for (const property of env.getProperties()) {\n                    const variable = property.getName();\n                    if (variables.indexOf(variable) === -1) {\n                        variables.push(variable);\n                    }\n                }\n            }\n        }\n        return variables;\n    }\n    /**\n     * Resolves a variable with the given name at the specified line\n     * to its value. If null is returned, then the variable has been\n     * defined but no value was given. If undefined is returned, then\n     * a variable with the given name has not been defined yet as of\n     * the given line.\n     *\n     * @param variable the name of the variable to resolve\n     * @param line the line number that the variable is on, zero-based\n     * @return the value of the variable as defined by an ARG or ENV\n     *         instruction, or null if no value has been specified, or\n     *         undefined if a variable with the given name has not\n     *         been defined\n     */\n    resolveVariable(variable, line) {\n        let envs = this.getENVs();\n        for (let i = envs.length - 1; i >= 0; i--) {\n            if (envs[i].isBefore(line)) {\n                for (let property of envs[i].getProperties()) {\n                    if (property.getName() === variable) {\n                        return property.getValue();\n                    }\n                }\n            }\n        }\n        let args = this.getARGs();\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (args[i].isBefore(line)) {\n                let property = args[i].getProperty();\n                if (property && property.getName() === variable) {\n                    return property.getValue();\n                }\n            }\n        }\n        return undefined;\n    }\n    getRange() {\n        const instructions = this.getInstructions();\n        if (instructions.length === 0) {\n            // all templates should have instructions, this only happens for\n            // the initial set of instruction\n            return vscode_languageserver_types_1.Range.create(0, 0, 0, 0);\n        }\n        const instructionStart = instructions[0].getRange().start;\n        const instructionEnd = instructions[instructions.length - 1].getRange().end;\n        return vscode_languageserver_types_1.Range.create(instructionStart, instructionEnd);\n    }\n    contains(position) {\n        const range = this.getRange();\n        if (range === null) {\n            return false;\n        }\n        return util_1.Util.isInsideRange(position, range);\n    }\n}\nexports.ImageTemplate = ImageTemplate;\n","import spawnPlease from 'spawn-please'\nimport cp, { type ChildProcess } from 'child_process';\n\nexport async function run(command: string, args: string[]) {\n    try {\n        return await spawnPlease(command, args);\n    } catch (error) {\n        console.error(`Error running command: ${command} ${args.join(' ')}`);\n        throw error;\n    }\n}\n\nexport async function runPiped([command1, args1]: [string, string[]], [command2, args2]: [string, string[]]) {\n    const cp1 = cp.spawn(command1, args1, { stdio: ['inherit', 'pipe', 'inherit'] });\n    const cp2 = cp.spawn(command2, args2, { stdio: ['pipe', 'inherit', 'inherit'] });\n\n    cp1.stdout.pipe(cp2.stdin);\n\n    await Promise.all([assertSuccess(cp1), assertSuccess(cp2)]);\n}\n\nfunction assertSuccess(cp: ChildProcess) {\n    return new Promise<void>((resolve, reject) => {\n        cp.on('error', (error) => {\n            reject(error);\n        });\n        cp.on('close', (code) => {\n            if (code !== 0) {\n                reject(new Error(`process exited with code ${code}`));\n            }\n            resolve();\n        });\n    });\n}\n","const spawn = require('cross-spawn')\n\n/** Spawns a child process, as long as you ask nicely.\n * \n * @param {string} command - The shell command to execute.\n * @param {string[]} [args] - An array of arguments that are given after the command.\n * @param {{ rejectOnError?: boolean, stdin?: string, stderr?: (data: string) => void, stdout?: (data: string) => void }} [options] - Options.\n * @param {any} [spawnOptions] - Options that are passed directly to child_process.spawn. Also supports stdin: string.\n * @returns {Promise<{ stdout: string, stderr: string }>}\n */\nconst spawnPlease = (command, args, options={}, spawnOptions={}) => {\n  // defaults\n  if (options.rejectOnError === undefined) {\n    options.rejectOnError = true\n  }\n\n  let stdout = ''\n  let stderr = ''\n  const child = spawn(command, args, spawnOptions)\n\n  return new Promise((resolve, reject) => {\n    if (options.stdin !== undefined && options.stdin != null) {\n      child.stdin.write(options.stdin)\n    }\n    child.stdin.end()\n\n    child.stdout.on('data', data => {\n      stdout += data\n      if (options.stdout) options.stdout(data)\n    })\n\n    child.stderr.on('data', data => {\n      stderr += data\n      if (options.stderr) options.stderr(data)\n    })\n\n    if (options.rejectOnError) {\n      child.addListener('error', reject)\n    }\n\n    child.on('close', code => {\n      if (code !== 0 && options.rejectOnError) {\n        reject(stderr)\n      } else {\n        resolve({ stdout, stderr })\n      }\n    })\n  })\n}\n\nmodule.exports = spawnPlease\n","'use strict';\n\nconst cp = require('child_process');\nconst parse = require('./lib/parse');\nconst enoent = require('./lib/enoent');\n\nfunction spawn(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const spawned = cp.spawn(parsed.command, parsed.args, parsed.options);\n\n    // Hook into child process \"exit\" event to emit an error if the command\n    // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    enoent.hookChildProcess(spawned, parsed);\n\n    return spawned;\n}\n\nfunction spawnSync(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const result = cp.spawnSync(parsed.command, parsed.args, parsed.options);\n\n    // Analyze if the command does not exist, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n\n    return result;\n}\n\nmodule.exports = spawn;\nmodule.exports.spawn = spawn;\nmodule.exports.sync = spawnSync;\n\nmodule.exports._parse = parse;\nmodule.exports._enoent = enoent;\n","'use strict';\n\nconst path = require('path');\nconst resolveCommand = require('./util/resolveCommand');\nconst escape = require('./util/escape');\nconst readShebang = require('./util/readShebang');\n\nconst isWin = process.platform === 'win32';\nconst isExecutableRegExp = /\\.(?:com|exe)$/i;\nconst isCmdShimRegExp = /node_modules[\\\\/].bin[\\\\/][^\\\\/]+\\.cmd$/i;\n\nfunction detectShebang(parsed) {\n    parsed.file = resolveCommand(parsed);\n\n    const shebang = parsed.file && readShebang(parsed.file);\n\n    if (shebang) {\n        parsed.args.unshift(parsed.file);\n        parsed.command = shebang;\n\n        return resolveCommand(parsed);\n    }\n\n    return parsed.file;\n}\n\nfunction parseNonShell(parsed) {\n    if (!isWin) {\n        return parsed;\n    }\n\n    // Detect & add support for shebangs\n    const commandFile = detectShebang(parsed);\n\n    // We don't need a shell if the command filename is an executable\n    const needsShell = !isExecutableRegExp.test(commandFile);\n\n    // If a shell is required, use cmd.exe and take care of escaping everything correctly\n    // Note that `forceShell` is an hidden option used only in tests\n    if (parsed.options.forceShell || needsShell) {\n        // Need to double escape meta chars if the command is a cmd-shim located in `node_modules/.bin/`\n        // The cmd-shim simply calls execute the package bin file with NodeJS, proxying any argument\n        // Because the escape of metachars with ^ gets interpreted when the cmd.exe is first called,\n        // we need to double escape them\n        const needsDoubleEscapeMetaChars = isCmdShimRegExp.test(commandFile);\n\n        // Normalize posix paths into OS compatible paths (e.g.: foo/bar -> foo\\bar)\n        // This is necessary otherwise it will always fail with ENOENT in those cases\n        parsed.command = path.normalize(parsed.command);\n\n        // Escape command & arguments\n        parsed.command = escape.command(parsed.command);\n        parsed.args = parsed.args.map((arg) => escape.argument(arg, needsDoubleEscapeMetaChars));\n\n        const shellCommand = [parsed.command].concat(parsed.args).join(' ');\n\n        parsed.args = ['/d', '/s', '/c', `\"${shellCommand}\"`];\n        parsed.command = process.env.comspec || 'cmd.exe';\n        parsed.options.windowsVerbatimArguments = true; // Tell node's spawn that the arguments are already escaped\n    }\n\n    return parsed;\n}\n\nfunction parse(command, args, options) {\n    // Normalize arguments, similar to nodejs\n    if (args && !Array.isArray(args)) {\n        options = args;\n        args = null;\n    }\n\n    args = args ? args.slice(0) : []; // Clone array to avoid changing the original\n    options = Object.assign({}, options); // Clone object to avoid changing the original\n\n    // Build our parsed object\n    const parsed = {\n        command,\n        args,\n        options,\n        file: undefined,\n        original: {\n            command,\n            args,\n        },\n    };\n\n    // Delegate further parsing to shell or non-shell\n    return options.shell ? parsed : parseNonShell(parsed);\n}\n\nmodule.exports = parse;\n","'use strict';\n\nconst path = require('path');\nconst which = require('which');\nconst getPathKey = require('path-key');\n\nfunction resolveCommandAttempt(parsed, withoutPathExt) {\n    const env = parsed.options.env || process.env;\n    const cwd = process.cwd();\n    const hasCustomCwd = parsed.options.cwd != null;\n    // Worker threads do not have process.chdir()\n    const shouldSwitchCwd = hasCustomCwd && process.chdir !== undefined && !process.chdir.disabled;\n\n    // If a custom `cwd` was specified, we need to change the process cwd\n    // because `which` will do stat calls but does not support a custom cwd\n    if (shouldSwitchCwd) {\n        try {\n            process.chdir(parsed.options.cwd);\n        } catch (err) {\n            /* Empty */\n        }\n    }\n\n    let resolved;\n\n    try {\n        resolved = which.sync(parsed.command, {\n            path: env[getPathKey({ env })],\n            pathExt: withoutPathExt ? path.delimiter : undefined,\n        });\n    } catch (e) {\n        /* Empty */\n    } finally {\n        if (shouldSwitchCwd) {\n            process.chdir(cwd);\n        }\n    }\n\n    // If we successfully resolved, ensure that an absolute path is returned\n    // Note that when a custom `cwd` was used, we need to resolve to an absolute path based on it\n    if (resolved) {\n        resolved = path.resolve(hasCustomCwd ? parsed.options.cwd : '', resolved);\n    }\n\n    return resolved;\n}\n\nfunction resolveCommand(parsed) {\n    return resolveCommandAttempt(parsed) || resolveCommandAttempt(parsed, true);\n}\n\nmodule.exports = resolveCommand;\n","const isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys'\n\nconst path = require('path')\nconst COLON = isWindows ? ';' : ':'\nconst isexe = require('isexe')\n\nconst getNotFoundError = (cmd) =>\n  Object.assign(new Error(`not found: ${cmd}`), { code: 'ENOENT' })\n\nconst getPathInfo = (cmd, opt) => {\n  const colon = opt.colon || COLON\n\n  // If it has a slash, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  const pathEnv = cmd.match(/\\//) || isWindows && cmd.match(/\\\\/) ? ['']\n    : (\n      [\n        // windows always checks the cwd first\n        ...(isWindows ? [process.cwd()] : []),\n        ...(opt.path || process.env.PATH ||\n          /* istanbul ignore next: very unusual */ '').split(colon),\n      ]\n    )\n  const pathExtExe = isWindows\n    ? opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM'\n    : ''\n  const pathExt = isWindows ? pathExtExe.split(colon) : ['']\n\n  if (isWindows) {\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('')\n  }\n\n  return {\n    pathEnv,\n    pathExt,\n    pathExtExe,\n  }\n}\n\nconst which = (cmd, opt, cb) => {\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n  if (!opt)\n    opt = {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  const step = i => new Promise((resolve, reject) => {\n    if (i === pathEnv.length)\n      return opt.all && found.length ? resolve(found)\n        : reject(getNotFoundError(cmd))\n\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    resolve(subStep(p, i, 0))\n  })\n\n  const subStep = (p, i, ii) => new Promise((resolve, reject) => {\n    if (ii === pathExt.length)\n      return resolve(step(i + 1))\n    const ext = pathExt[ii]\n    isexe(p + ext, { pathExt: pathExtExe }, (er, is) => {\n      if (!er && is) {\n        if (opt.all)\n          found.push(p + ext)\n        else\n          return resolve(p + ext)\n      }\n      return resolve(subStep(p, i, ii + 1))\n    })\n  })\n\n  return cb ? step(0).then(res => cb(null, res), cb) : step(0)\n}\n\nconst whichSync = (cmd, opt) => {\n  opt = opt || {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  for (let i = 0; i < pathEnv.length; i ++) {\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    for (let j = 0; j < pathExt.length; j ++) {\n      const cur = p + pathExt[j]\n      try {\n        const is = isexe.sync(cur, { pathExt: pathExtExe })\n        if (is) {\n          if (opt.all)\n            found.push(cur)\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  if (opt.nothrow)\n    return null\n\n  throw getNotFoundError(cmd)\n}\n\nmodule.exports = which\nwhich.sync = whichSync\n","var fs = require('fs')\nvar core\nif (process.platform === 'win32' || global.TESTING_WINDOWS) {\n  core = require('./windows.js')\n} else {\n  core = require('./mode.js')\n}\n\nmodule.exports = isexe\nisexe.sync = sync\n\nfunction isexe (path, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  if (!cb) {\n    if (typeof Promise !== 'function') {\n      throw new TypeError('callback not provided')\n    }\n\n    return new Promise(function (resolve, reject) {\n      isexe(path, options || {}, function (er, is) {\n        if (er) {\n          reject(er)\n        } else {\n          resolve(is)\n        }\n      })\n    })\n  }\n\n  core(path, options || {}, function (er, is) {\n    // ignore EACCES because that just means we aren't allowed to run it\n    if (er) {\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\n        er = null\n        is = false\n      }\n    }\n    cb(er, is)\n  })\n}\n\nfunction sync (path, options) {\n  // my kingdom for a filtered catch\n  try {\n    return core.sync(path, options || {})\n  } catch (er) {\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\n      return false\n    } else {\n      throw er\n    }\n  }\n}\n","'use strict';\n\nconst pathKey = (options = {}) => {\n\tconst environment = options.env || process.env;\n\tconst platform = options.platform || process.platform;\n\n\tif (platform !== 'win32') {\n\t\treturn 'PATH';\n\t}\n\n\treturn Object.keys(environment).reverse().find(key => key.toUpperCase() === 'PATH') || 'Path';\n};\n\nmodule.exports = pathKey;\n// TODO: Remove this for the next major release\nmodule.exports.default = pathKey;\n","'use strict';\n\n// See http://www.robvanderwoude.com/escapechars.php\nconst metaCharsRegExp = /([()\\][%!^\"`<>&|;, *?])/g;\n\nfunction escapeCommand(arg) {\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    return arg;\n}\n\nfunction escapeArgument(arg, doubleEscapeMetaChars) {\n    // Convert to string\n    arg = `${arg}`;\n\n    // Algorithm below is based on https://qntm.org/cmd\n    // It's slightly altered to disable JS backtracking to avoid hanging on specially crafted input\n    // Please see https://github.com/moxystudio/node-cross-spawn/pull/160 for more information\n\n    // Sequence of backslashes followed by a double quote:\n    // double up all the backslashes and escape the double quote\n    arg = arg.replace(/(?=(\\\\+?)?)\\1\"/g, '$1$1\\\\\"');\n\n    // Sequence of backslashes followed by the end of the string\n    // (which will become a double quote later):\n    // double up all the backslashes\n    arg = arg.replace(/(?=(\\\\+?)?)\\1$/, '$1$1');\n\n    // All other backslashes occur literally\n\n    // Quote the whole thing:\n    arg = `\"${arg}\"`;\n\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    // Double escape meta chars if necessary\n    if (doubleEscapeMetaChars) {\n        arg = arg.replace(metaCharsRegExp, '^$1');\n    }\n\n    return arg;\n}\n\nmodule.exports.command = escapeCommand;\nmodule.exports.argument = escapeArgument;\n","'use strict';\n\nconst fs = require('fs');\nconst shebangCommand = require('shebang-command');\n\nfunction readShebang(command) {\n    // Read the first 150 bytes from the file\n    const size = 150;\n    const buffer = Buffer.alloc(size);\n\n    let fd;\n\n    try {\n        fd = fs.openSync(command, 'r');\n        fs.readSync(fd, buffer, 0, size, 0);\n        fs.closeSync(fd);\n    } catch (e) { /* Empty */ }\n\n    // Attempt to extract shebang (null is returned if not a shebang)\n    return shebangCommand(buffer.toString());\n}\n\nmodule.exports = readShebang;\n","'use strict';\nconst shebangRegex = require('shebang-regex');\n\nmodule.exports = (string = '') => {\n\tconst match = string.match(shebangRegex);\n\n\tif (!match) {\n\t\treturn null;\n\t}\n\n\tconst [path, argument] = match[0].replace(/#! ?/, '').split(' ');\n\tconst binary = path.split('/').pop();\n\n\tif (binary === 'env') {\n\t\treturn argument;\n\t}\n\n\treturn argument ? `${binary} ${argument}` : binary;\n};\n","'use strict';\nmodule.exports = /^#!(.*)/;\n","'use strict';\n\nconst isWin = process.platform === 'win32';\n\nfunction notFoundError(original, syscall) {\n    return Object.assign(new Error(`${syscall} ${original.command} ENOENT`), {\n        code: 'ENOENT',\n        errno: 'ENOENT',\n        syscall: `${syscall} ${original.command}`,\n        path: original.command,\n        spawnargs: original.args,\n    });\n}\n\nfunction hookChildProcess(cp, parsed) {\n    if (!isWin) {\n        return;\n    }\n\n    const originalEmit = cp.emit;\n\n    cp.emit = function (name, arg1) {\n        // If emitting \"exit\" event and exit code is 1, we need to check if\n        // the command exists and emit an \"error\" instead\n        // See https://github.com/IndigoUnited/node-cross-spawn/issues/16\n        if (name === 'exit') {\n            const err = verifyENOENT(arg1, parsed);\n\n            if (err) {\n                return originalEmit.call(cp, 'error', err);\n            }\n        }\n\n        return originalEmit.apply(cp, arguments); // eslint-disable-line prefer-rest-params\n    };\n}\n\nfunction verifyENOENT(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawn');\n    }\n\n    return null;\n}\n\nfunction verifyENOENTSync(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawnSync');\n    }\n\n    return null;\n}\n\nmodule.exports = {\n    hookChildProcess,\n    verifyENOENT,\n    verifyENOENTSync,\n    notFoundError,\n};\n","import fs from 'fs/promises';\nimport path from 'path';\nimport {CacheOptions, Opts, getCacheMap, getMountArgsString, getTargetPath, getBuilder} from './opts.js';\nimport { run, runPiped } from './run.js';\n\nasync function extractCache(cacheSource: string, cacheOptions: CacheOptions, scratchDir: string, containerImage: string, builder: string) {\n    // Prepare Timestamp for Layer Cache Busting\n    const date = new Date().toISOString();\n\n    await fs.mkdir(scratchDir, { recursive: true });\n    await fs.writeFile(path.join(scratchDir, 'buildstamp'), date);\n\n    // Prepare Dancefile to Access Caches\n    const targetPath = getTargetPath(cacheOptions);\n    const mountArgs = getMountArgsString(cacheOptions);\n\n    const dancefileContent = `\nFROM ${containerImage}\nCOPY buildstamp buildstamp\nRUN --mount=${mountArgs} \\\n    mkdir -p /var/dance-cache/${cacheSource} \\\n    && cp -p -R ${targetPath}/. /var/dance-cache/${cacheSource} || true\n`;\n    await fs.writeFile(path.join(scratchDir, 'Dancefile.extract'), dancefileContent);\n    console.log(\"Extraction Dockerfile content:\");\n    console.log(dancefileContent);\n\n    console.log(`Starting cache extraction for source: ${cacheSource}`);\n    console.log(`Target path: ${getTargetPath(cacheOptions)}`);\n\n    // Extract Data into Docker Image\n    await run('docker', ['buildx', 'build', '--builder', builder, '-f', path.join(scratchDir, 'Dancefile.extract'), '--tag', 'dance:extract', '--load', scratchDir]);\n\n    // Create Extraction Image\n    try {\n        await run('docker', ['rm', '-f', 'cache-container']);\n    } catch (error) {\n        // Ignore error if container does not exist\n    }\n    await run('docker', ['create', '-ti', '--name', 'cache-container', 'dance:extract']);\n\n    // Unpack Docker Image into Scratch\n    await runPiped(\n        ['docker', ['cp', '-L', 'cache-container:/var/dance-cache', '-']],\n        ['tar', ['-H', 'posix', '-x', '-C', scratchDir]]\n    );\n\n    console.log(`Checking extracted content in scratch dir:`);\n    const files = await fs.readdir(path.join(scratchDir, 'dance-cache', cacheSource));\n    console.log('Extracted files:', files);\n\n    // Move Cache into Its Place\n    await run('sudo', ['rm', '-rf', cacheSource]);\n    await fs.rename(path.join(scratchDir, 'dance-cache', cacheSource), cacheSource);\n}\n\nexport async function extractCaches(opts: Opts) {\n    if (opts[\"skip-extraction\"]) {\n        console.log(\"skip-extraction is set. Skipping extraction step...\");\n        return;\n    }\n\n    const cacheMap = getCacheMap(opts);\n    const scratchDir = opts['scratch-dir'];\n    const containerImage = opts['utility-image'];\n    const builder = getBuilder(opts);\n\n    // Extract Caches for each source-target pair\n    for (const [cacheSource, cacheOptions] of Object.entries(cacheMap)) {\n        await extractCache(cacheSource, cacheOptions, scratchDir, containerImage, builder);\n    }\n}\n"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"../"}